import {
  dom_default
} from "./chunk-MOVV2AV2.js";
import "./chunk-S5KM4IGW.js";

// node_modules/@left4code/tw-starter/dist/js/modal.js
(function(dom) {
  function getHighestZindex() {
    let zIndex = 9999;
    dom(".modal").each(function() {
      if (dom(this).css("z-index") !== "auto" && dom(this).css("z-index") > zIndex) {
        zIndex = parseInt(dom(this).css("z-index"));
      }
    });
    return zIndex;
  }
  function getScrollbarWidth(el) {
    return window.innerWidth - dom(el)[0].clientWidth;
  }
  function show(el) {
    if (!dom("[data-modal-replacer='" + dom(el).attr("id") + "']").length) {
      dom(
        '<div data-modal-replacer="' + dom(el).attr("id") + '"></div>'
      ).insertAfter(el);
      dom(el).css({
        "margin-top": 0,
        "margin-left": 0
      });
      dom(el).attr("aria-hidden", false).appendTo("body");
      setTimeout(() => {
        dom(el).addClass("show").css("z-index", getHighestZindex() + 1);
        const event2 = new Event("shown.tw.modal");
        dom(el)[0].dispatchEvent(event2);
      }, 200);
      dom("body").css(
        "padding-right",
        parseInt(dom("body").css("padding-right")) + getScrollbarWidth("html") + "px"
      ).addClass("overflow-y-hidden");
      dom(".modal").removeClass("overflow-y-auto").css("padding-left", "0px");
      dom(el).addClass("overflow-y-auto").css("padding-left", getScrollbarWidth(el) + "px").addClass(dom(".modal.show").length ? "modal-overlap" : "");
      const event = new Event("show.tw.modal");
      dom(el)[0].dispatchEvent(event);
    }
  }
  function hide(el) {
    if (dom(el).hasClass("modal") && dom(el).hasClass("show")) {
      let transitionDuration = parseFloat(dom(el).css("transition-duration").split(",")[1]) * 1e3;
      dom(el).attr("aria-hidden", true).removeClass("show");
      setTimeout(() => {
        dom(el).removeAttr("style").removeClass("modal-overlap").removeClass("overflow-y-auto");
        dom(".modal").each(function() {
          if (parseInt(dom(this).css("z-index")) === getHighestZindex()) {
            dom(this).addClass("overflow-y-auto").css("padding-left", getScrollbarWidth(this) + "px");
          }
        });
        if (getHighestZindex() == 9999) {
          dom("body").removeClass("overflow-y-hidden").css("padding-right", "");
        }
        dom('[data-modal-replacer="' + dom(el).attr("id") + '"]').replaceWith(
          el
        );
        const event2 = new Event("hidden.tw.modal");
        dom(el)[0].dispatchEvent(event2);
      }, transitionDuration);
      const event = new Event("hide.tw.modal");
      dom(el)[0].dispatchEvent(event);
    }
  }
  function toggle(el) {
    if (dom(el).hasClass("modal") && dom(el).hasClass("show")) {
      hide(el);
    } else {
      show(el);
    }
  }
  function createInstance(el) {
    return {
      show() {
        show(el);
      },
      hide() {
        hide(el);
      },
      toggle() {
        toggle(el);
      }
    };
  }
  dom("body").on("click", '[data-tw-toggle="modal"]', function() {
    show(dom(this).attr("data-tw-target"));
  });
  dom("body").on("click", (event) => {
    if (dom(event.target).hasClass("modal") && dom(event.target).hasClass("show")) {
      if (dom(event.target).data("tw-backdrop") !== "static") {
        hide(event.target);
      } else {
        dom(event.target).addClass("modal-static");
        setTimeout(() => {
          dom(event.target).removeClass("modal-static");
        }, 600);
      }
    }
  });
  dom("body").on("click", '[data-tw-dismiss="modal"]', function() {
    let modal = dom(this).closest(".modal")[0];
    hide(modal);
  });
  document.addEventListener("keydown", (event) => {
    if (event.code == "Escape") {
      let el = dom(".modal.show").last();
      if (dom(el).hasClass("modal") && dom(el).hasClass("show") && (dom(el).data("tw-keyboard") === void 0 || dom(el).data("tw-keyboard") !== "false")) {
        if (dom(el).data("tw-backdrop") !== "static") {
          hide(el);
        } else {
          dom(el).addClass("modal-static");
          setTimeout(() => {
            dom(el).removeClass("modal-static");
          }, 600);
        }
      }
    }
  });
  (function init() {
    dom(".modal").each(function() {
      this["__modal"] = createInstance(this);
    });
    if (window.tailwind === void 0)
      window.tailwind = {};
    window.tailwind.Modal = {
      getInstance(el) {
        return el.__modal;
      },
      getOrCreateInstance(el) {
        return el.__modal === void 0 ? createInstance(el) : el.__modal;
      }
    };
  })();
})(dom_default);
//# sourceMappingURL=@left4code_tw-starter_dist_js_modal.js.map
