{
  "version": 3,
  "sources": ["../../@fullcalendar/core/src/Calendar.tsx"],
  "sourcesContent": ["import {\n  CalendarOptions, Action, CalendarContent, render, createElement, DelayedRunner, CssDimValue, applyStyleProp,\n  CalendarApi, CalendarRoot, isArraysEqual, CalendarDataManager, CalendarData,\n  CustomContentRenderContext, flushSync, unmountComponentAtNode,\n} from '@fullcalendar/common'\n\nexport class Calendar extends CalendarApi {\n  currentData: CalendarData\n  renderRunner: DelayedRunner\n  el: HTMLElement\n  isRendering = false\n  isRendered = false\n  currentClassNames: string[] = []\n  customContentRenderId = 0 // will affect custom generated classNames?\n\n  get view() { return this.currentData.viewApi } // for public API\n\n  constructor(el: HTMLElement, optionOverrides: CalendarOptions = {}) {\n    super()\n\n    this.el = el\n    this.renderRunner = new DelayedRunner(this.handleRenderRequest)\n\n    new CalendarDataManager({ // eslint-disable-line no-new\n      optionOverrides,\n      calendarApi: this,\n      onAction: this.handleAction,\n      onData: this.handleData,\n    })\n  }\n\n  handleAction = (action: Action) => {\n    // actions we know we want to render immediately\n    switch (action.type) {\n      case 'SET_EVENT_DRAG':\n      case 'SET_EVENT_RESIZE':\n        this.renderRunner.tryDrain()\n    }\n  }\n\n  handleData = (data: CalendarData) => {\n    this.currentData = data\n    this.renderRunner.request(data.calendarOptions.rerenderDelay)\n  }\n\n  handleRenderRequest = () => {\n    if (this.isRendering) {\n      this.isRendered = true\n      let { currentData } = this\n\n      flushSync(() => {\n        render(\n          <CalendarRoot options={currentData.calendarOptions} theme={currentData.theme} emitter={currentData.emitter}>\n            {(classNames, height, isHeightAuto, forPrint) => {\n              this.setClassNames(classNames)\n              this.setHeight(height)\n\n              return (\n                <CustomContentRenderContext.Provider value={this.customContentRenderId}>\n                  <CalendarContent\n                    isHeightAuto={isHeightAuto}\n                    forPrint={forPrint}\n                    {...currentData}\n                  />\n                </CustomContentRenderContext.Provider>\n              )\n            }}\n          </CalendarRoot>,\n          this.el,\n        )\n      })\n    } else if (this.isRendered) {\n      this.isRendered = false\n      unmountComponentAtNode(this.el)\n      this.setClassNames([])\n      this.setHeight('')\n    }\n  }\n\n  render() {\n    let wasRendering = this.isRendering\n\n    if (!wasRendering) {\n      this.isRendering = true\n    } else {\n      this.customContentRenderId += 1\n    }\n\n    this.renderRunner.request()\n\n    if (wasRendering) {\n      this.updateSize()\n    }\n  }\n\n  destroy() {\n    if (this.isRendering) {\n      this.isRendering = false\n      this.renderRunner.request()\n    }\n  }\n\n  updateSize() {\n    flushSync(() => {\n      super.updateSize()\n    })\n  }\n\n  batchRendering(func) {\n    this.renderRunner.pause('batchRendering')\n    func()\n    this.renderRunner.resume('batchRendering')\n  }\n\n  pauseRendering() { // available to plugins\n    this.renderRunner.pause('pauseRendering')\n  }\n\n  resumeRendering() { // available to plugins\n    this.renderRunner.resume('pauseRendering', true)\n  }\n\n  resetOptions(optionOverrides, append?) {\n    this.currentDataManager.resetOptions(optionOverrides, append)\n  }\n\n  setClassNames(classNames: string[]) {\n    if (!isArraysEqual(classNames, this.currentClassNames)) {\n      let { classList } = this.el\n\n      for (let className of this.currentClassNames) {\n        classList.remove(className)\n      }\n\n      for (let className of classNames) {\n        classList.add(className)\n      }\n\n      this.currentClassNames = classNames\n    }\n  }\n\n  setHeight(height: CssDimValue) {\n    applyStyleProp(this.el, 'height', height)\n  }\n}\n"],
  "mappings": "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",
  "names": ["Calendar"]
}
