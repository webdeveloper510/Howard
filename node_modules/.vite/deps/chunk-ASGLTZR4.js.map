{
  "version": 3,
  "sources": ["../../@left4code/tw-starter/dist/js/dom.js"],
  "sourcesContent": ["export default dom = (() => {\r\n  const getNodeList = (arg) => {\r\n    if (typeof arg === \"string\" && arg.trim().slice(0, 1) !== \"<\") {\r\n      return document.querySelectorAll(arg);\r\n    } else if (typeof arg === \"string\" && arg.trim().slice(0, 1) === \"<\") {\r\n      const dom = domParser(arg);\r\n      return [dom];\r\n    } else if (typeof arg === \"object\" && arg instanceof NodeList) {\r\n      return arg;\r\n    } else if (typeof arg === \"object\" && arg instanceof HTMLElement) {\r\n      return [arg];\r\n    } else if (typeof arg === \"object\" && arg instanceof SVGElement) {\r\n      return [arg];\r\n    } else {\r\n      return arg;\r\n    }\r\n  };\r\n\r\n  const domParser = (arg) => {\r\n    const parser = new DOMParser(),\r\n      content = \"text/html\",\r\n      DOM = parser.parseFromString(arg, content);\r\n    return DOM.body.childNodes[0];\r\n  };\r\n\r\n  const addEvent = (nodeList, event, callback) => {\r\n    nodeList[event] = callback;\r\n  };\r\n\r\n  const uuidv4 = () => {\r\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\r\n      let r = (Math.random() * 16) | 0,\r\n        v = c == \"x\" ? r : (r & 0x3) | 0x8;\r\n      return v.toString(16);\r\n    });\r\n  };\r\n\r\n  const eventPath = (evt) => {\r\n    let path = (evt.composedPath && evt.composedPath()) || evt.path,\r\n      target = evt.target;\r\n\r\n    if (path != null) {\r\n      // Safari doesn't include Window, but it should.\r\n      return path.indexOf(window) < 0 ? path.concat(window) : path;\r\n    }\r\n\r\n    if (target === window) {\r\n      return [window];\r\n    }\r\n\r\n    function getParents(node, memo) {\r\n      memo = memo || [];\r\n      let parentNode = node.parentNode;\r\n\r\n      if (!parentNode) {\r\n        return memo;\r\n      } else {\r\n        return getParents(parentNode, memo.concat(parentNode));\r\n      }\r\n    }\r\n\r\n    return [target].concat(getParents(target), window);\r\n  };\r\n\r\n  const addEvents = (nodeList) => {\r\n    // .on()\r\n    addEvent(nodeList, \"on\", (arg1, arg2, arg3) => {\r\n      nodeList.forEach((node) => {\r\n        node.addEventListener(\r\n          arg1,\r\n          (e) => {\r\n            const uuid = uuidv4();\r\n            if (typeof arg2 === \"string\") {\r\n              eventPath(e).every((parentNode) => {\r\n                if (parentNode.matches && parentNode.matches(arg2)) {\r\n                  parentNode[uuid] = arg3;\r\n                  parentNode[uuid](parentNode);\r\n                  delete parentNode[uuid];\r\n                  return false;\r\n                } else {\r\n                  return true;\r\n                }\r\n              });\r\n            } else {\r\n              node[uuid] = arg2;\r\n              node[uuid](e);\r\n              delete node[uuid];\r\n            }\r\n          },\r\n          false\r\n        );\r\n      });\r\n\r\n      return nodeList;\r\n    });\r\n\r\n    // .css()\r\n    addEvent(nodeList, \"css\", (arg1, arg2) => {\r\n      // Get values\r\n      if (arg2 === undefined && typeof arg1 !== \"object\") {\r\n        return getComputedStyle(nodeList[0])[arg1];\r\n      }\r\n\r\n      // Set values\r\n      nodeList.forEach((node) => {\r\n        if (typeof arg1 === \"object\") {\r\n          for (const [key, val] of Object.entries(arg1)) {\r\n            node.style[key] = val;\r\n          }\r\n        } else {\r\n          node.style[arg1] = arg2;\r\n        }\r\n      });\r\n\r\n      addEvents(nodeList);\r\n      return nodeList;\r\n    });\r\n\r\n    // .slideUp()\r\n    addEvent(nodeList, \"slideUp\", (arg1 = 300, arg2 = () => {}) => {\r\n      nodeList.forEach((node) => {\r\n        node.style.transitionProperty = \"height, margin, padding\";\r\n        node.style.transitionDuration = arg1 + \"ms\";\r\n        node.style.height = node.offsetHeight + \"px\";\r\n        node.offsetHeight;\r\n        node.style.overflow = \"hidden\";\r\n        node.style.height = 0;\r\n        node.style.paddingTop = 0;\r\n        node.style.paddingBottom = 0;\r\n        node.style.marginTop = 0;\r\n        node.style.marginBottom = 0;\r\n        window.setTimeout(() => {\r\n          node.style.display = \"none\";\r\n          node.style.removeProperty(\"height\");\r\n          node.style.removeProperty(\"padding-top\");\r\n          node.style.removeProperty(\"padding-bottom\");\r\n          node.style.removeProperty(\"margin-top\");\r\n          node.style.removeProperty(\"margin-bottom\");\r\n          node.style.removeProperty(\"overflow\");\r\n          node.style.removeProperty(\"transition-duration\");\r\n          node.style.removeProperty(\"transition-property\");\r\n\r\n          const uuid = uuidv4();\r\n          node[uuid] = arg2;\r\n          node[uuid](node);\r\n          delete node[uuid];\r\n        }, arg1);\r\n      });\r\n\r\n      addEvents(nodeList);\r\n      return nodeList;\r\n    });\r\n\r\n    // .slideDown()\r\n    addEvent(nodeList, \"slideDown\", (arg1 = 300, arg2 = () => {}) => {\r\n      nodeList.forEach((node) => {\r\n        node.style.removeProperty(\"display\");\r\n        let display = window.getComputedStyle(node).display;\r\n        if (display === \"none\") display = \"block\";\r\n        node.style.display = display;\r\n        let height = node.offsetHeight;\r\n        node.style.overflow = \"hidden\";\r\n        node.style.height = 0;\r\n        node.style.paddingTop = 0;\r\n        node.style.paddingBottom = 0;\r\n        node.style.marginTop = 0;\r\n        node.style.marginBottom = 0;\r\n        node.offsetHeight;\r\n        node.style.transitionProperty = \"height, margin, padding\";\r\n        node.style.transitionDuration = arg1 + \"ms\";\r\n        node.style.height = height + \"px\";\r\n        node.style.removeProperty(\"padding-top\");\r\n        node.style.removeProperty(\"padding-bottom\");\r\n        node.style.removeProperty(\"margin-top\");\r\n        node.style.removeProperty(\"margin-bottom\");\r\n        window.setTimeout(() => {\r\n          node.style.removeProperty(\"height\");\r\n          node.style.removeProperty(\"overflow\");\r\n          node.style.removeProperty(\"transition-duration\");\r\n          node.style.removeProperty(\"transition-property\");\r\n\r\n          const uuid = uuidv4();\r\n          node[uuid] = arg2;\r\n          node[uuid](node);\r\n          delete node[uuid];\r\n        }, arg1);\r\n      });\r\n\r\n      addEvents(nodeList);\r\n      return nodeList;\r\n    });\r\n\r\n    // .fadeOut()\r\n    addEvent(nodeList, \"fadeOut\", (arg1 = 300, arg2 = () => {}) => {\r\n      nodeList.forEach((node) => {\r\n        node.style.opacity = 1;\r\n        node.style.transitionProperty = \"opacity\";\r\n        node.style.transitionDuration = arg1 + \"ms\";\r\n        node.style.opacity = 0;\r\n        window.setTimeout(() => {\r\n          node.style.display = \"none\";\r\n          node.style.removeProperty(\"transition-property\");\r\n          node.style.removeProperty(\"transition-duration\");\r\n          node.style.removeProperty(\"opacity\");\r\n\r\n          const uuid = uuidv4();\r\n          node[uuid] = arg2;\r\n          node[uuid](node);\r\n          delete node[uuid];\r\n        }, arg1);\r\n      });\r\n\r\n      addEvents(nodeList);\r\n      return nodeList;\r\n    });\r\n\r\n    // .fadeIn()\r\n    addEvent(nodeList, \"fadeIn\", (arg1 = 300, arg2 = () => {}) => {\r\n      nodeList.forEach((node) => {\r\n        let display = window.getComputedStyle(node).display;\r\n        if (display === \"none\") display = \"block\";\r\n        node.style.display = display;\r\n        node.style.opacity = 0;\r\n        node.style.transitionProperty = \"opacity\";\r\n        node.style.transitionDuration = arg1 + \"ms\";\r\n        window.setTimeout(() => {\r\n          node.style.opacity = 1;\r\n          window.setTimeout(() => {\r\n            node.style.removeProperty(\"transition-property\");\r\n            node.style.removeProperty(\"transition-duration\");\r\n            node.style.removeProperty(\"opacity\");\r\n          }, arg1);\r\n\r\n          const uuid = uuidv4();\r\n          node[uuid] = arg2;\r\n          node[uuid](node);\r\n          delete node[uuid];\r\n        }, arg1);\r\n      });\r\n\r\n      addEvents(nodeList);\r\n      return nodeList;\r\n    });\r\n\r\n    // .hide()\r\n    addEvent(nodeList, \"hide\", () => {\r\n      nodeList.forEach((node) => {\r\n        node.style.display = \"none\";\r\n      });\r\n\r\n      addEvents(nodeList);\r\n      return nodeList;\r\n    });\r\n\r\n    // .show()\r\n    addEvent(nodeList, \"show\", () => {\r\n      nodeList.forEach((node) => {\r\n        if (node.style.display === \"none\") {\r\n          node.style.display = \"block\";\r\n        }\r\n      });\r\n\r\n      addEvents(nodeList);\r\n      return nodeList;\r\n    });\r\n\r\n    // .clone()\r\n    addEvent(nodeList, \"clone\", () => {\r\n      let clonedNodes = [];\r\n      nodeList.forEach((node) => {\r\n        clonedNodes.push(node.cloneNode(true));\r\n      });\r\n\r\n      addEvents(clonedNodes);\r\n      return clonedNodes;\r\n    });\r\n\r\n    // .each()\r\n    addEvent(nodeList, \"each\", (arg1) => {\r\n      nodeList.forEach((node, index) => {\r\n        const uuid = uuidv4();\r\n        node[uuid] = arg1;\r\n        node[uuid](index, node);\r\n        delete node[uuid];\r\n      });\r\n\r\n      addEvents(nodeList);\r\n      return nodeList;\r\n    });\r\n\r\n    // .find()\r\n    addEvent(nodeList, \"find\", (arg1) => {\r\n      let results = [];\r\n      nodeList.forEach((node) => {\r\n        const matchedNodes = node.querySelectorAll(arg1);\r\n        if (matchedNodes.length) {\r\n          matchedNodes.forEach((matchedNode) => {\r\n            results.push(matchedNode);\r\n          });\r\n        }\r\n      });\r\n\r\n      addEvents(results);\r\n      return results;\r\n    });\r\n\r\n    // .hasClass()\r\n    addEvent(nodeList, \"hasClass\", (arg1) => {\r\n      let found = false;\r\n      nodeList.forEach((node) => {\r\n        if (node.classList.contains(arg1)) found = true;\r\n      });\r\n      return found;\r\n    });\r\n\r\n    // .removeClass()\r\n    addEvent(nodeList, \"removeClass\", (arg1) => {\r\n      if (arg1.length) {\r\n        arg1.split(\" \").forEach((classname) => {\r\n          nodeList.forEach((node) => {\r\n            node.classList.remove(classname);\r\n          });\r\n        });\r\n      }\r\n\r\n      addEvents(nodeList);\r\n      return nodeList;\r\n    });\r\n\r\n    // .addClass()\r\n    addEvent(nodeList, \"addClass\", (arg1) => {\r\n      if (arg1.length) {\r\n        arg1.split(\" \").forEach((classname) => {\r\n          nodeList.forEach((node) => {\r\n            node.classList.add(classname);\r\n          });\r\n        });\r\n      }\r\n\r\n      addEvents(nodeList);\r\n      return nodeList;\r\n    });\r\n\r\n    // .is()\r\n    addEvent(nodeList, \"is\", (arg1) => {\r\n      if (typeof arg1 === \"string\") {\r\n        return (\r\n          nodeList[0].matches ||\r\n          nodeList[0].matchesSelector ||\r\n          nodeList[0].msMatchesSelector ||\r\n          nodeList[0].mozMatchesSelector ||\r\n          nodeList[0].webkitMatchesSelector ||\r\n          nodeList[0].oMatchesSelector\r\n        ).call(nodeList[0], arg1);\r\n      } else {\r\n        return nodeList[0] === arg1;\r\n      }\r\n    });\r\n\r\n    // .attr()\r\n    addEvent(nodeList, \"attr\", (arg1, arg2) => {\r\n      if (arg2 === undefined && typeof arg1 !== \"object\") {\r\n        if (nodeList[0] !== undefined) {\r\n          const attr = nodeList[0].getAttribute(arg1);\r\n          return attr === null ? undefined : attr;\r\n        } else {\r\n          return undefined;\r\n        }\r\n      }\r\n\r\n      nodeList.forEach((node) => {\r\n        if (typeof arg1 === \"object\") {\r\n          for (const [key, val] of Object.entries(arg1)) {\r\n            node.setAttribute(key, val);\r\n          }\r\n        } else {\r\n          node.setAttribute(arg1, arg2);\r\n        }\r\n      });\r\n\r\n      addEvents(nodeList);\r\n      return nodeList;\r\n    });\r\n\r\n    // .removeAttr()\r\n    addEvent(nodeList, \"removeAttr\", (arg1) => {\r\n      nodeList.forEach((node) => {\r\n        node.removeAttribute(arg1);\r\n      });\r\n\r\n      addEvents(nodeList);\r\n      return nodeList;\r\n    });\r\n\r\n    // .data()\r\n    addEvent(nodeList, \"data\", (arg1, arg2) => {\r\n      if (arg2 === undefined) {\r\n        const attr = nodeList[0].getAttribute(`data-${arg1}`);\r\n        return attr === null ? undefined : attr;\r\n      }\r\n\r\n      nodeList.forEach((node) => {\r\n        node.setAttribute(`data-${arg1}`, arg2);\r\n      });\r\n\r\n      addEvents(nodeList);\r\n      return nodeList;\r\n    });\r\n\r\n    // .width()\r\n    addEvent(nodeList, \"width\", (arg1) => {\r\n      if (arg1 === undefined) {\r\n        if (nodeList === window) {\r\n          return parseInt(window.innerWidth);\r\n        } else {\r\n          return typeof nodeList[0] !== \"undefined\"\r\n            ? parseInt(getComputedStyle(nodeList[0])[\"width\"])\r\n            : null;\r\n        }\r\n      }\r\n\r\n      if (nodeList === window) {\r\n        window.resizeTo(arg1, window.innerHeight);\r\n      } else {\r\n        nodeList.forEach((node) => {\r\n          node.style[\"width\"] = arg1;\r\n        });\r\n      }\r\n\r\n      addEvents(nodeList);\r\n      return nodeList;\r\n    });\r\n\r\n    // .height()\r\n    addEvent(nodeList, \"height\", (arg1) => {\r\n      if (arg1 === undefined) {\r\n        if (nodeList === window) {\r\n          return parseInt(window.innerHeight);\r\n        } else {\r\n          return typeof nodeList[0] !== \"undefined\"\r\n            ? parseInt(getComputedStyle(nodeList[0])[\"height\"])\r\n            : null;\r\n        }\r\n      }\r\n\r\n      if (nodeList === window) {\r\n        window.resizeTo(window.innerWidth, arg1);\r\n      } else {\r\n        nodeList.forEach((node) => {\r\n          node.style[\"height\"] = arg1;\r\n        });\r\n      }\r\n\r\n      addEvents(nodeList);\r\n      return nodeList;\r\n    });\r\n\r\n    // .css()\r\n    addEvent(nodeList, \"css\", (arg1, arg2) => {\r\n      if (arg2 === undefined && typeof arg1 !== \"object\") {\r\n        return getComputedStyle(nodeList[0])[arg1];\r\n      }\r\n\r\n      nodeList.forEach((node) => {\r\n        if (typeof arg1 === \"object\") {\r\n          for (const [key, val] of Object.entries(arg1)) {\r\n            node.style[key] = val;\r\n          }\r\n        } else {\r\n          node.style[arg1] = arg2;\r\n        }\r\n      });\r\n\r\n      addEvents(nodeList);\r\n      return nodeList;\r\n    });\r\n\r\n    // .replaceWith()\r\n    addEvent(nodeList, \"replaceWith\", (arg1) => {\r\n      const replacerNodes = [];\r\n      const argumentTypes = getNodeList(arg1);\r\n\r\n      nodeList.forEach((node, key) => {\r\n        argumentTypes.forEach((replacerNode) => {\r\n          let dom = replacerNode;\r\n          if (key > 0) {\r\n            dom = replacerNode.cloneNode(true);\r\n          }\r\n\r\n          node.parentNode.insertBefore(dom, node.nextSibling);\r\n          replacerNodes.push(dom);\r\n        });\r\n        node.remove();\r\n      });\r\n\r\n      addEvents(replacerNodes);\r\n      return replacerNodes;\r\n    });\r\n\r\n    // .insertAfter()\r\n    addEvent(nodeList, \"insertAfter\", (arg1) => {\r\n      const insertedNodes = [];\r\n      const argumentTypes = getNodeList(arg1);\r\n\r\n      nodeList.forEach((node) => {\r\n        argumentTypes.forEach((targetNode, key) => {\r\n          let dom = node;\r\n          if (key > 0) {\r\n            dom = node.cloneNode(true);\r\n          }\r\n\r\n          targetNode.parentNode.insertBefore(dom, targetNode.nextSibling);\r\n          insertedNodes.push(dom);\r\n        });\r\n      });\r\n\r\n      addEvents(insertedNodes);\r\n      return insertedNodes;\r\n    });\r\n\r\n    // .appendTo()\r\n    addEvent(nodeList, \"appendTo\", (arg1) => {\r\n      const appendedNodes = [];\r\n      const argumentTypes = getNodeList(arg1);\r\n\r\n      nodeList.forEach((node) => {\r\n        argumentTypes.forEach((targetNode, key) => {\r\n          let dom = node;\r\n          if (key > 0) {\r\n            dom = node.cloneNode(true);\r\n          }\r\n\r\n          targetNode.appendChild(dom);\r\n          appendedNodes.push(dom);\r\n        });\r\n      });\r\n\r\n      addEvents(appendedNodes);\r\n      return appendedNodes;\r\n    });\r\n\r\n    // .append()\r\n    addEvent(nodeList, \"append\", (arg1) => {\r\n      const argumentTypes = getNodeList(arg1);\r\n\r\n      nodeList.forEach((node, key) => {\r\n        argumentTypes.forEach((appendNode) => {\r\n          let dom = appendNode;\r\n          if (key > 0) {\r\n            dom = appendNode.cloneNode(true);\r\n          }\r\n\r\n          node.appendChild(dom);\r\n        });\r\n      });\r\n\r\n      addEvents(nodeList);\r\n      return nodeList;\r\n    });\r\n\r\n    // .remove()\r\n    addEvent(nodeList, \"remove\", () => {\r\n      nodeList.forEach((node) => {\r\n        if (node.parentNode !== null) {\r\n          node.parentNode.removeChild(node);\r\n        }\r\n      });\r\n\r\n      addEvents(nodeList);\r\n      return nodeList;\r\n    });\r\n\r\n    // .first()\r\n    addEvent(nodeList, \"first\", () => {\r\n      const firstNode = nodeList[0] !== undefined ? [nodeList[0]] : [];\r\n      addEvents(firstNode);\r\n      return firstNode;\r\n    });\r\n\r\n    // .last()\r\n    addEvent(nodeList, \"last\", () => {\r\n      const lastNodeList =\r\n        nodeList[nodeList.length - 1] !== undefined\r\n          ? [nodeList[nodeList.length - 1]]\r\n          : [];\r\n\r\n      addEvents(lastNodeList);\r\n      return lastNodeList;\r\n    });\r\n\r\n    // .val()\r\n    addEvent(nodeList, \"val\", (arg1) => {\r\n      if (arg1 === undefined) {\r\n        if (nodeList[0] instanceof HTMLSelectElement && nodeList[0].multiple) {\r\n          const selectedOptions = [];\r\n          for (const selectedOption of nodeList[0].selectedOptions) {\r\n            selectedOptions.push(selectedOption.value);\r\n          }\r\n          return selectedOptions;\r\n        } else {\r\n          return nodeList[0].value;\r\n        }\r\n      }\r\n\r\n      nodeList.forEach((node) => {\r\n        if (node instanceof HTMLSelectElement) {\r\n          node.value = \"\";\r\n\r\n          if (typeof arg1 !== \"object\") {\r\n            arg1 = [arg1];\r\n          }\r\n\r\n          for (const value of arg1) {\r\n            const selectedOption = Array.from(node).find(\r\n              (option) => option.value == value\r\n            );\r\n\r\n            if (selectedOption !== undefined) {\r\n              selectedOption.selected = true;\r\n            }\r\n          }\r\n        } else {\r\n          node.value = arg1;\r\n        }\r\n      });\r\n\r\n      addEvents(nodeList);\r\n      return nodeList;\r\n    });\r\n\r\n    // .html()\r\n    addEvent(nodeList, \"html\", (arg1) => {\r\n      if (arg1 === undefined) {\r\n        return nodeList[0].innerHTML;\r\n      }\r\n\r\n      nodeList.forEach((node) => {\r\n        node.innerHTML = arg1;\r\n      });\r\n\r\n      addEvents(nodeList);\r\n      return nodeList;\r\n    });\r\n\r\n    // .text()\r\n    addEvent(nodeList, \"text\", (arg1) => {\r\n      if (arg1 === undefined) {\r\n        return nodeList[0].textContent;\r\n      }\r\n\r\n      nodeList.forEach((node) => {\r\n        node.textContent = arg1;\r\n      });\r\n\r\n      addEvents(nodeList);\r\n      return nodeList;\r\n    });\r\n\r\n    // .filter()\r\n    addEvent(nodeList, \"filter\", (arg1) => {\r\n      let results = [];\r\n      nodeList.forEach((node, index) => {\r\n        const uuid = uuidv4();\r\n        node[uuid] = arg1;\r\n        const filter = node[uuid](index, node);\r\n        delete node[uuid];\r\n\r\n        if (filter) {\r\n          results.push(node);\r\n        }\r\n      });\r\n\r\n      addEvents(results);\r\n      return results;\r\n    });\r\n\r\n    // .closest()\r\n    addEvent(nodeList, \"closest\", (arg1) => {\r\n      let results = [];\r\n      nodeList.forEach((node) => {\r\n        const matchedNode = node.closest(arg1);\r\n        if (\r\n          matchedNode !== null &&\r\n          !results.filter((resNode) => resNode === matchedNode).length\r\n        )\r\n          results.push(matchedNode);\r\n      });\r\n\r\n      addEvents(results);\r\n      return results;\r\n    });\r\n\r\n    // .children()\r\n    addEvent(nodeList, \"children\", (arg1) => {\r\n      let results = [];\r\n\r\n      nodeList.forEach((node) => {\r\n        for (const matchedNode of node.children) {\r\n          if (arg1 === undefined) {\r\n            results.push(matchedNode);\r\n          } else {\r\n            for (const childNode of node.querySelectorAll(arg1)) {\r\n              if (childNode === matchedNode) results.push(childNode);\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      addEvents(results);\r\n      return results;\r\n    });\r\n\r\n    // .parent()\r\n    addEvent(nodeList, \"parent\", () => {\r\n      let results = [];\r\n      nodeList.forEach((node) => {\r\n        const matchedNode = node.parentNode;\r\n        if (\r\n          matchedNode !== null &&\r\n          !results.filter((resNode) => resNode === matchedNode).length\r\n        )\r\n          results.push(matchedNode);\r\n      });\r\n\r\n      addEvents(results);\r\n      return results;\r\n    });\r\n\r\n    // .prev()\r\n    addEvent(nodeList, \"prev\", () => {\r\n      let results = [];\r\n      nodeList.forEach((node) => {\r\n        if (node.previousElementSibling !== null) {\r\n          results.push(node.previousElementSibling);\r\n        }\r\n      });\r\n\r\n      addEvents(results);\r\n      return results;\r\n    });\r\n\r\n    // .next()\r\n    addEvent(nodeList, \"next\", () => {\r\n      let results = [];\r\n      nodeList.forEach((node) => {\r\n        if (node.nextElementSibling !== null) {\r\n          results.push(node.nextElementSibling);\r\n        }\r\n      });\r\n\r\n      addEvents(results);\r\n      return results;\r\n    });\r\n  };\r\n\r\n  return (window.dom = (arg) => {\r\n    const nodeList = getNodeList(arg);\r\n    addEvents(nodeList);\r\n    return nodeList;\r\n  });\r\n})();\r\n"],
  "mappings": "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",
  "names": ["dom"]
}
