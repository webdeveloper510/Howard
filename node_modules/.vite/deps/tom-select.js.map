{
  "version": 3,
  "sources": ["../../tom-select/src/contrib/microevent.ts", "../../tom-select/src/contrib/microplugin.ts", "../../sifter.js/lib/diacritics.ts", "../../sifter.js/lib/utils.ts", "../../sifter.js/lib/sifter.ts", "../../tom-select/src/vanilla.ts", "../../tom-select/src/contrib/highlight.ts", "../../tom-select/src/constants.ts", "../../tom-select/src/defaults.ts", "../../tom-select/src/utils.ts", "../../tom-select/src/getSettings.ts", "../../tom-select/src/tom-select.ts", "../../tom-select/src/plugins/change_listener/plugin.ts", "../../tom-select/src/plugins/checkbox_options/plugin.ts", "../../tom-select/src/plugins/clear_button/plugin.ts", "../../tom-select/src/plugins/drag_drop/plugin.ts", "../../tom-select/src/plugins/dropdown_header/plugin.ts", "../../tom-select/src/plugins/dropdown_input/plugin.ts", "../../tom-select/src/plugins/input_autogrow/plugin.ts", "../../tom-select/src/plugins/no_backspace_delete/plugin.ts", "../../tom-select/src/plugins/no_active_items/plugin.ts", "../../tom-select/src/plugins/optgroup_columns/plugin.ts", "../../tom-select/src/plugins/remove_button/plugin.ts", "../../tom-select/src/plugins/restore_on_backspace/plugin.ts", "../../tom-select/src/plugins/virtual_scroll/plugin.ts", "dep:tom-select"],
  "sourcesContent": ["/**\n * MicroEvent - to make any js object an event emitter\n *\n * - pure javascript - server compatible, browser compatible\n * - dont rely on the browser doms\n * - super simple - you get it immediatly, no mistery, no magic involved\n *\n * @author Jerome Etienne (https://github.com/jeromeetienne)\n */\n\ntype TCallback = (...args:any) => any;\n\n/**\n * Execute callback for each event in space separated list of event names\n *\n */\nfunction forEvents(events:string,callback:(event:string)=>any){\n\tevents.split(/\\s+/).forEach((event) =>{\n\t\tcallback(event);\n\t});\n}\n\nexport default class MicroEvent{\n\n\tpublic _events: {[key:string]:TCallback[]};\n\n\tconstructor(){\n\t\tthis._events = {};\n\t}\n\n\ton(events:string, fct:TCallback){\n\t\tforEvents(events,(event) => {\n\t\t\tthis._events[event] = this._events[event] || [];\n\t\t\tthis._events[event].push(fct);\n\t\t});\n\t}\n\n\toff(events:string, fct:TCallback){\n\t\tvar n = arguments.length;\n\t\tif( n === 0 ){\n\t\t\tthis._events = {};\n\t\t\treturn;\n\t\t}\n\n\t\tforEvents(events,(event) => {\n\n\t\t\tif (n === 1) return delete this._events[event];\n\n\t\t\tif (event in this._events === false) return;\n\t\t\tthis._events[event].splice(this._events[event].indexOf(fct), 1);\n\t\t});\n\t}\n\n\ttrigger(events:string, ...args:any){\n\t\tvar self = this;\n\n\t\tforEvents(events,(event) => {\n\t\t\tif(event in self._events === false) return;\n\t\t\tfor( let fct of self._events[event] ){\n\t\t\t\tfct.apply(self, args );\n\t\t\t}\n\t\t});\n\t}\n};\n", "/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\ntype TSettings = {\n\t[key:string]:any\n}\n\ntype TPlugins = {\n\tnames: string[],\n\tsettings: TSettings,\n\trequested: {[key:string]:boolean},\n\tloaded: {[key:string]:any}\n};\n\ntype TPluginItem = {name:string,options:{}};\ntype TPluginHash = {[key:string]:{}};\n\n\n\n\nexport default function MicroPlugin(Interface: any ){\n\n\tInterface.plugins = {};\n\n\treturn class extends Interface{\n\n\t\tpublic plugins:TPlugins = {\n\t\t\tnames     : [],\n\t\t\tsettings  : {},\n\t\t\trequested : {},\n\t\t\tloaded    : {}\n\t\t};\n\n\t\t/**\n\t\t * Registers a plugin.\n\t\t *\n\t\t * @param {function} fn\n\t\t */\n\t\tstatic define(name:string, fn:(this:any,settings:TSettings)=>any){\n\t\t\tInterface.plugins[name] = {\n\t\t\t\t'name' : name,\n\t\t\t\t'fn'   : fn\n\t\t\t};\n\t\t}\n\n\n\t\t/**\n\t\t * Initializes the listed plugins (with options).\n\t\t * Acceptable formats:\n\t\t *\n\t\t * List (without options):\n\t\t *   ['a', 'b', 'c']\n\t\t *\n\t\t * List (with options):\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t\t *\n\t\t * Hash (with options):\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t\t *\n\t\t * @param {array|object} plugins\n\t\t */\n\t\tinitializePlugins(plugins:string[]|TPluginItem[]|TPluginHash) {\n\t\t\tvar key, name;\n\t\t\tconst self  = this;\n\t\t\tconst queue:string[] = [];\n\n\t\t\tif (Array.isArray(plugins)) {\n\t\t\t\tplugins.forEach((plugin:string|TPluginItem)=>{\n\t\t\t\t\tif (typeof plugin === 'string') {\n\t\t\t\t\t\tqueue.push(plugin);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.plugins.settings[plugin.name] = plugin.options;\n\t\t\t\t\t\tqueue.push(plugin.name);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (plugins) {\n\t\t\t\tfor (key in plugins) {\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\n\t\t\t\t\t\tqueue.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile( name = queue.shift() ){\n\t\t\t\tself.require(name);\n\t\t\t}\n\t\t}\n\n\t\tloadPlugin(name:string) {\n\t\t\tvar self    = this;\n\t\t\tvar plugins = self.plugins;\n\t\t\tvar plugin  = Interface.plugins[name];\n\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\n\t\t\t}\n\n\t\t\tplugins.requested[name] = true;\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t\t\tplugins.names.push(name);\n\t\t}\n\n\t\t/**\n\t\t * Initializes a plugin.\n\t\t *\n\t\t */\n\t\trequire(name:string) {\n\t\t\tvar self = this;\n\t\t\tvar plugins = self.plugins;\n\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\n\t\t\t\tif (plugins.requested[name]) {\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\n\t\t\t\t}\n\t\t\t\tself.loadPlugin(name);\n\t\t\t}\n\n\t\t\treturn plugins.loaded[name];\n\t\t}\n\n\t};\n\n}\n", "\ntype TDiacraticList = {[key:string]:string};\n\n// https://github.com/andrewrk/node-diacritics/blob/master/index.js\n\nvar latin_pat:RegExp;\nconst accent_pat = '[\\u0300-\\u036F\\u{b7}\\u{2be}]'; // \\u{2bc}\nconst accent_reg = new RegExp(accent_pat,'g');\nvar diacritic_patterns:TDiacraticList;\n\nconst latin_convert:TDiacraticList = {\n\t'\u00E6': 'ae',\n\t'\u2C65': 'a',\n\t'\u00F8': 'o',\n};\n\nconst convert_pat = new RegExp(Object.keys(latin_convert).join('|'),'g');\n\n\nexport const DIACRITICS:TDiacraticList = {\n\t\" \":\"\u00A0\",\n\t0:\"\u07C0\",\n\tA:\"\u24B6\uFF21\u00C0\u00C1\u00C2\u1EA6\u1EA4\u1EAA\u1EA8\u00C3\u0100\u0102\u1EB0\u1EAE\u1EB4\u1EB2\u0226\u01E0\u00C4\u01DE\u1EA2\u00C5\u01FA\u01CD\u0200\u0202\u1EA0\u1EAC\u1EB6\u1E00\u0104\u023A\u2C6F\",\n\tAA:\"\uA732\",\n\tAE:\"\u00C6\u01FC\u01E2\",\n\tAO:\"\uA734\",\n\tAU:\"\uA736\",\n\tAV:\"\uA738\uA73A\",\n\tAY:\"\uA73C\",\n\tB:\"\u24B7\uFF22\u1E02\u1E04\u1E06\u0243\u0181\",\n\tC:\"\u24B8\uFF23\uA73E\u1E08\u0106C\u0108\u010A\u010C\u00C7\u0187\u023B\",\n\tD:\"\u24B9\uFF24\u1E0A\u010E\u1E0C\u1E10\u1E12\u1E0E\u0110\u018A\u0189\u1D05\uA779\",\n\tDh:\"\u00D0\",\n\tDZ:\"\u01F1\u01C4\",\n\tDz:\"\u01F2\u01C5\",\n\tE:\"\u025B\u24BA\uFF25\u00C8\u00C9\u00CA\u1EC0\u1EBE\u1EC4\u1EC2\u1EBC\u0112\u1E14\u1E16\u0114\u0116\u00CB\u1EBA\u011A\u0204\u0206\u1EB8\u1EC6\u0228\u1E1C\u0118\u1E18\u1E1A\u0190\u018E\u1D07\",\n\tF:\"\uA77C\u24BB\uFF26\u1E1E\u0191\uA77B\",\n\tG:\"\u24BC\uFF27\u01F4\u011C\u1E20\u011E\u0120\u01E6\u0122\u01E4\u0193\uA7A0\uA77D\uA77E\u0262\",\n\tH:\"\u24BD\uFF28\u0124\u1E22\u1E26\u021E\u1E24\u1E28\u1E2A\u0126\u2C67\u2C75\uA78D\",\n\tI:\"\u24BE\uFF29\u00CC\u00CD\u00CE\u0128\u012A\u012C\u0130\u00CF\u1E2E\u1EC8\u01CF\u0208\u020A\u1ECA\u012E\u1E2C\u0197\",\n\tJ:\"\u24BF\uFF2A\u0134\u0248\u0237\",\n\tK:\"\u24C0\uFF2B\u1E30\u01E8\u1E32\u0136\u1E34\u0198\u2C69\uA740\uA742\uA744\uA7A2\",\n\tL:\"\u24C1\uFF2C\u013F\u0139\u013D\u1E36\u1E38\u013B\u1E3C\u1E3A\u0141\u023D\u2C62\u2C60\uA748\uA746\uA780\",\n\tLJ:\"\u01C7\",\n\tLj:\"\u01C8\",\n\tM:\"\u24C2\uFF2D\u1E3E\u1E40\u1E42\u2C6E\u019C\u03FB\",\n\tN:\"\uA7A4\u0220\u24C3\uFF2E\u01F8\u0143\u00D1\u1E44\u0147\u1E46\u0145\u1E4A\u1E48\u019D\uA790\u1D0E\",\n\tNJ:\"\u01CA\",\n\tNj:\"\u01CB\",\n\tO:\"\u24C4\uFF2F\u00D2\u00D3\u00D4\u1ED2\u1ED0\u1ED6\u1ED4\u00D5\u1E4C\u022C\u1E4E\u014C\u1E50\u1E52\u014E\u022E\u0230\u00D6\u022A\u1ECE\u0150\u01D1\u020C\u020E\u01A0\u1EDC\u1EDA\u1EE0\u1EDE\u1EE2\u1ECC\u1ED8\u01EA\u01EC\u00D8\u01FE\u0186\u019F\uA74A\uA74C\",\n\tOE:\"\u0152\",\n\tOI:\"\u01A2\",\n\tOO:\"\uA74E\",\n\tOU:\"\u0222\",\n\tP:\"\u24C5\uFF30\u1E54\u1E56\u01A4\u2C63\uA750\uA752\uA754\",\n\tQ:\"\u24C6\uFF31\uA756\uA758\u024A\",\n\tR:\"\u24C7\uFF32\u0154\u1E58\u0158\u0210\u0212\u1E5A\u1E5C\u0156\u1E5E\u024C\u2C64\uA75A\uA7A6\uA782\",\n\tS:\"\u24C8\uFF33\u1E9E\u015A\u1E64\u015C\u1E60\u0160\u1E66\u1E62\u1E68\u0218\u015E\u2C7E\uA7A8\uA784\",\n\tT:\"\u24C9\uFF34\u1E6A\u0164\u1E6C\u021A\u0162\u1E70\u1E6E\u0166\u01AC\u01AE\u023E\uA786\",\n\tTh:\"\u00DE\",\n\tTZ:\"\uA728\",\n\tU:\"\u24CA\uFF35\u00D9\u00DA\u00DB\u0168\u1E78\u016A\u1E7A\u016C\u00DC\u01DB\u01D7\u01D5\u01D9\u1EE6\u016E\u0170\u01D3\u0214\u0216\u01AF\u1EEA\u1EE8\u1EEE\u1EEC\u1EF0\u1EE4\u1E72\u0172\u1E76\u1E74\u0244\",\n\tV:\"\u24CB\uFF36\u1E7C\u1E7E\u01B2\uA75E\u0245\",\n\tVY:\"\uA760\",\n\tW:\"\u24CC\uFF37\u1E80\u1E82\u0174\u1E86\u1E84\u1E88\u2C72\",\n\tX:\"\u24CD\uFF38\u1E8A\u1E8C\",\n\tY:\"\u24CE\uFF39\u1EF2\u00DD\u0176\u1EF8\u0232\u1E8E\u0178\u1EF6\u1EF4\u01B3\u024E\u1EFE\",\n\tZ:\"\u24CF\uFF3A\u0179\u1E90\u017B\u017D\u1E92\u1E94\u01B5\u0224\u2C7F\u2C6B\uA762\",\n\ta:\"\u24D0\uFF41\u1E9A\u00E0\u00E1\u00E2\u1EA7\u1EA5\u1EAB\u1EA9\u00E3\u0101\u0103\u1EB1\u1EAF\u1EB5\u1EB3\u0227\u01E1\u00E4\u01DF\u1EA3\u00E5\u01FB\u01CE\u0201\u0203\u1EA1\u1EAD\u1EB7\u1E01\u0105\u2C65\u0250\u0251\",\n\taa:\"\uA733\",\n\tae:\"\u00E6\u01FD\u01E3\",\n\tao:\"\uA735\",\n\tau:\"\uA737\",\n\tav:\"\uA739\uA73B\",\n\tay:\"\uA73D\",\n\tb:\"\u24D1\uFF42\u1E03\u1E05\u1E07\u0180\u0183\u0253\u0182\",\n\tc:\"\uFF43\u24D2\u0107\u0109\u010B\u010D\u00E7\u1E09\u0188\u023C\uA73F\u2184\",\n\td:\"\u24D3\uFF44\u1E0B\u010F\u1E0D\u1E11\u1E13\u1E0F\u0111\u018C\u0256\u0257\u018B\u13E7\u0501\uA7AA\",\n\tdh:\"\u00F0\",\n\tdz:\"\u01F3\u01C6\",\n\te:\"\u24D4\uFF45\u00E8\u00E9\u00EA\u1EC1\u1EBF\u1EC5\u1EC3\u1EBD\u0113\u1E15\u1E17\u0115\u0117\u00EB\u1EBB\u011B\u0205\u0207\u1EB9\u1EC7\u0229\u1E1D\u0119\u1E19\u1E1B\u0247\u01DD\",\n\tf:\"\u24D5\uFF46\u1E1F\u0192\",\n\tff:\"\uFB00\",\n\tfi:\"\uFB01\",\n\tfl:\"\uFB02\",\n\tffi:\"\uFB03\",\n\tffl:\"\uFB04\",\n\tg:\"\u24D6\uFF47\u01F5\u011D\u1E21\u011F\u0121\u01E7\u0123\u01E5\u0260\uA7A1\uA77F\u1D79\",\n\th:\"\u24D7\uFF48\u0125\u1E23\u1E27\u021F\u1E25\u1E29\u1E2B\u1E96\u0127\u2C68\u2C76\u0265\",\n\thv:\"\u0195\",\n\ti:\"\u24D8\uFF49\u00EC\u00ED\u00EE\u0129\u012B\u012D\u00EF\u1E2F\u1EC9\u01D0\u0209\u020B\u1ECB\u012F\u1E2D\u0268\u0131\",\n\tj:\"\u24D9\uFF4A\u0135\u01F0\u0249\",\n\tk:\"\u24DA\uFF4B\u1E31\u01E9\u1E33\u0137\u1E35\u0199\u2C6A\uA741\uA743\uA745\uA7A3\",\n\tl:\"\u24DB\uFF4C\u0140\u013A\u013E\u1E37\u1E39\u013C\u1E3D\u1E3B\u017F\u0142\u019A\u026B\u2C61\uA749\uA781\uA747\u026D\",\n\tlj:\"\u01C9\",\n\tm:\"\u24DC\uFF4D\u1E3F\u1E41\u1E43\u0271\u026F\",\n\tn:\"\u24DD\uFF4E\u01F9\u0144\u00F1\u1E45\u0148\u1E47\u0146\u1E4B\u1E49\u019E\u0272\u0149\uA791\uA7A5\u043B\u0509\",\n\tnj:\"\u01CC\",\n\to:\"\u24DE\uFF4F\u00F2\u00F3\u00F4\u1ED3\u1ED1\u1ED7\u1ED5\u00F5\u1E4D\u022D\u1E4F\u014D\u1E51\u1E53\u014F\u022F\u0231\u00F6\u022B\u1ECF\u0151\u01D2\u020D\u020F\u01A1\u1EDD\u1EDB\u1EE1\u1EDF\u1EE3\u1ECD\u1ED9\u01EB\u01ED\u00F8\u01FF\uA74B\uA74D\u0275\u0254\u1D11\",\n\toe:\"\u0153\",\n\toi:\"\u01A3\",\n\too:\"\uA74F\",\n\tou:\"\u0223\",\n\tp:\"\u24DF\uFF50\u1E55\u1E57\u01A5\u1D7D\uA751\uA753\uA755\u03C1\",\n\tq:\"\u24E0\uFF51\u024B\uA757\uA759\",\n\tr:\"\u24E1\uFF52\u0155\u1E59\u0159\u0211\u0213\u1E5B\u1E5D\u0157\u1E5F\u024D\u027D\uA75B\uA7A7\uA783\",\n\ts:\"\u24E2\uFF53\u015B\u1E65\u015D\u1E61\u0161\u1E67\u1E63\u1E69\u0219\u015F\u023F\uA7A9\uA785\u1E9B\u0282\",\n\tss:\"\u00DF\",\n\tt:\"\u24E3\uFF54\u1E6B\u1E97\u0165\u1E6D\u021B\u0163\u1E71\u1E6F\u0167\u01AD\u0288\u2C66\uA787\",\n\tth:\"\u00FE\",\n\ttz:\"\uA729\",\n\tu:\"\u24E4\uFF55\u00F9\u00FA\u00FB\u0169\u1E79\u016B\u1E7B\u016D\u00FC\u01DC\u01D8\u01D6\u01DA\u1EE7\u016F\u0171\u01D4\u0215\u0217\u01B0\u1EEB\u1EE9\u1EEF\u1EED\u1EF1\u1EE5\u1E73\u0173\u1E77\u1E75\u0289\",\n\tv:\"\u24E5\uFF56\u1E7D\u1E7F\u028B\uA75F\u028C\",\n\tvy:\"\uA761\",\n\tw:\"\u24E6\uFF57\u1E81\u1E83\u0175\u1E87\u1E85\u1E98\u1E89\u2C73\",\n\tx:\"\u24E7\uFF58\u1E8B\u1E8D\",\n\ty:\"\u24E8\uFF59\u1EF3\u00FD\u0177\u1EF9\u0233\u1E8F\u00FF\u1EF7\u1E99\u1EF5\u01B4\u024F\u1EFF\",\n\tz:\"\u24E9\uFF5A\u017A\u1E91\u017C\u017E\u1E93\u1E95\u01B6\u0225\u0240\u2C6C\uA763\"\n}\n\n/**\n * code points generated from toCodePoints();\n * removed 65339 to 65345\n */\nexport const code_points = [\n\t[ 67, 67 ],\n\t[ 160, 160 ],\n\t[ 192, 438 ],\n\t[ 452, 652 ],\n\t[ 961, 961 ],\n\t[ 1019, 1019 ],\n\t[ 1083, 1083 ],\n\t[ 1281, 1289 ],\n\t[ 1984, 1984 ],\n\t[ 5095, 5095 ],\n\t[ 7429, 7441 ],\n\t[ 7545, 7549 ],\n\t[ 7680, 7935 ],\n\t[ 8580, 8580 ],\n\t[ 9398, 9449 ],\n\t[ 11360, 11391 ],\n\t[ 42792, 42793 ],\n\t[ 42802, 42851 ],\n\t[ 42873, 42897 ],\n\t[ 42912, 42922 ],\n\t[ 64256, 64260 ],\n\t[ 65313, 65338 ],\n\t[ 65345, 65370 ]\n];\n\n/**\n * Remove accents\n * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n *\n */\nexport const asciifold = (str:string):string => {\n\treturn str\n\t\t.normalize('NFKD')\n\t\t.replace(accent_reg, '')\n\t\t.toLowerCase()\n\t\t.replace(convert_pat,function(foreignletter) {\n\t\t\treturn latin_convert[foreignletter];\n\t\t});\n};\n\n\n/**\n * Convert list of diacritics to array of code points\n *\n */\n// @ts-ignore\nfunction toCodePoints(tolerance=8){\n\tvar char_codes:number[] = [];\n\n\tfor( let letter in DIACRITICS ){\n\t\tlet _diacritics = DIACRITICS[letter];\n\t\tfor( let n = 0; n < _diacritics.length; n++ ){\n\t\t\tvar code_point = _diacritics.codePointAt(n);\n\t\t\tif( code_point ) char_codes.push( code_point );\n\t\t}\n\t}\n\n\t//https://stackoverflow.com/questions/40431572/is-there-a-simple-way-to-group-js-array-values-by-range\n\tchar_codes.sort((a, b) => a - b);\n\tvar accumulator: number[][] = [];\n\tchar_codes.reduce(function (accumulator, currentValue, index, source) {\n\n\t\tif( !index ){\n\t\t\taccumulator.push( [currentValue,currentValue] );\n\n\t\t}else if( currentValue - source[index - 1] > tolerance ){\n\t\t\taccumulator.push( [currentValue,currentValue] );\n\n\t\t}else{\n\n\t\t\tlet range = accumulator.pop();\n\t\t\tif( range ){\n\t\t\t\taccumulator.push( [range[0],currentValue]);\n\t\t\t}\n\t\t}\n\n\t\treturn accumulator;\n\t}, accumulator);\n\n}\n\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n *\n */\nexport const arrayToPattern = (chars:string[],glue:string='|'):string =>{\n\tif( chars.length > 1 ){\n\t\treturn '(?:'+chars.join(glue)+')';\n\t}\n\treturn chars[0];\n};\n\n/**\n * Get all possible combinations of substrings that add up to the given string\n * https://stackoverflow.com/questions/30169587/find-all-the-combination-of-substrings-that-add-up-to-the-given-string\n *\n */\nexport const allSubstrings = (input:string):string[][] => {\n\n    if( input.length === 1) return [[input]];\n\n    var result:string[][] = [];\n    allSubstrings(input.substring(1)).forEach(function(subresult) {\n        var tmp = subresult.slice(0);\n        tmp[0] = input.charAt(0) + tmp[0];\n        result.push(tmp);\n\n        tmp = subresult.slice(0);\n        tmp.unshift(input.charAt(0));\n        result.push(tmp);\n    });\n    \n    return result;\n}\n\n/**\n * Generate a list of diacritics from the list of code points\n *\n */\nexport const generateDiacritics = ():TDiacraticList => {\t\n\n\tvar diacritics:{[key:string]:string[]} = {};\n\tcode_points.forEach((code_range)=>{\n\n\t\tfor(let i = code_range[0]; i <= code_range[1]; i++){\n\t\t\t\n\t\t\tlet diacritic\t= String.fromCharCode(i);\t\t\t\n\t\t\tlet\tlatin\t\t= asciifold(diacritic);\t\t\t\n\t\t\t\t\n\t\t\tif( latin == diacritic.toLowerCase() ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( !(latin in diacritics) ){\n\t\t\t\tdiacritics[latin] = [latin];\n\t\t\t}\n\t\t\tdiacritics[latin].push(diacritic);\n\t\t}\n\t});\n\t\t\n\tvar latin_chars = Object.keys(diacritics);\n\t\n\t\n\t// latin character pattern\n\t// match longer substrings first\n\tlatin_chars\t\t= latin_chars.sort((a, b) => b.length - a.length );\n\tlatin_pat\t\t= new RegExp('('+ arrayToPattern(latin_chars) + accent_pat + '*)','g');\n\t\n\t\n\t// build diacritic patterns\n\t// ae needs: \n\t//\t(?:(?:ae|\u00C6|\u01FC|\u01E2)|(?:A|\u24B6|\uFF21...)(?:E|\u025B|\u24BA...))\n\tvar diacritic_patterns:TDiacraticList = {};\n\tlatin_chars.sort((a,b) => a.length -b.length).forEach((latin)=>{\n\t\t\n\t\tvar substrings\t= allSubstrings(latin);\n\t\tvar pattern = substrings.map((sub_pat)=>{\n\t\t\t\n\t\t\tsub_pat = sub_pat.map((l)=>{\n\t\t\t\tif( diacritics.hasOwnProperty(l) ){\n\t\t\t\t\treturn arrayToPattern(diacritics[l]);\n\t\t\t\t}\n\t\t\t\treturn l;\n\t\t\t});\n\t\t\t\n\t\t\treturn arrayToPattern(sub_pat,'');\n\t\t});\n\t\t\n\t\tdiacritic_patterns[latin] = arrayToPattern(pattern);\t\t\n\t});\n\t\t\t\n\treturn diacritic_patterns;\n}\n\n/**\n * Expand a regular expression pattern to include diacritics\n * \teg /a/ becomes /a\u24D0\uFF41\u1E9A\u00E0\u00E1\u00E2\u1EA7\u1EA5\u1EAB\u1EA9\u00E3\u0101\u0103\u1EB1\u1EAF\u1EB5\u1EB3\u0227\u01E1\u00E4\u01DF\u1EA3\u00E5\u01FB\u01CE\u0201\u0203\u1EA1\u1EAD\u1EB7\u1E01\u0105\u2C65\u0250\u0251A\u24B6\uFF21\u00C0\u00C1\u00C2\u1EA6\u1EA4\u1EAA\u1EA8\u00C3\u0100\u0102\u1EB0\u1EAE\u1EB4\u1EB2\u0226\u01E0\u00C4\u01DE\u1EA2\u00C5\u01FA\u01CD\u0200\u0202\u1EA0\u1EAC\u1EB6\u1E00\u0104\u023A\u2C6F/\n *\n */\nexport const diacriticRegexPoints = (regex:string):string => {\n\n\tif( diacritic_patterns === undefined ){\n\t\tdiacritic_patterns = generateDiacritics();\n\t}\n\t\n\tconst decomposed\t\t= regex.normalize('NFKD').toLowerCase();\n\t\n\treturn decomposed.split(latin_pat).map((part:string)=>{\n\t\t\n\t\tif( part == '' ){\n\t\t\treturn '';\n\t\t}\n\t\t\n\t\t// \"\uFB04\" or \"ffl\"\n\t\tconst no_accent = asciifold(part);\t\t\t\t\n\t\tif( diacritic_patterns.hasOwnProperty(no_accent) ){\n\t\t\treturn diacritic_patterns[no_accent];\n\t\t}\n\t\t\n\t\t// '\u0623\u0647\u0644\u0627' (\\u{623}\\u{647}\\u{644}\\u{627}) or '\u0627\u0654\u0647\u0644\u0627' (\\u{627}\\u{654}\\u{647}\\u{644}\\u{627})\n\t\tconst composed_part = part.normalize('NFC');\n\t\tif( composed_part != part ){\n\t\t\treturn arrayToPattern([part,composed_part]);\n\t\t}\n\t\t\t\t\n\t\treturn part;\n\t}).join('');\n\t\n}\n", "\n// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport { asciifold } from './diacritics.ts';\n\n// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport * as T from './types.ts';\n\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttr = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    return obj[name];\n};\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttrNesting = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    var part, names = name.split(\".\");\n\twhile( (part = names.shift()) && (obj = obj[part]));\n    return obj;\n};\n\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\nexport const scoreValue = (value:string, token:T.Token, weight:number ):number => {\n\tvar score, pos;\n\n\tif (!value) return 0;\n\n\tvalue = value + '';\n\tpos = value.search(token.regex);\n\tif (pos === -1) return 0;\n\n\tscore = token.string.length / value.length;\n\tif (pos === 0) score += 0.5;\n\n\treturn score * weight;\n};\n\n/**\n *\n * https://stackoverflow.com/questions/63006601/why-does-u-throw-an-invalid-escape-error\n */\nexport const escape_regex = (str:string):string => {\t\n\treturn (str + '').replace(/([\\$\\(\\)\\*\\+\\.\\?\\[\\]\\^\\{\\|\\}\\\\])/gu, '\\\\$1');\n};\n\n\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\nexport const propToArray = (obj:{[key:string]:any}, key:string) => {\n\tvar value = obj[key];\n\tif( value && !Array.isArray(value) ){\n\t\tobj[key] = [value];\n\t}\n}\n\n\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\nexport const iterate = (object:[]|{[key:string]:any}, callback:(value:any,key:number|string)=>any) => {\n\n\tif ( Array.isArray(object)) {\n\t\tobject.forEach(callback);\n\n\t}else{\n\n\t\tfor (var key in object) {\n\t\t\tif (object.hasOwnProperty(key)) {\n\t\t\t\tcallback(object[key], key);\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n\nexport const cmp = (a:number|string, b:number|string) => {\n\tif (typeof a === 'number' && typeof b === 'number') {\n\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t}\n\ta = asciifold(a + '').toLowerCase();\n\tb = asciifold(b + '').toLowerCase();\n\tif (a > b) return 1;\n\tif (b > a) return -1;\n\treturn 0;\n};\n", "/**\n * sifter.js\n * Copyright (c) 2013\u20132020 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n // @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport { scoreValue, getAttr, getAttrNesting, escape_regex, propToArray, iterate, cmp } from './utils.ts';\n// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport { diacriticRegexPoints } from './diacritics.ts';\n// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport * as T from 'types.ts';\n\nexport default class Sifter{\n\n\tpublic items; // []|{};\n\tpublic settings: T.Settings;\n\n\t/**\n\t * Textually searches arrays and hashes of objects\n\t * by property (or multiple properties). Designed\n\t * specifically for autocomplete.\n\t *\n\t */\n\tconstructor(items:any, settings:T.Settings) {\n\t\tthis.items = items;\n\t\tthis.settings = settings || {diacritics: true};\n\t};\n\n\t/**\n\t * Splits a search string into an array of individual\n\t * regexps to be used to match results.\n\t *\n\t */\n\ttokenize(query:string, respect_word_boundaries?:boolean, weights?:T.Weights ):T.Token[] {\n\t\tif (!query || !query.length) return [];\n\n\t\tconst tokens:T.Token[]\t= [];\n\t\tconst words\t\t\t\t= query.split(/\\s+/);\n\t\tvar field_regex:RegExp;\n\n\t\tif( weights ){\n\t\t\tfield_regex = new RegExp( '^('+ Object.keys(weights).map(escape_regex).join('|')+')\\:(.*)$');\n\t\t}\n\n\t\twords.forEach((word:string) => {\n\t\t\tlet field_match;\n\t\t\tlet field:null|string\t= null;\n\t\t\tlet regex:null|string\t= null;\n\n\t\t\t// look for \"field:query\" tokens\n\t\t\tif( field_regex && (field_match = word.match(field_regex)) ){\n\t\t\t\tfield\t= field_match[1];\n\t\t\t\tword\t= field_match[2];\n\t\t\t}\n\n\t\t\tif( word.length > 0 ){\n\t\t\t\tregex = escape_regex(word);\n\t\t\t\tif( this.settings.diacritics ){\n\t\t\t\t\tregex = diacriticRegexPoints(regex);\n\t\t\t\t}\n\t\t\t\tif( respect_word_boundaries ) regex = \"\\\\b\"+regex;\n\t\t\t}\n\n\t\t\ttokens.push({\n\t\t\t\tstring : word,\n\t\t\t\tregex  : regex ? new RegExp(regex,'iu') : null,\n\t\t\t\tfield  : field,\n\t\t\t});\n\t\t});\n\n\t\treturn tokens;\n\t};\n\n\n\t/**\n\t * Returns a function to be used to score individual results.\n\t *\n\t * Good matches will have a higher score than poor matches.\n\t * If an item is not a match, 0 will be returned by the function.\n\t *\n\t * @returns {function}\n\t */\n\tgetScoreFunction(query:string, options:T.Options ){\n\t\tvar search = this.prepareSearch(query, options);\n\t\treturn this._getScoreFunction(search);\n\t}\n\n\t_getScoreFunction(search:T.PrepareObj ){\n\t\tconst tokens\t\t= search.tokens,\n\t\ttoken_count\t\t\t= tokens.length;\n\n\t\tif (!token_count) {\n\t\t\treturn function() { return 0; };\n\t\t}\n\n\t\tconst fields\t= search.options.fields,\n\t\tweights\t\t\t= search.weights,\n\t\tfield_count\t\t= fields.length,\n\t\tgetAttrFn\t\t= search.getAttrFn;\n\n\t\tif (!field_count) {\n\t\t\treturn function() { return 1; };\n\t\t}\n\n\n\t\t/**\n\t\t * Calculates the score of an object\n\t\t * against the search query.\n\t\t *\n\t\t */\n\t\tconst scoreObject = (function() {\n\n\n\t\t\tif (field_count === 1) {\n\t\t\t\treturn function(token:T.Token, data:{}) {\n\t\t\t\t\tconst field = fields[0].field;\n\t\t\t\t\treturn scoreValue(getAttrFn(data, field), token, weights[field]);\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn function(token:T.Token, data:{}) {\n\t\t\t\tvar sum = 0;\n\n\t\t\t\t// is the token specific to a field?\n\t\t\t\tif( token.field ){\n\n\t\t\t\t\tconst value = getAttrFn(data, token.field);\n\n\t\t\t\t\tif( !token.regex && value ){\n\t\t\t\t\t\tsum += (1/field_count);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tsum += scoreValue(value, token, 1);\n\t\t\t\t\t}\n\n\n\n\t\t\t\t}else{\n\t\t\t\t\titerate(weights, (weight:number, field:string) => {\n\t\t\t\t\t\tsum += scoreValue(getAttrFn(data, field), token, weight);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn sum / field_count;\n\t\t\t};\n\t\t})();\n\n\t\tif (token_count === 1) {\n\t\t\treturn function(data:{}) {\n\t\t\t\treturn scoreObject(tokens[0], data);\n\t\t\t};\n\t\t}\n\n\t\tif (search.options.conjunction === 'and') {\n\t\t\treturn function(data:{}) {\n\t\t\t\tvar i = 0, score, sum = 0;\n\t\t\t\tfor (; i < token_count; i++) {\n\t\t\t\t\tscore = scoreObject(tokens[i], data);\n\t\t\t\t\tif (score <= 0) return 0;\n\t\t\t\t\tsum += score;\n\t\t\t\t}\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(data:{}) {\n\t\t\t\tvar sum = 0;\n\t\t\t\titerate(tokens,(token:T.Token)=>{\n\t\t\t\t\tsum += scoreObject(token, data);\n\t\t\t\t});\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Returns a function that can be used to compare two\n\t * results, for sorting purposes. If no sorting should\n\t * be performed, `null` will be returned.\n\t *\n\t * @return function(a,b)\n\t */\n\tgetSortFunction(query:string, options:T.Options) {\n\t\tvar search  = this.prepareSearch(query, options);\n\t\treturn this._getSortFunction(search);\n\t}\n\n\t_getSortFunction(search:T.PrepareObj){\n\t\tvar i, n, implicit_score;\n\n\t\tconst self\t= this,\n\t\toptions\t\t= search.options,\n\t\tsort\t\t= (!search.query && options.sort_empty) ? options.sort_empty : options.sort,\n\t\tsort_flds:T.Sort[]\t\t= [],\n\t\tmultipliers:number[]\t= [];\n\n\n\t\t/**\n\t\t * Fetches the specified sort field value\n\t\t * from a search result item.\n\t\t *\n\t\t */\n\t\tconst get_field = function(name:string, result:T.ResultItem):string|number {\n\t\t\tif (name === '$score') return result.score;\n\t\t\treturn search.getAttrFn(self.items[result.id], name);\n\t\t};\n\n\t\t// parse options\n\t\tif (sort) {\n\t\t\tfor (i = 0, n = sort.length; i < n; i++) {\n\t\t\t\tif (search.query || sort[i].field !== '$score') {\n\t\t\t\t\tsort_flds.push(sort[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// the \"$score\" field is implied to be the primary\n\t\t// sort field, unless it's manually specified\n\t\tif (search.query) {\n\t\t\timplicit_score = true;\n\t\t\tfor (i = 0, n = sort_flds.length; i < n; i++) {\n\t\t\t\tif (sort_flds[i].field === '$score') {\n\t\t\t\t\timplicit_score = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (implicit_score) {\n\t\t\t\tsort_flds.unshift({field: '$score', direction: 'desc'});\n\t\t\t}\n\t\t} else {\n\t\t\tfor (i = 0, n = sort_flds.length; i < n; i++) {\n\t\t\t\tif (sort_flds[i].field === '$score') {\n\t\t\t\t\tsort_flds.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, n = sort_flds.length; i < n; i++) {\n\t\t\tmultipliers.push(sort_flds[i].direction === 'desc' ? -1 : 1);\n\t\t}\n\n\t\t// build function\n\t\tconst sort_flds_count = sort_flds.length;\n\t\tif (!sort_flds_count) {\n\t\t\treturn null;\n\t\t} else if (sort_flds_count === 1) {\n\t\t\tconst sort_fld = sort_flds[0].field;\n\t\t\tconst multiplier = multipliers[0];\n\t\t\treturn function(a:T.ResultItem, b:T.ResultItem) {\n\t\t\t\treturn multiplier * cmp(\n\t\t\t\t\tget_field(sort_fld, a),\n\t\t\t\t\tget_field(sort_fld, b)\n\t\t\t\t);\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(a:T.ResultItem, b:T.ResultItem) {\n\t\t\t\tvar i, result, field;\n\t\t\t\tfor (i = 0; i < sort_flds_count; i++) {\n\t\t\t\t\tfield = sort_flds[i].field;\n\t\t\t\t\tresult = multipliers[i] * cmp(\n\t\t\t\t\t\tget_field(field, a),\n\t\t\t\t\t\tget_field(field, b)\n\t\t\t\t\t);\n\t\t\t\t\tif (result) return result;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Parses a search query and returns an object\n\t * with tokens and fields ready to be populated\n\t * with results.\n\t *\n\t */\n\tprepareSearch(query:string, optsUser:T.Options):T.PrepareObj {\n\t\tconst weights:T.Weights = {};\n\t\tvar options\t\t= Object.assign({},optsUser);\n\n\t\tpropToArray(options,'sort');\n\t\tpropToArray(options,'sort_empty');\n\n\t\t// convert fields to new format\n\t\tif( options.fields ){\n\t\t\tpropToArray(options,'fields');\n\t\t\tconst fields:T.Field[] = [];\n\t\t\toptions.fields.forEach((field:string|T.Field) => {\n\t\t\t\tif( typeof field == 'string' ){\n\t\t\t\t\tfield = {field:field,weight:1};\n\t\t\t\t}\n\t\t\t\tfields.push(field);\n\t\t\t\tweights[field.field] = ('weight' in field) ? field.weight : 1;\n\t\t\t});\n\t\t\toptions.fields = fields;\n\t\t}\n\n\n\t\treturn {\n\t\t\toptions\t\t: options,\n\t\t\tquery\t\t: query.toLowerCase().trim(),\n\t\t\ttokens\t\t: this.tokenize(query, options.respect_word_boundaries, weights),\n\t\t\ttotal\t\t: 0,\n\t\t\titems\t\t: [],\n\t\t\tweights\t\t: weights,\n\t\t\tgetAttrFn\t: (options.nesting) ? getAttrNesting : getAttr,\n\t\t};\n\t};\n\n\t/**\n\t * Searches through all items and returns a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string, options:T.Options) : T.PrepareObj {\n\t\tvar self = this, score, search:T.PrepareObj;\n\n\t\tsearch  = this.prepareSearch(query, options);\n\t\toptions = search.options;\n\t\tquery   = search.query;\n\n\t\t// generate result scoring function\n\t\tconst fn_score = options.score || self._getScoreFunction(search);\n\n\t\t// perform search and sort\n\t\tif (query.length) {\n\t\t\titerate(self.items, (item:T.ResultItem, id:string|number) => {\n\t\t\t\tscore = fn_score(item);\n\t\t\t\tif (options.filter === false || score > 0) {\n\t\t\t\t\tsearch.items.push({'score': score, 'id': id});\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\titerate(self.items, (item:T.ResultItem, id:string|number) => {\n\t\t\t\tsearch.items.push({'score': 1, 'id': id});\n\t\t\t});\n\t\t}\n\n\t\tconst fn_sort = self._getSortFunction(search);\n\t\tif (fn_sort) search.items.sort(fn_sort);\n\n\t\t// apply limits\n\t\tsearch.total = search.items.length;\n\t\tif (typeof options.limit === 'number') {\n\t\t\tsearch.items = search.items.slice(0, options.limit);\n\t\t}\n\n\t\treturn search;\n\t};\n}\n", "\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\nexport const getDom = ( query:any ):HTMLElement => {\n\n\tif( query.jquery ){\n\t\treturn query[0];\n\t}\n\n\tif( query instanceof HTMLElement ){\n\t\treturn query;\n\t}\n\n\tif( query.indexOf('<') > -1 ){\n\t\tlet div = document.createElement('div');\n\t\tdiv.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\t\treturn div.firstChild as HTMLElement;\n\t}\n\n\treturn document.querySelector(query);\n};\n\nexport const escapeQuery = (query:string):string => {\n\treturn query.replace(/['\"\\\\]/g, '\\\\$&');\n}\n\n/**\n * Dispatch an event\n *\n */\nexport const triggerEvent = ( dom_el:HTMLElement, event_name:string ):void => {\n\tvar event = document.createEvent('HTMLEvents');\n\tevent.initEvent(event_name, true, false);\n\tdom_el.dispatchEvent(event)\n};\n\n/**\n * Apply CSS rules to a dom element\n *\n */\nexport const applyCSS = ( dom_el:HTMLElement, css:{ [key: string]: string|number }):void => {\n\tObject.assign(dom_el.style, css);\n}\n\n\n/**\n * Add css classes\n *\n */\nexport const addClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n\tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map( cls => {\n\t\t\tel.classList.add( cls );\n\t\t});\n\t});\n}\n\n/**\n * Remove css classes\n *\n */\n export const removeClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n \tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map(cls => {\n\t \t\tel.classList.remove( cls );\n\t\t});\n \t});\n }\n\n\n/**\n * Return arguments\n *\n */\nexport const classesArray = (args:string[]|string[][]):string[] => {\n\tvar classes:string[] = [];\n\tfor( let _classes of args ){\n\t\tif( typeof _classes === 'string' ){\n\t\t\t_classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t\t}\n\t\tif( Array.isArray(_classes) ){\n\t\t\tclasses = classes.concat(_classes);\n\t\t}\n\t}\n\n\treturn classes.filter(Boolean);\n}\n\n\n/**\n * Create an array from arg if it's not already an array\n *\n */\nexport const castAsArray = (arg:any):Array<any> => {\n\tif( !Array.isArray(arg) ){\n \t\targ = [arg];\n \t}\n\treturn arg;\n}\n\n\n/**\n * Get the closest node to the evt.target matching the selector\n * Stops at wrapper\n *\n */\nexport const parentMatch = ( target:null|HTMLElement, selector:string, wrapper?:HTMLElement ):HTMLElement|void => {\n\n\tif( wrapper && !wrapper.contains(target) ){\n\t\treturn;\n\t}\n\n\twhile( target && target.matches ){\n\n\t\tif( target.matches(selector) ){\n\t\t\treturn target;\n\t\t}\n\n\t\ttarget = target.parentNode as HTMLElement;\n\t}\n}\n\n\n/**\n * Get the first or last item from an array\n *\n * > 0 - right (last)\n * <= 0 - left (first)\n *\n */\nexport const getTail = ( list:Array<any>|NodeList, direction:number=0 ):any => {\n\n\tif( direction > 0 ){\n\t\treturn list[list.length-1];\n\t}\n\n\treturn list[0];\n}\n\n/**\n * Return true if an object is empty\n *\n */\nexport const isEmptyObject = (obj:object):boolean => {\n\treturn (Object.keys(obj).length === 0);\n}\n\n\n/**\n * Get the index of an element amongst sibling nodes of the same type\n *\n */\nexport const nodeIndex = ( el:null|Element, amongst?:string ):number => {\n\tif (!el) return -1;\n\n\tamongst = amongst || el.nodeName;\n\n\tvar i = 0;\n\twhile( el = el.previousElementSibling ){\n\n\t\tif( el.matches(amongst) ){\n\t\t\ti++;\n\t\t}\n\t}\n\treturn i;\n}\n\n\n/**\n * Set attributes of an element\n *\n */\nexport const setAttr = (el:Element,attrs:{ [key: string]: null|string|number }) => {\n\tfor( const attr in attrs ){\n\t\tlet val = attrs[attr];\n\t\tif( val == null ){\n\t\t\tel.removeAttribute(attr);\n\t\t}else{\n\t\t\tel.setAttribute(attr, ''+val);\n\t\t}\n\t}\n}\n\n\n/**\n * Replace a node\n */\nexport const replaceNode = ( existing:Node, replacement:Node ) => {\n\tif( existing.parentNode ) existing.parentNode.replaceChild(replacement, existing);\n}\n", "/**\n * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n * Highlights arbitrary terms in a node.\n *\n * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n */\n\nimport {replaceNode} from '../vanilla';\n\n\nexport const highlight = (element:HTMLElement, regex:string|RegExp) => {\n\n\tif( regex === null ) return;\n\n\t// convet string to regex\n\tif( typeof regex === 'string' ){\n\n\t\tif( !regex.length ) return;\n\t\tregex = new RegExp(regex, 'i');\n\t}\n\n\n\t// Wrap matching part of text node with highlighting <span>, e.g.\n\t// Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\tconst highlightText = ( node:Text ):number => {\n\n\t\tvar match = node.data.match(regex);\n\t\tif( match && node.data.length > 0 ){\n\t\t\tvar spannode\t\t= document.createElement('span');\n\t\t\tspannode.className\t= 'highlight';\n\t\t\tvar middlebit\t\t= node.splitText(match.index as number);\n\n\t\t\tmiddlebit.splitText(match[0].length);\n\t\t\tvar middleclone\t\t= middlebit.cloneNode(true);\n\n\t\t\tspannode.appendChild(middleclone);\n\t\t\treplaceNode(middlebit, spannode);\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn 0;\n\t};\n\n\t// Recurse element node, looking for child text nodes to highlight, unless element\n\t// is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\tconst highlightChildren = ( node:Element ):void => {\n\t\tif( node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && ( node.className !== 'highlight' || node.tagName !== 'SPAN' ) ){\n\t\t\tfor (var i = 0; i < node.childNodes.length; ++i) {\n\t\t\t\ti += highlightRecursive(node.childNodes[i]);\n\t\t\t}\n\t\t}\n\t};\n\n\n\tconst highlightRecursive = ( node:Node|Element ):number => {\n\n\t\tif( node.nodeType === 3 ){\n\t\t\treturn highlightText(node as Text);\n\t\t}\n\n\t\thighlightChildren(node as Element);\n\n\t\treturn 0;\n\t};\n\n\thighlightRecursive( element );\n};\n\n/**\n * removeHighlight fn copied from highlight v5 and\n * edited to remove with(), pass js strict mode, and use without jquery\n */\nexport const removeHighlight = (el:HTMLElement) => {\n\tvar elements = el.querySelectorAll(\"span.highlight\");\n\tArray.prototype.forEach.call(elements, function(el:HTMLElement){\n\t\tvar parent = el.parentNode as Node;\n\t\tparent.replaceChild(el.firstChild as Node, el);\n\t\tparent.normalize();\n\t});\n};\n", "export const KEY_A\t\t\t\t= 65;\nexport const KEY_RETURN\t\t\t= 13;\nexport const KEY_ESC\t\t\t= 27;\nexport const KEY_LEFT\t\t\t= 37;\nexport const KEY_UP\t\t\t\t= 38;\nexport const KEY_RIGHT\t\t\t= 39;\nexport const KEY_DOWN\t\t\t= 40;\nexport const KEY_BACKSPACE\t\t= 8;\nexport const KEY_DELETE\t\t\t= 46;\nexport const KEY_TAB\t\t\t= 9;\n\nexport const IS_MAC      \t\t= typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\nexport const KEY_SHORTCUT\t\t= IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n", "\nexport default {\n\toptions: [],\n\toptgroups: [],\n\n\tplugins: [],\n\tdelimiter: ',',\n\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\tpersist: true,\n\tdiacritics: true,\n\tcreate: null,\n\tcreateOnBlur: false,\n\tcreateFilter: null,\n\thighlight: true,\n\topenOnFocus: true,\n\tshouldOpen: null,\n\tmaxOptions: 50,\n\tmaxItems: null,\n\thideSelected: null,\n\tduplicates: false,\n\taddPrecedence: false,\n\tselectOnTab: false,\n\tpreload: null,\n\tallowEmptyOption: false,\n\tcloseAfterSelect: false,\n\n\tloadThrottle: 300,\n\tloadingClass: 'loading',\n\n\tdataAttr: null, //'data-data',\n\toptgroupField: 'optgroup',\n\tvalueField: 'value',\n\tlabelField: 'text',\n\tdisabledField: 'disabled',\n\toptgroupLabelField: 'label',\n\toptgroupValueField: 'value',\n\tlockOptgroupOrder: false,\n\n\tsortField: '$order',\n\tsearchField: ['text'],\n\tsearchConjunction: 'and',\n\n\tmode: null,\n\twrapperClass: 'ts-control',\n\tinputClass: 'ts-input',\n\tdropdownClass: 'ts-dropdown',\n\tdropdownContentClass: 'ts-dropdown-content',\n\titemClass: 'item',\n\toptionClass: 'option',\n\n\tdropdownParent: null,\n\tcontrolInput: null,\n\n\tcopyClassesToDropdown: true,\n\n\tplaceholder: null,\n\thidePlaceholder: null,\n\n\tshouldLoad: function(query:string):boolean{\n\t\treturn query.length > 0;\n\t},\n\n\t/*\n\tload                 : null, // function(query, callback) { ... }\n\tscore                : null, // function(search) { ... }\n\tonInitialize         : null, // function() { ... }\n\tonChange             : null, // function(value) { ... }\n\tonItemAdd            : null, // function(value, $item) { ... }\n\tonItemRemove         : null, // function(value) { ... }\n\tonClear              : null, // function() { ... }\n\tonOptionAdd          : null, // function(value, data) { ... }\n\tonOptionRemove       : null, // function(value) { ... }\n\tonOptionClear        : null, // function() { ... }\n\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\tonOptionGroupRemove  : null, // function(id) { ... }\n\tonOptionGroupClear   : null, // function() { ... }\n\tonDropdownOpen       : null, // function(dropdown) { ... }\n\tonDropdownClose      : null, // function(dropdown) { ... }\n\tonType               : null, // function(str) { ... }\n\tonDelete             : null, // function(values) { ... }\n\t*/\n\n\trender: {\n\t\t/*\n\t\titem: null,\n\t\toptgroup: null,\n\t\toptgroup_header: null,\n\t\toption: null,\n\t\toption_create: null\n\t\t*/\n\t}\n};\n", "\nimport TomSelect from './tom-select';\nimport { TomLoadCallback } from './types/index';\n\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\nexport const hash_key = (value:undefined|null|boolean|string):string|null => {\n\tif (typeof value === 'undefined' || value === null) return null;\n\treturn get_hash(value);\n};\n\nexport const get_hash = (value:boolean|string):string => {\n\tif (typeof value === 'boolean') return value ? '1' : '0';\n\treturn value + '';\n};\n\n/**\n * Escapes a string for use within HTML.\n *\n */\nexport const escape_html = (str:string):string => {\n\treturn (str + '')\n\t\t.replace(/&/g, '&amp;')\n\t\t.replace(/</g, '&lt;')\n\t\t.replace(/>/g, '&gt;')\n\t\t.replace(/\"/g, '&quot;');\n};\n\n\n/**\n * Debounce the user provided load function\n *\n */\nexport const loadDebounce = (fn:(value:string,callback:TomLoadCallback) => void,delay:number) => {\n\tvar timeout: null|ReturnType<typeof setTimeout>;\n\treturn function(this:TomSelect, value:string,callback:TomLoadCallback) {\n\t\tvar self = this;\n\n\t\tif( timeout ){\n\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\tclearTimeout(timeout);\n\t\t}\n\t\ttimeout = setTimeout(function() {\n\t\t\ttimeout = null;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tfn.call(self, value, callback);\n\n\t\t}, delay);\n\t};\n};\n\n\n/**\n * Debounce all fired events types listed in `types`\n * while executing the provided `fn`.\n *\n */\nexport const debounce_events = ( self:TomSelect, types:string[], fn:() => void ) => {\n\tvar type:string;\n\tvar trigger = self.trigger;\n\tvar event_args:{ [key: string]: any } = {};\n\n\t// override trigger method\n\tself.trigger = function(){\n\t\tvar type = arguments[0];\n\t\tif (types.indexOf(type) !== -1) {\n\t\t\tevent_args[type] = arguments;\n\t\t} else {\n\t\t\treturn trigger.apply(self, arguments);\n\t\t}\n\t};\n\n\t// invoke provided function\n\tfn.apply(self, []);\n\tself.trigger = trigger;\n\n\t// trigger queued events\n\tfor (type in event_args) {\n\t\ttrigger.apply(self, event_args[type]);\n\t}\n};\n\n\n/**\n * Determines the current selection within a text input control.\n * Returns an object containing:\n *   - start\n *   - length\n *\n */\nexport const getSelection = (input:HTMLInputElement):{ start: number; length: number } => {\n\treturn {\n\t\tstart\t: input.selectionStart || 0,\n\t\tlength\t: (input.selectionEnd||0) - (input.selectionStart||0),\n\t};\n};\n\n\n/**\n * Prevent default\n *\n */\nexport const preventDefault = (evt?:Event, stop:boolean=false):void => {\n\tif( evt ){\n\t\tevt.preventDefault();\n\t\tif( stop ){\n\t\t\tevt.stopPropagation();\n\t\t}\n\t}\n}\n\n\n/**\n * Prevent default\n *\n */\nexport const addEvent = (target:EventTarget, type:string, callback:EventListenerOrEventListenerObject, options?:object):void => {\n\ttarget.addEventListener(type,callback,options);\n};\n\n\n/**\n * Return true if the requested key is down\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n * The current evt may not always set ( eg calling advanceSelection() )\n *\n */\nexport const isKeyDown = ( key_name:keyof (KeyboardEvent|MouseEvent), evt?:KeyboardEvent|MouseEvent ) => {\n\n\tif( !evt ){\n\t\treturn false;\n\t}\n\n\tif( !evt[key_name] ){\n\t\treturn false;\n\t}\n\n\tvar count = (evt.altKey?1:0) + (evt.ctrlKey?1:0) + (evt.shiftKey?1:0) + (evt.metaKey?1:0);\n\n\tif( count === 1 ){\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n/**\n * Get the id of an element\n * If the id attribute is not set, set the attribute with the given id\n *\n */\nexport const getId = (el:Element,id:string) => {\n\tconst existing_id = el.getAttribute('id');\n\tif( existing_id ){\n\t\treturn existing_id;\n\t}\n\n\tel.setAttribute('id',id);\n\treturn id;\n};\n\n\n/**\n * Returns a string with backslashes added before characters that need to be escaped.\n */\nexport const addSlashes = (str:string):string => {\n\treturn str.replace(/[\\\\\"']/g, '\\\\$&');\n};\n\n/**\n *\n */\nexport const append = ( parent:Element|DocumentFragment, node: string|Node|null|undefined ):void =>{\n\tif( node ) parent.append(node);\n};\n", "import defaults from './defaults.js';\nimport { hash_key } from './utils';\nimport { TomOption, TomSettings } from './types/index';\n\nexport default function getSettings( input:HTMLInputElement, settings_user:TomSettings):TomSettings{\n\tvar settings:TomSettings\t= Object.assign({}, defaults, settings_user);\n\n\tvar attr_data\t\t\t\t= settings.dataAttr;\n\tvar field_label\t\t\t\t= settings.labelField;\n\tvar field_value\t\t\t\t= settings.valueField;\n\tvar field_disabled\t\t\t= settings.disabledField;\n\tvar field_optgroup\t\t\t= settings.optgroupField;\n\tvar field_optgroup_label\t= settings.optgroupLabelField;\n\tvar field_optgroup_value\t= settings.optgroupValueField;\n\n\tvar tag_name\t\t\t\t= input.tagName.toLowerCase();\n\tvar placeholder\t\t\t\t= input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n\n\tif (!placeholder && !settings.allowEmptyOption) {\n\t\tlet option\t\t= input.querySelector('option[value=\"\"]');\n\t\tif( option ){\n\t\t\tplaceholder = option.textContent;\n\t\t}\n\n\t}\n\n\tvar settings_element:{\n\t\tplaceholder\t: null|string,\n\t\toptions\t\t: TomOption[],\n\t\toptgroups\t: TomOption[],\n\t\titems\t\t: string[],\n\t\tmaxItems\t: null|number,\n\t} = {\n\t\tplaceholder\t: placeholder,\n\t\toptions\t\t: [],\n\t\toptgroups\t: [],\n\t\titems\t\t: [],\n\t\tmaxItems\t: null,\n\t};\n\n\n\t/**\n\t * Initialize from a <select> element.\n\t *\n\t */\n\tvar init_select = () => {\n\t\tvar tagName;\n\t\tvar options = settings_element.options;\n\t\tvar optionsMap:{[key:string]:any} = {};\n\t\tvar group_count = 1;\n\n\t\tvar readData = (el:HTMLElement):TomOption => {\n\n\t\t\tvar data\t= Object.assign({},el.dataset); // get plain object from DOMStringMap\n\t\t\tvar json\t= attr_data && data[attr_data];\n\n\t\t\tif( typeof json === 'string' && json.length ){\n\t\t\t\tdata = Object.assign(data,JSON.parse(json));\n\t\t\t}\n\n\t\t\treturn data;\n\t\t};\n\n\t\tvar addOption = (option:HTMLOptionElement, group?:string) => {\n\n\t\t\tvar value = hash_key(option.value);\n\t\t\tif ( value == null ) return;\n\t\t\tif ( !value && !settings.allowEmptyOption) return;\n\n\t\t\t// if the option already exists, it's probably been\n\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t// existing option so that it's rendered in both places.\n\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\tif (group) {\n\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t} else if (!Array.isArray(arr)) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}else{\n\n\t\t\t\tvar option_data             = readData(option);\n\t\t\t\toption_data[field_label]    = option_data[field_label] || option.textContent;\n\t\t\t\toption_data[field_value]    = option_data[field_value] || value;\n\t\t\t\toption_data[field_disabled] = option_data[field_disabled] || option.disabled;\n\t\t\t\toption_data[field_optgroup] = option_data[field_optgroup] || group;\n\t\t\t\toption_data.$option\t\t\t= option;\n\n\t\t\t\toptionsMap[value] = option_data;\n\t\t\t\toptions.push(option_data);\n\t\t\t}\n\n\t\t\tif( option.selected ){\n\t\t\t\tsettings_element.items.push(value);\n\t\t\t}\n\t\t};\n\n\t\tvar addGroup = ( optgroup:HTMLOptGroupElement ) => {\n\t\t\tvar id, optgroup_data\n\n\t\t\toptgroup_data\t\t\t\t\t\t\t= readData(optgroup);\n\t\t\toptgroup_data[field_optgroup_label]\t\t= optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n\t\t\toptgroup_data[field_optgroup_value]\t\t= optgroup_data[field_optgroup_value] || group_count++;\n\t\t\toptgroup_data[field_disabled]\t\t\t= optgroup_data[field_disabled] || optgroup.disabled;\n\t\t\tsettings_element.optgroups.push(optgroup_data);\n\n\t\t\tid = optgroup_data[field_optgroup_value];\n\n\t\t\tfor( const option of optgroup.children ){\n\t\t\t\taddOption(option as HTMLOptionElement, id);\n\t\t\t}\n\n\t\t};\n\n\t\tsettings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n\n\t\tfor( const child of input.children ){\n\t\t\ttagName = child.tagName.toLowerCase();\n\t\t\tif (tagName === 'optgroup') {\n\t\t\t\taddGroup(child as HTMLOptGroupElement);\n\t\t\t} else if (tagName === 'option') {\n\t\t\t\taddOption(child as HTMLOptionElement);\n\t\t\t}\n\t\t}\n\n\t};\n\n\n\t/**\n\t * Initialize from a <input type=\"text\"> element.\n\t *\n\t */\n\tvar init_textbox = () => {\n\t\tconst data_raw = input.getAttribute(attr_data);\n\n\t\tif (!data_raw) {\n\t\t\tvar value = input.value.trim() || '';\n\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\tconst values = value.split(settings.delimiter);\n\n\t\t\tfor( const value of values ){\n\t\t\t\tconst option:TomOption = {};\n\t\t\t\toption[field_label] = value;\n\t\t\t\toption[field_value] = value;\n\t\t\t\tsettings_element.options.push(option);\n\t\t\t}\n\t\t\tsettings_element.items = values;\n\t\t} else {\n\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\tfor( const opt of settings_element.options ){\n\t\t\t\tsettings_element.items.push(opt[field_value]);\n\t\t\t}\n\t\t}\n\t};\n\n\n\tif (tag_name === 'select') {\n\t\tinit_select();\n\t} else {\n\t\tinit_textbox();\n\t}\n\n\treturn Object.assign( {}, defaults, settings_element, settings_user) as TomSettings;\n};\n", "\nimport MicroEvent from './contrib/microevent.js';\nimport MicroPlugin from './contrib/microplugin.js';\nimport Sifter from '@orchidjs/sifter/lib/sifter';\nimport { escape_regex } from '@orchidjs/sifter/lib/utils';\nimport { TomInput, TomArgObject, TomOption, TomOptions, TomCreateFilter, TomCreateCallback, TomItem, TomSettings, TomTemplateNames } from './types/index';\nimport {highlight, removeHighlight} from './contrib/highlight.js';\nimport * as constants from './constants.js';\nimport getSettings from './getSettings.js';\nimport {\n\thash_key,\n\tget_hash,\n\tescape_html,\n\tdebounce_events,\n\tgetSelection,\n\tpreventDefault,\n\taddEvent,\n\tloadDebounce,\n\tisKeyDown,\n\tgetId,\n\taddSlashes,\n\tappend\n} from './utils';\n\nimport {\n\tgetDom,\n\tescapeQuery,\n\ttriggerEvent,\n\tapplyCSS,\n\taddClasses,\n\tremoveClasses,\n\tparentMatch,\n\tgetTail,\n\tisEmptyObject,\n\tnodeIndex,\n\tsetAttr,\n\treplaceNode\n} from './vanilla';\n\nvar instance_i = 0;\n\nexport default class TomSelect extends MicroPlugin(MicroEvent){\n\n\tpublic control_input\t\t\t: HTMLInputElement;\n\tpublic wrapper\t\t\t\t\t: HTMLElement;\n\tpublic dropdown\t\t\t\t\t: HTMLElement;\n\tpublic control\t\t\t\t\t: HTMLElement;\n\tpublic dropdown_content\t\t\t: HTMLElement;\n\n\tpublic order\t\t\t\t\t: number = 0;\n\tpublic settings\t\t\t\t\t: TomSettings;\n\tpublic input\t\t\t\t\t: TomInput;\n\tpublic tabIndex\t\t\t\t\t: number;\n\tpublic is_select_tag\t\t\t: boolean;\n\tpublic rtl\t\t\t\t\t\t: boolean;\n\tprivate inputId\t\t\t\t\t: string;\n\n\tprivate _destroy\t\t\t\t: () => void;\n\tpublic sifter\t\t\t\t\t: Sifter;\n\n\n\tpublic tab_key\t\t\t\t\t: boolean = false;\n\tpublic isOpen\t\t\t\t\t: boolean = false;\n\tpublic isDisabled\t\t\t\t: boolean = false;\n\tpublic isRequired\t\t\t\t: boolean;\n\tpublic isInvalid\t\t\t\t: boolean = false;\n\tpublic isLocked\t\t\t\t\t: boolean = false;\n\tpublic isFocused\t\t\t\t: boolean = false;\n\tpublic isInputHidden\t\t\t: boolean = false;\n\tpublic isSetup\t\t\t\t\t: boolean = false;\n\tpublic ignoreFocus\t\t\t\t: boolean = false;\n\tpublic hasOptions\t\t\t\t: boolean = false;\n\tpublic currentResults\t\t\t?: ReturnType<Sifter['search']>;\n\tpublic lastValue\t\t\t\t: string = '';\n\tpublic caretPos\t\t\t\t\t: number = 0;\n\tpublic loading\t\t\t\t\t: number = 0;\n\tpublic loadedSearches\t\t\t: { [key: string]: boolean } = {};\n\n\tpublic activeOption\t\t\t\t: null|HTMLElement = null;\n\tpublic activeItems\t\t\t\t: TomItem[] = [];\n\n\tpublic optgroups\t\t\t\t: TomOptions = {};\n\tpublic options\t\t\t\t\t: TomOptions = {};\n\tpublic userOptions\t\t\t\t: {[key:string]:boolean} = {};\n\tpublic items\t\t\t\t\t: string[] = [];\n\tpublic renderCache\t\t\t\t: {[key:string]:{[key:string]:HTMLElement}} = {'item':{},'option':{}};\n\n\n\n\tconstructor( input_arg: string|TomInput, settings:TomSettings ){\n\t\tsuper();\n\n\t\tinstance_i++;\n\n\t\tvar dir;\n\t\tvar input\t\t\t\t= getDom( input_arg ) as TomInput;\n\t\tvar self\t\t\t\t= this;\n\n\t\tif( input.tomselect ){\n\t\t\tthrow new Error('Tom Select already initialized on this element');\n\t\t}\n\n\n\t\tinput.tomselect\t\t\t= this;\n\n\n\t\t// detect rtl environment\n\t\tvar computedStyle\t\t= window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir\t\t\t\t\t\t= computedStyle.getPropertyValue('direction');\n\n\t\t// setup default state\n\t\tthis.settings\t\t\t= getSettings( input, settings );\n\t\tthis.input\t\t\t\t= input;\n\t\tthis.tabIndex\t\t\t= input.tabIndex || 0;\n\t\tthis.is_select_tag\t\t= input.tagName.toLowerCase() === 'select';\n\t\tthis.rtl\t\t\t\t= /rtl/i.test(dir);\n\t\tthis.inputId\t\t\t= getId(input, 'tomselect-'+instance_i);\n\t\tthis.isRequired\t\t\t= input.required;\n\n\n\t\t// search system\n\t\tthis.sifter = new Sifter(this.options, {diacritics: this.settings.diacritics});\n\n\t\tthis.setupOptions(this.settings.options,this.settings.optgroups);\n\t\tdelete this.settings.optgroups;\n\t\tdelete this.settings.options;\n\n\n\t\t// option-dependent defaults\n\t\tthis.settings.mode = this.settings.mode || (this.settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof this.settings.hideSelected !== 'boolean') {\n\t\t\tthis.settings.hideSelected = this.settings.mode === 'multi';\n\t\t}\n\n\t\tif( typeof this.settings.hidePlaceholder !== 'boolean' ){\n\t\t\tthis.settings.hidePlaceholder = this.settings.mode !== 'multi';\n\t\t}\n\n\t\t// set up createFilter callback\n\t\tvar filter = this.settings.createFilter;\n\t\tif( typeof filter !== 'function' ){\n\n\t\t\tif( typeof filter === 'string' ){\n\t\t\t\tfilter = new RegExp(filter);\n\t\t\t}\n\n\t\t\tif( filter instanceof RegExp ){\n\t\t\t\tthis.settings.createFilter = (input) => (filter as RegExp).test(input);\n\t\t\t}else{\n\t\t\t\tthis.settings.createFilter = () => true;\n\t\t\t}\n\t\t}\n\n\n\t\tthis.initializePlugins(this.settings.plugins);\n\t\tthis.setupCallbacks();\n\t\tthis.setupTemplates();\n\n\n\t\t/**\n\t\t * Create all elements and set up event bindings.\n\t\t *\n\t\t */\n\n\t\tvar settings:TomSettings = self.settings;\n\t\tvar wrapper: HTMLElement;\n\t\tvar control: HTMLElement;\n\t\tvar control_input: HTMLInputElement;\n\t\tvar dropdown: HTMLElement;\n\t\tvar dropdown_content: HTMLElement;\n\t\tvar inputMode: string;\n\t\tvar classes;\n\t\tvar classes_plugins;\n\t\tvar input\t\t\t\t\t= self.input;\n\t\tvar control_id: string;\n\t\tconst passive_event\t\t\t= { passive: true };\n\t\tconst listboxId: string\t\t= self.inputId +'-ts-dropdown';\n\n\n\n\t\tinputMode\t\t\t= self.settings.mode;\n\t\tclasses\t\t\t\t= input.getAttribute('class') || '';\n\n\t\twrapper\t\t\t\t= getDom('<div>');\n\t\taddClasses( wrapper, settings.wrapperClass, classes, inputMode);\n\n\n\t\tcontrol\t\t\t\t= getDom('<div class=\"items\">');\n\t\taddClasses(control,settings.inputClass);\n\t\tappend( wrapper, control );\n\n\n\t\tdropdown\t\t\t= self._render('dropdown');\n\t\taddClasses(dropdown, settings.dropdownClass, inputMode);\n\n\t\tdropdown_content\t= getDom(`<div role=\"listbox\" id=\"${listboxId}\" tabindex=\"-1\">`);\n\t\taddClasses(dropdown_content, settings.dropdownContentClass);\n\t\tappend( dropdown, dropdown_content );\n\n\t\tgetDom( settings.dropdownParent || wrapper ).appendChild( dropdown );\n\n\t\tif( settings.controlInput ){\n\t\t\tcontrol_input\t\t= getDom( settings.controlInput ) as HTMLInputElement;\n\t\t}else{\n\t\t\tcontrol_input\t\t= getDom('<input type=\"text\" autocomplete=\"off\" size=\"1\" />' ) as HTMLInputElement;\n\n\t\t\t// set attributes\n\t\t\tvar attrs = ['autocorrect','autocapitalize','autocomplete'];\n\t\t\tfor( const attr of attrs ){\n\t\t\t\tif( input.getAttribute(attr) ){\n\t\t\t\t\tsetAttr(control_input,{[attr]:input.getAttribute(attr)});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( !settings.controlInput ){\n\t\t\tcontrol_input.tabIndex = input.disabled ? -1 : self.tabIndex;\n\t\t\tcontrol.appendChild( control_input );\n\t\t}\n\n\n\t\tsetAttr(control_input,{\n\t\t\trole:'combobox',\n\t\t\thaspopup:'listbox',\n\t\t\t'aria-expanded':'false',\n\t\t\t'aria-controls':listboxId\n\t\t});\n\n\t\tcontrol_id = getId(control_input,self.inputId + '-tomselected');\n\n\t\tlet query = \"label[for='\"+escapeQuery(self.inputId)+\"']\";\n\t\tlet label = document.querySelector(query);\n\t\tif( label ){\n\t\t\tsetAttr(label,{for:control_id});\n\t\t\tlet label_id = getId(label,self.inputId+'-ts-label');\n\t\t\tsetAttr(dropdown_content,{'aria-labelledby':label_id});\n\t\t}\n\n\n\t\tif(self.settings.copyClassesToDropdown) {\n\t\t\taddClasses( dropdown, classes);\n\t\t}\n\n\t\twrapper.style.width = input.style.width;\n\n\t\tif (self.plugins.names.length) {\n\t\t\tclasses_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\taddClasses( [wrapper,dropdown], classes_plugins);\n\t\t}\n\n\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag ){\n\t\t\tsetAttr(input,{multiple:'multiple'});\n\t\t}\n\n\t\tif (self.settings.placeholder) {\n\t\t\tsetAttr(control_input,{placeholder:settings.placeholder});\n\t\t}\n\n\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\tif (!self.settings.splitOn && self.settings.delimiter) {\n\t\t\tself.settings.splitOn = new RegExp('\\\\s*' + escape_regex(self.settings.delimiter) + '+\\\\s*');\n\t\t}\n\n\t\t// debounce user defined load() if loadThrottle > 0\n\t\t// after initializePlugins() so plugins can create/modify user defined loaders\n\t\tif( this.settings.load && this.settings.loadThrottle ){\n\t\t\tthis.settings.load = loadDebounce(this.settings.load,this.settings.loadThrottle)\n\t\t}\n\n\n\t\tthis.control\t\t\t= control;\n\t\tthis.control_input\t\t= control_input;\n\t\tthis.wrapper\t\t\t= wrapper;\n\t\tthis.dropdown\t\t\t= dropdown;\n\t\tthis.dropdown_content\t= dropdown_content;\n\n\t\tself.control_input.type\t= input.type;\n\n\t\t// clicking on an option should select it\n\t\taddEvent(dropdown,'click',(evt) => {\n\t\t\tconst option = parentMatch(evt.target as HTMLElement, '[data-selectable]');\n\t\t\tif( option ){\n\t\t\t\tself.onOptionSelect( evt as MouseEvent, option );\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t}\n\t\t});\n\n\t\taddEvent(control,'click', (evt) => {\n\n\t\t\tvar target_match = parentMatch( evt.target as HTMLElement, '.'+self.settings.itemClass, control);\n\t\t\tif( target_match && self.onItemSelect(evt as MouseEvent, target_match as TomItem) ){\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// retain focus (see control_input mousedown)\n\t\t\tif( control_input.value != '' ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself.onClick();\n\t\t\tpreventDefault(evt,true);\n\t\t});\n\n\n\t\t// retain focus by preventing native handling. if the\n\t\t// event target is the input it should not be modified.\n\t\t// otherwise, text selection within the input won't work.\n\t\taddEvent(control_input,'mousedown',\t(e) =>{\n\t\t\tif( control_input.value !== '' ){\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\t});\n\n\n\t\taddEvent(control_input,'keydown',\t(e) => self.onKeyDown(e as KeyboardEvent) );\n\t\taddEvent(control_input,'keyup',\t\t(e) => self.onKeyUp(e as KeyboardEvent) );\n\t\taddEvent(control_input,'keypress',\t(e) => self.onKeyPress(e as KeyboardEvent) );\n\t\taddEvent(control_input,'resize',\t() => self.positionDropdown(), passive_event);\n\t\taddEvent(control_input,'blur',\t\t() => self.onBlur() );\n\t\taddEvent(control_input,'focus',\t\t(e) => self.onFocus(e as MouseEvent) );\n\t\taddEvent(control_input,'paste',\t\t(e) => self.onPaste(e as MouseEvent) );\n\n\n\t\tconst doc_mousedown = (evt:Event) => {\n\n\t\t\t// blur if target is outside of this instance\n\t\t\t// dropdown is not always inside wrapper\n\t\t\tconst target = evt.composedPath()[0];\n\t\t\tif( !wrapper.contains(target as HTMLElement) && !dropdown.contains(target as HTMLElement) ){\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.blur();\n\t\t\t\t}\n\t\t\t\tself.inputState();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// clicking anywhere in the control should not blur the control_input & close the dropdown\n\t\t\tpreventDefault(evt,true);\n\t\t};\n\n\t\tvar win_scroll = () => {\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.positionDropdown();\n\t\t\t}\n\t\t};\n\n\n\t\taddEvent(document,'mousedown', doc_mousedown);\n\t\taddEvent(window,'sroll', win_scroll, passive_event);\n\t\taddEvent(window,'resize', win_scroll, passive_event);\n\n\t\tthis._destroy = () => {\n\t\t\tdocument.removeEventListener('mousedown',doc_mousedown);\n\t\t\twindow.removeEventListener('sroll',win_scroll);\n\t\t\twindow.removeEventListener('resize',win_scroll);\n\t\t};\n\n\t\t// store original html and tab index so that they can be\n\t\t// restored when the destroy() method is called.\n\t\tthis.revertSettings = {\n\t\t\tinnerHTML : input.innerHTML,\n\t\t\ttabIndex : input.tabIndex\n\t\t};\n\n\n\t\tinput.tabIndex = -1;\n\t\tsetAttr(input,{\thidden:'hidden'});\n\t\tinput.insertAdjacentElement('afterend', self.wrapper);\n\n\n\t\tself.setValue(settings.items);\n\t\tsettings.items = [];\n\n\t\taddEvent(input,'invalid', (e) => {\n\t\t\tpreventDefault(e);\n\t\t\tif( !self.isInvalid ){\n\t\t\t\tself.isInvalid = true;\n\t\t\t\tself.refreshState();\n\t\t\t}\n\t\t});\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshItems();\n\t\tself.close(false);\n\t\tself.inputState();\n\t\tself.isSetup = true;\n\n\t\tif( input.disabled ){\n\t\t\tself.disable();\n\t\t}\n\n\t\tself.on('change', this.onChange);\n\n\t\taddClasses(input,'tomselected');\n\t\tself.trigger('initialize');\n\n\t\t// preload options\n\t\tif (settings.preload === true) {\n\t\t\tself.load('');\n\t\t}\n\n\t\tself.setup();\n\t}\n\n\t/**\n\t * @deprecated v1.7.6\n\t *\n\t */\n\tsetup(){}\n\n\n\t/**\n\t * Register options and optgroups\n\t *\n\t */\n\tsetupOptions(options:TomOption[] = [], optgroups:TomOption[] = []){\n\n\t\t// build options table\n\t\tfor( const option of options ){\n\t\t\tthis.registerOption(option);\n\t\t}\n\n\n\t\t// build optgroup table\n\t\tfor( const optgroup of optgroups ){\n\t\t\tthis.registerOptionGroup(optgroup);\n\t\t}\n\t}\n\n\t/**\n\t * Sets up default rendering functions.\n\t */\n\tsetupTemplates() {\n\t\tvar self = this;\n\t\tvar field_label = self.settings.labelField;\n\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\n\t\tvar templates = {\n\t\t\t'optgroup': (data:TomOption) => {\n\t\t\t\tlet optgroup = document.createElement('div');\n\t\t\t\toptgroup.className = 'optgroup';\n\t\t\t\toptgroup.appendChild(data.options);\n\t\t\t\treturn optgroup;\n\n\t\t\t},\n\t\t\t'optgroup_header': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t},\n\t\t\t'option': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'item': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'option_create': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t},\n\t\t\t'no_results':() => {\n\t\t\t\treturn '<div class=\"no-results\">No results found</div>';\n\t\t\t},\n\t\t\t'loading':() => {\n\t\t\t\treturn '<div class=\"spinner\"></div>';\n\t\t\t},\n\t\t\t'not_loading':() => {},\n\t\t\t'dropdown':() => {\n\t\t\t\treturn '<div></div>';\n\t\t\t}\n\t\t};\n\n\n\t\tself.settings.render = Object.assign({}, templates, self.settings.render);\n\t}\n\n\t/**\n\t * Maps fired events to callbacks provided\n\t * in the settings used when creating the control.\n\t */\n\tsetupCallbacks() {\n\t\tvar key, fn;\n\t\tvar callbacks:{[key:string]:string} = {\n\t\t\t'initialize'      : 'onInitialize',\n\t\t\t'change'          : 'onChange',\n\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t'item_select'     : 'onItemSelect',\n\t\t\t'clear'           : 'onClear',\n\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t'type'            : 'onType',\n\t\t\t'load'            : 'onLoad',\n\t\t\t'focus'           : 'onFocus',\n\t\t\t'blur'            : 'onBlur'\n\t\t};\n\n\t\tfor (key in callbacks) {\n\n\t\t\tfn = this.settings[callbacks[key] as (keyof TomSettings)];\n\t\t\tif (fn) this.on(key, fn);\n\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the main control element\n\t * has a click event.\n\t *\n\t */\n\tonClick():void {\n\t\tvar self = this;\n\n\t\tif( self.activeItems.length > 0 ){\n\t\t\tself.clearActiveItems();\n\t\t\tself.focus();\n\t\t\treturn;\n\t\t}\n\n\t\tif( self.isFocused && self.isOpen ){\n\t\t\tself.blur();\n\t\t} else {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated v1.7\n\t *\n\t */\n\tonMouseDown():void {}\n\n\t/**\n\t * Triggered when the value of the control has been changed.\n\t * This should propagate the event to the original DOM\n\t * input / select element.\n\t */\n\tonChange() {\n\t\ttriggerEvent(this.input, 'input');\n\t\ttriggerEvent(this.input, 'change');\n\t}\n\n\t/**\n\t * Triggered on <input> paste.\n\t *\n\t */\n\tonPaste(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif (self.isFull() || self.isInputHidden || self.isLocked) {\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\t// If a regex or string is included, this will split the pasted\n\t\t// input and create Items for each separate value\n\t\tif (self.settings.splitOn) {\n\n\t\t\t// Wait for pasted text to be recognized in value\n\t\t\tsetTimeout(() => {\n\t\t\t\tvar pastedText = self.inputValue();\n\t\t\t\tif( !pastedText.match(self.settings.splitOn)){\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tvar splitInput = pastedText.trim().split(self.settings.splitOn);\n\t\t\t\tfor( const piece of splitInput ){\n\t\t\t\t\tself.createItem(piece);\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keypress.\n\t *\n\t */\n\tonKeyPress(e:KeyboardEvent):void {\n\t\tvar self = this;\n\t\tif(self.isLocked){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\tif (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n\t\t\tself.createItem();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keydown.\n\t *\n\t */\n\tonKeyDown(e:KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif (self.isLocked) {\n\t\t\tif (e.keyCode !== constants.KEY_TAB) {\n\t\t\t\tpreventDefault(e);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (e.keyCode) {\n\n\t\t\t// ctrl+A: select all\n\t\t\tcase constants.KEY_A:\n\t\t\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\t\t\tself.selectAll();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t// esc: close dropdown\n\t\t\tcase constants.KEY_ESC:\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tpreventDefault(e,true);\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\n\t\t\t// down: open dropdown or move selection down\n\t\t\tcase constants.KEY_DOWN:\n\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\tself.open();\n\t\t\t\t} else if (self.activeOption) {\n\t\t\t\t\tlet next = self.getAdjacent(self.activeOption, 1);\n\t\t\t\t\tif (next) self.setActiveOption(next);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// up: move selection up\n\t\t\tcase constants.KEY_UP:\n\t\t\t\tif (self.activeOption) {\n\t\t\t\t\tlet prev = self.getAdjacent(self.activeOption, -1);\n\t\t\t\t\tif (prev) self.setActiveOption(prev);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// return: select active option\n\t\t\tcase constants.KEY_RETURN:\n\t\t\t\tif (self.isOpen && self.activeOption) {\n\t\t\t\t\tself.onOptionSelect(e,self.activeOption);\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// if the option_create=null, the dropdown might be closed\n\t\t\t\t}else if (self.settings.create && self.createItem()) {\n\t\t\t\t\tpreventDefault(e);\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// left: modifiy item selection to the left\n\t\t\tcase constants.KEY_LEFT:\n\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\treturn;\n\n\t\t\t// right: modifiy item selection to the right\n\t\t\tcase constants.KEY_RIGHT:\n\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\treturn;\n\n\t\t\t// tab: select active option and/or create item\n\t\t\tcase constants.KEY_TAB:\n\t\t\t\tif( self.settings.selectOnTab ){\n\t\t\t\t\tif( self.isOpen && self.activeOption) {\n\t\t\t\t\t\tself.tab_key = true;\n\t\t\t\t\t\tself.onOptionSelect(e,self.activeOption);\n\n\t\t\t\t\t\t// prevent default [tab] behaviour of jump to the next field\n\t\t\t\t\t\t// if select isFull, then the dropdown won't be open and [tab] will work normally\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t\tself.tab_key = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// delete|backspace: delete items\n\t\t\tcase constants.KEY_BACKSPACE:\n\t\t\tcase constants.KEY_DELETE:\n\t\t\t\tself.deleteSelection(e);\n\t\t\t\treturn;\n\t\t}\n\n\t\t// don't enter text in the control_input when active items are selected\n\t\tif( self.isInputHidden && !isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\tpreventDefault(e);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keyup.\n\t *\n\t */\n\tonKeyUp(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif (self.isLocked){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\tvar value = self.inputValue();\n\t\tif (self.lastValue !== value) {\n\t\t\tself.lastValue = value;\n\n\t\t\tif( self.settings.shouldLoad.call(self,value) ){\n\t\t\t\tself.load(value);\n\t\t\t}\n\n\t\t\tself.refreshOptions();\n\t\t\tself.trigger('type', value);\n\t\t}\n\t}\n\n\n\t/**\n\t * Triggered on <input> focus.\n\t *\n\t */\n\tonFocus(e?:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\t\tvar wasFocused = self.isFocused;\n\n\t\tif (self.isDisabled) {\n\t\t\tself.blur();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\tif (self.ignoreFocus) return;\n\t\tself.isFocused = true;\n\t\tif (self.settings.preload === 'focus') self.load('');\n\n\t\tif (!wasFocused) self.trigger('focus');\n\n\t\tif (!self.activeItems.length) {\n\t\t\tself.showInput();\n\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t}\n\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Triggered on <input> blur.\n\t *\n\t */\n\tonBlur():void {\n\t\tvar self = this;\n\t\tif (!self.isFocused) return;\n\t\tself.isFocused = false;\n\t\tself.ignoreFocus = false;\n\n\t\tvar deactivate = () => {\n\t\t\tself.close();\n\t\t\tself.setActiveItem();\n\t\t\tself.setCaret(self.items.length);\n\t\t\tself.trigger('blur');\n\t\t};\n\n\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\tself.createItem(null, false, deactivate);\n\t\t} else {\n\t\t\tdeactivate();\n\t\t}\n\t}\n\n\n\t/**\n\t * Triggered when the user clicks on an option\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionSelect( evt:MouseEvent|KeyboardEvent, option:HTMLElement ){\n\t\tvar value, self = this;\n\n\t\tif( !option ){\n\t\t\treturn;\n\t\t}\n\n\t\t// should not be possible to trigger a option under a disabled optgroup\n\t\tif( option.parentElement && option.parentElement.matches('[data-disabled]') ){\n\t\t\treturn;\n\t\t}\n\n\n\t\tif( option.classList.contains('create') ){\n\t\t\tself.createItem(null, true, () => {\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tvalue = option.dataset.value;\n\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.addItem(value);\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( !self.settings.hideSelected && evt.type && /click/.test(evt.type) ){\n\t\t\t\t\tself.setActiveOption(option);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the user clicks on an item\n\t * that has been selected.\n\t *\n\t */\n\tonItemSelect( evt?:MouseEvent, item?:TomItem ):boolean{\n\t\tvar self = this;\n\n\t\tif( !self.isLocked && self.settings.mode === 'multi' ){\n\t\t\tpreventDefault(evt);\n\t\t\tself.setActiveItem(item, evt);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Determines whether or not to invoke\n\t * the user-provided option provider / loader\n\t *\n\t * Note, there is a subtle difference between\n\t * this.canLoad() and this.settings.shouldLoad();\n\t *\n\t *\t- settings.shouldLoad() is a user-input validator.\n\t *\tWhen false is returned, the not_loading template\n\t *\twill be added to the dropdown\n\t *\n\t *\t- canLoad() is lower level validator that checks\n\t * \tthe Tom Select instance. There is no inherent user\n\t *\tfeedback when canLoad returns false\n\t *\n\t */\n\tcanLoad(value:string):boolean{\n\n\t\tif( !this.settings.load ) return false;\n\t\tif( this.loadedSearches.hasOwnProperty(value) ) return false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Invokes the user-provided option provider / loader.\n\t *\n\t */\n\tload(value:string):void {\n\t\tconst self = this;\n\n\t\tif( !self.canLoad(value) ) return;\n\n\t\taddClasses(self.wrapper,self.settings.loadingClass);\n\t\tself.loading++;\n\n\t\tconst callback = self.loadCallback.bind(self);\n\t\tself.settings.load.call(self, value, callback);\n\t}\n\n\t/**\n\t * Invoked by the user-provided option provider\n\t *\n\t */\n\tloadCallback( options:TomOption[], optgroups:TomOption[] ):void{\n\t\tconst self = this;\n\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\tself.lastQuery = null;\n\n\t\tself.clearActiveOption(); // when new results load, focus should be on first option\n\t\tself.setupOptions(options,optgroups);\n\n\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\n\t\tif (!self.loading) {\n\t\t\tremoveClasses(self.wrapper,self.settings.loadingClass);\n\t\t}\n\n\t\tself.trigger('load', options, optgroups);\n\t}\n\n\n\t/**\n\t * Sets the input field of the control to the specified value.\n\t *\n\t */\n\tsetTextboxValue(value:string = '') {\n\t\tvar input = this.control_input;\n\t\tvar changed = input.value !== value;\n\t\tif (changed) {\n\t\t\tinput.value = value;\n\t\t\ttriggerEvent(input,'update');\n\t\t\tthis.lastValue = value;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the value of the control. If multiple items\n\t * can be selected (e.g. <select multiple>), this returns\n\t * an array. If only one item can be selected, this\n\t * returns a string.\n\t *\n\t */\n\tgetValue():string|string[] {\n\n\t\tif( this.is_select_tag && this.input.hasAttribute('multiple')) {\n\t\t\treturn this.items;\n\t\t}\n\n\t\treturn this.items.join(this.settings.delimiter);\n\t}\n\n\t/**\n\t * Resets the selected items to the given value.\n\t *\n\t */\n\tsetValue( value:string|string[], silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events,() => {\n\t\t\tthis.clear(silent);\n\t\t\tthis.addItems(value, silent);\n\t\t});\n\t}\n\n\n\t/**\n\t * Resets the number of max items to the given value\n\t *\n\t */\n\tsetMaxItems(value:null|number){\n\t\tif(value === 0) value = null; //reset to unlimited items.\n\t\tthis.settings.maxItems = value;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Sets the selected item.\n\t *\n\t */\n\tsetActiveItem( item?:TomItem, e?:MouseEvent|KeyboardEvent ){\n\t\tvar self = this;\n\t\tvar eventName;\n\t\tvar i, begin, end, swap;\n\t\tvar last;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\t// clear the active selection\n\t\tif( !item ){\n\t\t\tself.clearActiveItems();\n\t\t\tif (self.isFocused) {\n\t\t\t\tself.showInput();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// modify selection\n\t\teventName = e && e.type.toLowerCase();\n\n\t\tif (eventName === 'click' && isKeyDown('shiftKey',e) && self.activeItems.length) {\n\t\t\tlast\t= self.getLastActive();\n\t\t\tbegin\t= Array.prototype.indexOf.call(self.control.children, last);\n\t\t\tend\t\t= Array.prototype.indexOf.call(self.control.children, item);\n\n\t\t\tif (begin > end) {\n\t\t\t\tswap  = begin;\n\t\t\t\tbegin = end;\n\t\t\t\tend   = swap;\n\t\t\t}\n\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\titem = self.control.children[i] as TomItem;\n\t\t\t\tif (self.activeItems.indexOf(item) === -1) {\n\t\t\t\t\tself.setActiveItemClass(item);\n\t\t\t\t}\n\t\t\t}\n\t\t\tpreventDefault(e);\n\t\t} else if ((eventName === 'click' && isKeyDown(constants.KEY_SHORTCUT,e) ) || (eventName === 'keydown' && isKeyDown('shiftKey',e))) {\n\t\t\tif( item.classList.contains('active') ){\n\t\t\t\tself.removeActiveItem( item );\n\t\t\t} else {\n\t\t\t\tself.setActiveItemClass(item);\n\t\t\t}\n\t\t} else {\n\t\t\tself.clearActiveItems();\n\t\t\tself.setActiveItemClass(item);\n\t\t}\n\n\t\t// ensure control has focus\n\t\tself.hideInput();\n\t\tif (!self.isFocused) {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Set the active and last-active classes\n\t *\n\t */\n\tsetActiveItemClass( item:TomItem ){\n\t\tconst self = this;\n\t\tconst last_active = self.control.querySelector('.last-active');\n\t\tif( last_active ) removeClasses(last_active as HTMLElement,'last-active');\n\n\t\taddClasses(item,'active last-active');\n\t\tself.trigger('item_select', item);\n\t\tif( self.activeItems.indexOf(item) == -1 ){\n\t\t\tself.activeItems.push( item );\n\t\t}\n\t}\n\n\t/**\n\t * Remove active item\n\t *\n\t */\n\tremoveActiveItem( item:TomItem ){\n\t\tvar idx = this.activeItems.indexOf(item);\n\t\tthis.activeItems.splice(idx, 1);\n\t\tremoveClasses(item,'active');\n\t}\n\n\t/**\n\t * Clears all the active items\n\t *\n\t */\n\tclearActiveItems(){\n\t\tremoveClasses(this.activeItems,'active');\n\t\tthis.activeItems = [];\n\t}\n\n\t/**\n\t * Sets the selected item in the dropdown menu\n\t * of available options.\n\t *\n\t */\n\tsetActiveOption( option:null|HTMLElement ):void{\n\n\t\tif( option === this.activeOption ){\n\t\t\treturn;\n\t\t}\n\n\t\tthis.clearActiveOption();\n\t\tif( !option ) return;\n\n\t\tthis.activeOption = option;\n\t\tsetAttr(this.control_input,{'aria-activedescendant':option.getAttribute('id')});\n\t\tsetAttr(option,{'aria-selected':'true'});\n\t\taddClasses(option,'active');\n\t\tthis.scrollToOption(option);\n\t}\n\n\t/**\n\t * Sets the dropdown_content scrollTop to display the option\n\t *\n\t */\n\tscrollToOption( option:null|HTMLElement, behavior?:string ):void{\n\n\t\tif( !option ) return;\n\n\t\tconst content\t\t= this.dropdown_content;\n\t\tconst height_menu\t= content.clientHeight;\n\t\tconst scrollTop\t\t= content.scrollTop || 0;\n\t\tconst height_item\t= option.offsetHeight;\n\t\tconst y\t\t\t\t= option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;\n\n\t\tif (y + height_item > height_menu + scrollTop) {\n\t\t\tthis.scroll(y - height_menu + height_item, behavior);\n\n\t\t} else if (y < scrollTop) {\n\t\t\tthis.scroll(y, behavior);\n\t\t}\n\t}\n\n\t/**\n\t * Scroll the dropdown to the given position\n\t *\n\t */\n\tscroll( scrollTop:number, behavior?:string ):void{\n\t\tconst content = this.dropdown_content;\n\t\tif( behavior ){\n\t\t\tcontent.style.scrollBehavior = behavior;\n\t\t}\n\t\tcontent.scrollTop = scrollTop;\n\t\tcontent.style.scrollBehavior = '';\n\t}\n\n\t/**\n\t * Clears the active option\n\t *\n\t */\n\tclearActiveOption(){\n\t\tif( this.activeOption ){\n\t\t\tremoveClasses(this.activeOption,'active');\n\t\t\tsetAttr(this.activeOption,{'aria-selected':null});\n\t\t}\n\t\tthis.activeOption = null;\n\t\tsetAttr(this.control_input,{'aria-activedescendant':null});\n\t}\n\n\n\t/**\n\t * Selects all items (CTRL + A).\n\t */\n\tselectAll() {\n\n\t\tif (this.settings.mode === 'single') return;\n\n\t\tthis.activeItems = this.controlChildren();\n\n\t\tif( this.activeItems.length ){\n\t\t\taddClasses( this.activeItems, 'active' );\n\n\t\t\tthis.hideInput();\n\t\t\tthis.close();\n\t\t}\n\t\tthis.focus();\n\t}\n\n\t/**\n\t * Determines if the control_input should be in a hidden or visible state\n\t *\n\t */\n\tinputState(){\n\t\tvar self = this;\n\n\t\tif( self.settings.controlInput ) return;\n\n\t\tif( self.activeItems.length > 0 || (!self.isFocused && this.settings.hidePlaceholder && self.items.length > 0) ){\n\t\t\tself.setTextboxValue();\n\t\t\tself.isInputHidden = true;\n\t\t\taddClasses(self.wrapper,'input-hidden');\n\t\t}else{\n\t\t\tself.isInputHidden = false;\n\t\t\tremoveClasses(self.wrapper,'input-hidden');\n\t\t}\n\t}\n\n\t/**\n\t * Hides the input element out of view, while\n\t * retaining its focus.\n\t * @deprecated 1.3\n\t */\n\thideInput() {\n\t\tthis.inputState();\n\t}\n\n\t/**\n\t * Restores input visibility.\n\t * @deprecated 1.3\n\t */\n\tshowInput() {\n\t\tthis.inputState();\n\t}\n\n\t/**\n\t * Get the input value\n\t */\n\tinputValue(){\n\t\treturn this.control_input.value.trim();\n\t}\n\n\t/**\n\t * Gives the control focus.\n\t */\n\tfocus() {\n\t\tvar self = this;\n\t\tif (self.isDisabled) return;\n\n\t\tself.ignoreFocus = true;\n\t\tself.control_input.focus();\n\t\tsetTimeout(() => {\n\t\t\tself.ignoreFocus = false;\n\t\t\tself.onFocus();\n\t\t}, 0);\n\t}\n\n\t/**\n\t * Forces the control out of focus.\n\t *\n\t */\n\tblur():void {\n\t\tthis.control_input.blur();\n\n\t\tthis.onBlur();\n\t}\n\n\t/**\n\t * Returns a function that scores an object\n\t * to show how good of a match it is to the\n\t * provided query.\n\t *\n\t * @return {function}\n\t */\n\tgetScoreFunction(query:string) {\n\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t}\n\n\t/**\n\t * Returns search options for sifter (the system\n\t * for scoring and sorting results).\n\t *\n\t * @see https://github.com/orchidjs/sifter.js\n\t * @return {object}\n\t */\n\tgetSearchOptions() {\n\t\tvar settings = this.settings;\n\t\tvar sort = settings.sortField;\n\t\tif (typeof settings.sortField === 'string') {\n\t\t\tsort = [{field: settings.sortField}];\n\t\t}\n\n\t\treturn {\n\t\t\tfields      : settings.searchField,\n\t\t\tconjunction : settings.searchConjunction,\n\t\t\tsort        : sort,\n\t\t\tnesting     : settings.nesting\n\t\t};\n\t}\n\n\t/**\n\t * Searches through available options and returns\n\t * a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string) : ReturnType<Sifter['search']>{\n\t\tvar i, result, calculateScore;\n\t\tvar self     = this;\n\t\tvar options  = this.getSearchOptions();\n\n\t\t// validate user-provided result scoring function\n\t\tif ( self.settings.score ){\n\t\t\tcalculateScore = self.settings.score.call(self,query);\n\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\tthrow new Error('Tom Select \"score\" setting must be a function that returns a function');\n\t\t\t}\n\t\t}\n\n\t\t// perform search\n\t\tif (query !== self.lastQuery) {\n\t\t\tself.lastQuery\t\t\t= query;\n\t\t\tresult\t\t\t\t\t= self.sifter.search(query, Object.assign(options, {score: calculateScore}));\n\t\t\tself.currentResults\t\t= result;\n\t\t} else {\n\t\t\tresult\t\t\t\t\t= Object.assign( {}, self.currentResults);\n\t\t}\n\n\t\t// filter out selected items\n\t\tif( self.settings.hideSelected ){\n\t\t\tfor (i = result.items.length - 1; i >= 0; i--) {\n\t\t\t\tlet hashed = hash_key(result.items[i].id);\n\t\t\t\tif( hashed && self.items.indexOf(hashed) !== -1 ){\n\t\t\t\t\tresult.items.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Refreshes the list of available options shown\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\trefreshOptions( triggerDropdown:boolean = true ){\n\t\tvar i, j, k, n, optgroup, optgroups, html, has_create_option, active_value, active_group;\n\t\tvar create;\n\t\tconst groups: {[key:string]:DocumentFragment} = {};\n\n\t\tconst groups_order:string[]\t= [];\n\t\tvar self\t\t\t\t\t= this;\n\t\tvar query\t\t\t\t\t= self.inputValue();\n\t\tvar results\t\t\t\t\t= self.search(query);\n\t\tvar active_option\t\t\t= self.activeOption;\n\t\tvar show_dropdown\t\t\t= self.settings.shouldOpen || false;\n\t\tvar dropdown_content\t\t= self.dropdown_content;\n\n\t\tif( active_option ){\n\t\t\tactive_value = active_option.dataset.value;\n\t\t\tactive_group = active_option.closest('[data-group]') as HTMLElement;\n\t\t}\n\n\t\t// build markup\n\t\tn = results.items.length;\n\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t}\n\n\t\tif( n > 0 ){\n\t\t\tshow_dropdown = true;\n\t\t}\n\n\t\t// render and group available options individually\n\t\tfor (i = 0; i < n; i++) {\n\n\t\t\t// get option dom element\n\t\t\tlet opt_value\t\t= results.items[i].id;\n\t\t\tlet option\t\t\t= self.options[opt_value];\n\t\t\tlet option_el\t\t= self.getOption(opt_value,true) as HTMLElement;\n\t\t\t\n\t\t\t\n\t\t\t// toggle 'selected' class\n\t\t\tif( !self.settings.hideSelected ){\n\t\t\t\toption_el.classList.toggle('selected', self.items.includes(opt_value) );\n\t\t\t}\n\n\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\toptgroups   = Array.isArray(optgroup) ? optgroup : [optgroup];\n\n\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\toptgroup = optgroups[j];\n\t\t\t\tif (!self.optgroups.hasOwnProperty(optgroup)) {\n\t\t\t\t\toptgroup = '';\n\t\t\t\t}\n\t\t\t\tif (!groups.hasOwnProperty(optgroup)) {\n\t\t\t\t\tgroups[optgroup] = document.createDocumentFragment();\n\t\t\t\t\tgroups_order.push(optgroup);\n\t\t\t\t}\n\n\t\t\t\t// nodes can only have one parent, so if the option is in mutple groups, we need a clone\n\t\t\t\tif( j > 0 ){\n\t\t\t\t\toption_el = option_el.cloneNode(true) as HTMLElement;\n\t\t\t\t\tsetAttr(option_el,{id: option.$id+'-clone-'+j,'aria-selected':null});\n\t\t\t\t\toption_el.classList.add('ts-cloned');\n\t\t\t\t\tremoveClasses(option_el,'active');\n\t\t\t\t}\n\n\t\t\t\t// make sure we keep the activeOption in the same group\n\t\t\t\tif( active_value == opt_value && active_group && active_group.dataset.group === optgroup ){\n\t\t\t\t\tactive_option = option_el;\n\t\t\t\t}\n\n\t\t\t\tgroups[optgroup].appendChild(option_el);\n\t\t\t}\n\t\t}\n\n\t\t// sort optgroups\n\t\tif (this.settings.lockOptgroupOrder) {\n\t\t\tgroups_order.sort((a, b) => {\n\t\t\t\tvar a_order = self.optgroups[a] && self.optgroups[a].$order || 0;\n\t\t\t\tvar b_order = self.optgroups[b] && self.optgroups[b].$order || 0;\n\t\t\t\treturn a_order - b_order;\n\t\t\t});\n\t\t}\n\n\t\t// render optgroup headers & join groups\n\t\thtml = document.createDocumentFragment();\n\t\tfor( optgroup of groups_order ){\n\t\t\tif (self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].children.length) {\n\n\t\t\t\tlet group_options = document.createDocumentFragment();\n\t\t\t\tlet header = self.render('optgroup_header', self.optgroups[optgroup]);\n\t\t\t\tappend( group_options, header );\n\t\t\t\tappend( group_options, groups[optgroup] );\n\n\t\t\t\tlet group_html = self.render('optgroup', {group:self.optgroups[optgroup],options:group_options} );\n\n\t\t\t\tappend( html, group_html );\n\n\t\t\t} else {\n\t\t\t\tappend( html, groups[optgroup] );\n\t\t\t}\n\t\t}\n\n\t\tdropdown_content.innerHTML = '';\n\t\tappend( dropdown_content, html );\n\n\t\t// highlight matching terms inline\n\t\tif (self.settings.highlight) {\n\t\t\tremoveHighlight( dropdown_content );\n\t\t\tif (results.query.length && results.tokens.length) {\n\t\t\t\tfor( const tok of results.tokens ){\n\t\t\t\t\thighlight( dropdown_content, tok.regex);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// helper method for adding templates to dropdown\n\t\tvar add_template = (template:TomTemplateNames) => {\n\t\t\tlet content = self.render(template,{input:query});\n\t\t\tif( content ){\n\t\t\t\tshow_dropdown = true;\n\t\t\t\tdropdown_content.insertBefore(content, dropdown_content.firstChild);\n\t\t\t}\n\t\t\treturn content;\n\t\t};\n\n\t\t// invalid query\n\t\tif( !self.settings.shouldLoad.call(self,query) ){\n\t\t\tadd_template('not_loading');\n\n\t\t// add loading message\n\t\t}else if( self.loading ){\n\t\t\tadd_template('loading');\n\n\t\t// add no_results message\n\t\t}else if( results.items.length === 0 ){\n\t\t\tadd_template('no_results');\n\n\t\t}\n\n\n\n\t\t// add create option\n\t\thas_create_option = self.canCreate(query);\n\t\tif (has_create_option) {\n\t\t\tcreate = add_template('option_create');\n\t\t}\n\n\n\t\t// activate\n\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\tif( show_dropdown ){\n\n\t\t\tif (results.items.length > 0) {\n\n\t\t\t\tif( !dropdown_content.contains(active_option) && self.settings.mode === 'single' && self.items.length ){\n\t\t\t\t\tactive_option = self.getOption(self.items[0]);\n\t\t\t\t}\n\n\t\t\t\tif( !dropdown_content.contains(active_option)  ){\n\n\t\t\t\t\tlet active_index = 0;\n\t\t\t\t\tif( create && !self.settings.addPrecedence ){\n\t\t\t\t\t\tactive_index = 1;\n\t\t\t\t\t}\n\t\t\t\t\tactive_option = self.selectable()[active_index] as HTMLElement;\n\t\t\t\t}\n\n\t\t\t}else if( create ){\n\t\t\t\tactive_option = create;\n\t\t\t}\n\n\t\t\tif( triggerDropdown && !self.isOpen ){\n\t\t\t\tself.open();\n\t\t\t\tself.scrollToOption(active_option,'auto');\n\t\t\t}\n\t\t\tself.setActiveOption(active_option);\n\n\t\t}else{\n\t\t\tself.clearActiveOption();\n\t\t\tif( triggerDropdown && self.isOpen ){\n\t\t\t\tself.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return list of selectable options\n\t *\n\t */\n\tselectable():NodeList{\n\t\treturn this.dropdown_content.querySelectorAll('[data-selectable]');\n\t}\n\n\n\n\t/**\n\t * Adds an available option. If it already exists,\n\t * nothing will happen. Note: this does not refresh\n\t * the options list dropdown (use `refreshOptions`\n\t * for that).\n\t *\n\t * Usage:\n\t *\n\t *   this.addOption(data)\n\t *\n\t */\n\taddOption(data:TomOption|TomOption[]):void {\n\t\tvar value, self = this;\n\n\t\tif (Array.isArray(data)) {\n\t\t\tfor( const dat of data ){\n\t\t\t\tself.addOption(dat);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (value = self.registerOption(data)) {\n\t\t\tself.userOptions[value] = true;\n\t\t\tself.lastQuery = null;\n\t\t\tself.trigger('option_add', value, data);\n\t\t}\n\t}\n\n\t/**\n\t * Registers an option to the pool of options.\n\t *\n\t */\n\tregisterOption(data:TomOption):false|string {\n\t\tvar key = hash_key(data[this.settings.valueField]);\n\t\tif ( key === null || this.options.hasOwnProperty(key)) return false;\n\n\t\tdata.$order\t\t\t= data.$order || ++this.order;\n\t\tdata.$id\t\t\t= this.inputId + '-opt-' + data.$order;\n\t\tthis.options[key]\t= data;\n\t\treturn key;\n\t}\n\n\t/**\n\t * Registers an option group to the pool of option groups.\n\t *\n\t * @return {boolean|string}\n\t */\n\tregisterOptionGroup(data:TomOption) {\n\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\n\n\t\tif ( key === null ) return false;\n\n\t\tdata.$order = data.$order || ++this.order;\n\t\tthis.optgroups[key] = data;\n\t\treturn key;\n\t}\n\n\t/**\n\t * Registers a new optgroup for options\n\t * to be bucketed into.\n\t *\n\t */\n\taddOptionGroup(id:string, data:TomOption) {\n\t\tvar hashed_id;\n\t\tdata[this.settings.optgroupValueField] = id;\n\n\t\tif( hashed_id = this.registerOptionGroup(data) ){\n\t\t\tthis.trigger('optgroup_add', hashed_id, data);\n\t\t}\n\t}\n\n\t/**\n\t * Removes an existing option group.\n\t *\n\t */\n\tremoveOptionGroup(id:string) {\n\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\tdelete this.optgroups[id];\n\t\t\tthis.clearCache();\n\t\t\tthis.trigger('optgroup_remove', id);\n\t\t}\n\t}\n\n\t/**\n\t * Clears all existing option groups.\n\t */\n\tclearOptionGroups() {\n\t\tthis.optgroups = {};\n\t\tthis.clearCache();\n\t\tthis.trigger('optgroup_clear');\n\t}\n\n\t/**\n\t * Updates an option available for selection. If\n\t * it is visible in the selected items or options\n\t * dropdown, it will be re-rendered automatically.\n\t *\n\t */\n\tupdateOption(value:string, data:TomOption) {\n\t\tconst self = this;\n\t\tvar item_new;\n\t\tvar index_item;\n\n\t\tconst hashed\t\t= hash_key(value);\n\t\tif (hashed === null) return;\n\n\n\t\tconst value_new\t\t= hash_key(data[self.settings.valueField]);\n\t\tconst option\t\t= self.getOption(hashed);\n\t\tconst item\t\t\t= self.getItem(hashed);\n\n\n\t\t// sanity checks\n\t\tif (!self.options.hasOwnProperty(hashed)) return;\n\t\tif (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n\n\t\tdata.$order = data.$order || self.options[hashed].$order;\n\t\tdelete self.options[hashed];\n\n\t\t// invalidate render cache\n\t\t// don't remove existing node yet, we'll remove it after replacing it\n\t\tself.uncacheValue(value_new);\n\t\tself.uncacheValue(hashed,false);\n\n\t\tself.options[value_new] = data;\n\n\t\t// update the option if it's in the dropdown\n\t\tif( option ){\n\t\t\tif( self.dropdown_content.contains(option) ){\n\n\t\t\t\tconst option_new\t= self._render('option', data);\n\t\t\t\treplaceNode(option, option_new);\n\n\t\t\t\tif( self.activeOption === option ){\n\t\t\t\t\tself.setActiveOption(option_new);\n\t\t\t\t}\n\t\t\t}\n\t\t\toption.remove();\n\t\t}\n\n\t\t// update the item if we have one\n\t\tif( item ){\n\t\t\tindex_item = self.items.indexOf(hashed);\n\t\t\tif (index_item !== -1) {\n\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t}\n\n\t\t\titem_new\t= self._render('item', data);\n\n\t\t\tif( item.classList.contains('active') ) addClasses(item_new,'active');\n\n\t\t\treplaceNode( item, item_new);\n\t\t}\n\n\t\t// invalidate last query because we might have updated the sortField\n\t\tself.lastQuery = null;\n\t}\n\n\t/**\n\t * Removes a single option.\n\t *\n\t */\n\tremoveOption(value:string, silent?:boolean):void {\n\t\tconst self = this;\n\t\tvalue = get_hash(value);\n\n\t\tself.uncacheValue(value);\n\n\t\tdelete self.userOptions[value];\n\t\tdelete self.options[value];\n\t\tself.lastQuery = null;\n\t\tself.trigger('option_remove', value);\n\t\tself.removeItem(value, silent);\n\t}\n\n\t/**\n\t * Clears all options.\n\t */\n\tclearOptions() {\n\n\t\tthis.loadedSearches\t\t= {};\n\t\tthis.userOptions\t\t= {};\n\t\tthis.clearCache();\n\t\tvar selected:TomOptions\t= {};\n\t\tfor( let key in this.options){\n    \t\tif( this.options.hasOwnProperty(key) && this.items.indexOf(key) >= 0 ){\n\t\t\t\tselected[key] = this.options[key];\n\t\t\t}\n\t\t}\n\n\t\tthis.options = this.sifter.items = selected;\n\t\tthis.lastQuery = null;\n\t\tthis.trigger('option_clear');\n\t}\n\n\n\t/**\n\t * Removes a value from item and option caches\n\t *\n\t */\n\tuncacheValue(value:string, remove_node:boolean=true){\n\t\tconst self\t\t\t\t= this;\n\t\tconst cache_items\t\t= self.renderCache['item'];\n\t\tconst cache_options\t\t= self.renderCache['option'];\n\n\t\tif (cache_items) delete cache_items[value];\n\t\tif (cache_options) delete cache_options[value];\n\n\t\tif( remove_node ){\n\t\t\tconst option_el\t\t\t= self.getOption(value);\n\t\t\tif( option_el ) option_el.remove();\n\t\t}\n\t}\n\n\n\t/**\n\t * Returns the dom element of the option\n\t * matching the given value.\n\t *\n\t */\n\tgetOption(value:null|string, create:boolean=false):null|HTMLElement {\n\t\tvar hashed = hash_key(value);\n\t\tvar option_el = this.rendered('option',hashed);\n\t\t\n\t\tif( !option_el && create && hashed !== null ){\n\t\t\toption_el = this._render('option', this.options[hashed]);\n\t\t}\n\t\t\n\t\treturn option_el;\n\t}\n\n\t/**\n\t * Returns the dom element of the next or previous dom element of the same type\n\t * Note: adjacent options may not be adjacent DOM elements (optgroups)\n\t *\n\t */\n\tgetAdjacent( option:null|HTMLElement, direction:number, type:string = 'option' ) : HTMLElement|null{\n\t\tvar self = this, all;\n\n\t\tif( !option ){\n\t\t\treturn null;\n\t\t}\n\n\t\tif( type == 'item' ){\n\t\t\tall\t\t\t= self.controlChildren();\n\t\t}else{\n\t\t\tall\t\t\t= self.dropdown_content.querySelectorAll('[data-selectable]');\n\t\t}\n\n\t\tfor( let i = 0; i < all.length; i++ ){\n\t\t\tif( all[i] != option ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( direction > 0 ){\n\t\t\t\treturn all[i+1] as HTMLElement;\n\t\t\t}\n\n\t\t\treturn all[i-1] as HTMLElement;\n\t\t}\n\t\treturn null;\n\t}\n\n\n\t/**\n\t * Returns the dom element of the item\n\t * matching the given value.\n\t *\n\t */\n\tgetItem(item:string|TomItem|null):null|TomItem {\n\n\t\tif( typeof item == 'object' ){\n\t\t\treturn item;\n\t\t}\n\n\t\tvar value = hash_key(item);\n\t\treturn value !== null\n\t\t\t? this.control.querySelector(`[data-value=\"${addSlashes(value)}\"]`)\n\t\t\t: null;\n\t}\n\n\t/**\n\t * \"Selects\" multiple items at once. Adds them to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItems( values:string|string[], silent?:boolean ):void{\n\t\tvar self = this;\n\n\t\tvar items = Array.isArray(values) ? values : [values];\n\t\titems = items.filter(x => self.items.indexOf(x) === -1);\n\t\tfor (let i = 0, n = items.length; i < n; i++) {\n\t\t\tself.isPending = (i < n - 1);\n\t\t\tself.addItem(items[i], silent);\n\t\t}\n\t}\n\n\t/**\n\t * \"Selects\" an item. Adds it to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItem( value:string, silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events, () => {\n\t\t\tvar item, wasFull;\n\t\t\tconst self = this;\n\t\t \tconst inputMode = self.settings.mode;\n\t\t\tconst hashed = hash_key(value);\n\n\t\t\tif( hashed && self.items.indexOf(hashed) !== -1 ){\n\n\t\t\t\tif( inputMode === 'single' ){\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( inputMode === 'single' || !self.settings.duplicates ){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hashed === null || !self.options.hasOwnProperty(hashed)) return;\n\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\n\t\t\titem = self._render('item', self.options[hashed]);\n\n\t\t\tif( self.control.contains(item) ){ // duplicates\n\t\t\t\titem = item.cloneNode(true) as HTMLElement;\n\t\t\t}\n\n\t\t\twasFull = self.isFull();\n\t\t\tself.items.splice(self.caretPos, 0, hashed);\n\t\t\tself.insertAtCaret(item);\n\n\t\t\tif (self.isSetup) {\n\t\t\t\tlet options = self.selectable();\n\n\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\tif( !self.isPending && self.settings.hideSelected ){\n\t\t\t\t\tlet option = self.getOption(hashed);\n\t\t\t\t\tlet next = self.getAdjacent(option, 1);\n\t\t\t\t\tif( next ){\n\t\t\t\t\t\tself.setActiveOption(next);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// refreshOptions after setActiveOption(),\n\t\t\t\t// otherwise setActiveOption() will be called by refreshOptions() with the wrong value\n\t\t\t\tif( !self.isPending ){\n\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t}\n\n\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\tif ( !options.length || self.isFull()) {\n\t\t\t\t\tself.close();\n\t\t\t\t} else if (!self.isPending) {\n\t\t\t\t\tself.positionDropdown();\n\t\t\t\t}\n\n\t\t\t\tself.trigger('item_add', hashed, item);\n\n\t\t\t\tif (!self.isPending) {\n\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\tself.refreshState();\n\t\t\t}\n\n\t\t});\n\t}\n\n\t/**\n\t * Removes the selected item matching\n\t * the provided value.\n\t *\n\t */\n\tremoveItem( item:string|TomItem|null=null, silent?:boolean ){\n\t\tconst self\t\t= this;\n\t\titem\t\t\t= self.getItem(item);\n\n\t\tif( !item ) return;\n\n\t\tvar i,idx;\n\t\tconst value\t= item.dataset.value;\n\t\ti = nodeIndex(item);\n\n\t\titem.remove();\n\t\tif( item.classList.contains('active') ){\n\t\t\tidx = self.activeItems.indexOf(item);\n\t\t\tself.activeItems.splice(idx, 1);\n\t\t\tremoveClasses(item,'active');\n\t\t}\n\n\t\tself.items.splice(i, 1);\n\t\tself.lastQuery = null;\n\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\tself.removeOption(value, silent);\n\t\t}\n\n\t\tif (i < self.caretPos) {\n\t\t\tself.setCaret(self.caretPos - 1);\n\t\t}\n\n\t\tself.updateOriginalInput({silent: silent});\n\t\tself.refreshState();\n\t\tself.positionDropdown();\n\t\tself.trigger('item_remove', value, item);\n\n\t}\n\n\t/**\n\t * Invokes the `create` method provided in the\n\t * TomSelect options that should provide the data\n\t * for the new item, given the user input.\n\t *\n\t * Once this completes, it will be added\n\t * to the item list.\n\t *\n\t */\n\tcreateItem( input:null|string=null, triggerDropdown:boolean=true, callback:TomCreateCallback = ()=>{} ):boolean{\n\t\tvar self  = this;\n\t\tvar caret = self.caretPos;\n\t\tvar output;\n\t\tinput = input || self.inputValue();\n\n\t\tif (!self.canCreate(input)) {\n\t\t\tcallback();\n\t\t\treturn false;\n\t\t}\n\n\t\tself.lock();\n\n\t\tvar created = false;\n\t\tvar create = (data?:boolean|TomOption) => {\n\t\t\tself.unlock();\n\n\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\tvar value = hash_key(data[self.settings.valueField]);\n\t\t\tif( typeof value !== 'string' ){\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tself.setTextboxValue();\n\t\t\tself.addOption(data);\n\t\t\tself.setCaret(caret);\n\t\t\tself.addItem(value);\n\t\t\tself.refreshOptions(triggerDropdown && self.settings.mode !== 'single');\n\t\t\tcallback(data);\n\t\t\tcreated = true;\n\t\t};\n\n\t\tif( typeof self.settings.create === 'function' ){\n\t\t\toutput = self.settings.create.call(this, input, create);\n\t\t}else{\n\t\t\toutput = {\n\t\t\t\t[self.settings.labelField]: input,\n\t\t\t\t[self.settings.valueField]: input,\n\t\t\t};\n\t\t}\n\n\t\tif( !created ){\n\t\t\tcreate(output);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Re-renders the selected item lists.\n\t */\n\trefreshItems() {\n\t\tvar self = this;\n\t\tself.lastQuery = null;\n\n\t\tif (self.isSetup) {\n\t\t\tself.addItems(self.items);\n\t\t}\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Updates all state-dependent attributes\n\t * and CSS classes.\n\t */\n\trefreshState() {\n\t\tvar self     = this;\n\n\t\tself.refreshValidityState();\n\n\t\tvar isFull   = self.isFull();\n\n\t\tvar isLocked = self.isLocked;\n\n\t\tself.wrapper.classList.toggle('rtl',self.rtl);\n\n\t\tvar classList = self.control.classList;\n\n\t\tclassList.toggle('focus', self.isFocused)\n\t\tclassList.toggle('disabled', self.isDisabled)\n\t\tclassList.toggle('required', self.isRequired)\n\t\tclassList.toggle('invalid', self.isInvalid)\n\t\tclassList.toggle('locked', isLocked)\n\t\tclassList.toggle('full', isFull)\n\t\tclassList.toggle('not-full', !isFull)\n\t\tclassList.toggle('input-active', self.isFocused && !self.isInputHidden)\n\t\tclassList.toggle('dropdown-active', self.isOpen)\n\t\tclassList.toggle('has-options', isEmptyObject(self.options) )\n\t\tclassList.toggle('has-items', self.items.length > 0);\n\n\t}\n\n\n\t/**\n\t * Update the `required` attribute of both input and control input.\n\t *\n\t * The `required` property needs to be activated on the control input\n\t * for the error to be displayed at the right place. `required` also\n\t * needs to be temporarily deactivated on the input since the input is\n\t * hidden and can't show errors.\n\t */\n\trefreshValidityState() {\n\t\tvar self = this;\n\n\t\tif( !self.input.checkValidity ){\n\t\t\treturn;\n\t\t}\n\n\t\t// if required, make sure the input required attribute = true so checkValidity() will work\n\t\tif( this.isRequired ){\n\t\t\tself.input.required = true;\n\t\t}\n\n\t\tvar invalid = !self.input.checkValidity();\n\n\t\tself.isInvalid = invalid;\n\t\tself.control_input.required = invalid;\n\n\t\tif( this.isRequired ){\n\t\t\tself.input.required = !invalid;\n\t\t}\n\t}\n\n\t/**\n\t * Determines whether or not more items can be added\n\t * to the control without exceeding the user-defined maximum.\n\t *\n\t * @returns {boolean}\n\t */\n\tisFull() {\n\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t}\n\n\t/**\n\t * Refreshes the original <select> or <input>\n\t * element to reflect the current state.\n\t *\n\t */\n\tupdateOriginalInput( opts:TomArgObject = {} ){\n\t\tconst self = this;\n\t\tvar i, value, option, option_el, label;\n\n\t\tif( self.is_select_tag ){\n\n\t\t\tconst selected:HTMLOptionElement[]\t\t= [];\n\n\t\t\tfunction AddSelected(option_el:HTMLOptionElement|null, value:string, label:string):HTMLOptionElement{\n\n\t\t\t\tif( !option_el ){\n\t\t\t\t\toption_el = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>') as HTMLOptionElement;\n\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\tself.input.prepend(option_el);\n\t\t\t\tselected.push(option_el);\n\n\t\t\t\tsetAttr(option_el,{selected:'true'});\n\t\t\t\toption_el.selected = true;\n\n\t\t\t\treturn option_el;\n\t\t\t}\n\n\t\t\t// unselect all selected options\n\t\t\tself.input.querySelectorAll('option[selected]').forEach((option_el:Element) => {\n\t\t\t\tsetAttr(option_el,{selected:null});\n\t\t\t\t(<HTMLOptionElement>option_el).selected = false;\n\t\t\t});\n\n\n\t\t\t// nothing selected?\n\t\t\tif( self.items.length == 0 && self.settings.mode == 'single' && !self.isRequired ){\n\t\t\t\toption_el = self.input.querySelector('option[value=\"\"]') as HTMLOptionElement;\n\t\t\t\tAddSelected(option_el, \"\", \"\");\n\n\t\t\t// order selected <option> tags for values in self.items\n\t\t\t}else{\n\n\t\t\t\tfor( i = self.items.length-1; i >=0 ; i-- ){\n\t\t\t\t\tvalue\t\t\t= self.items[i];\n\t\t\t\t\toption\t\t\t= self.options[value];\n\t\t\t\t\tlabel\t\t\t= option[self.settings.labelField] || '';\n\n\t\t\t\t\tif( selected.includes(option.$option) ){\n\t\t\t\t\t\tconst reuse_opt = self.input.querySelector(`option[value=\"${addSlashes(value)}\"]:not([selected])`) as HTMLOptionElement;\n\t\t\t\t\t\tAddSelected(reuse_opt, value, label);\n\t\t\t\t\t}else{\n\t\t\t\t\t\toption.$option\t= AddSelected(option.$option, value, label);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\t\t\tself.input.value = self.getValue() as string;\n\t\t}\n\n\t\tif (self.isSetup) {\n\t\t\tif (!opts.silent) {\n\t\t\t\tself.trigger('change', self.getValue() );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Shows the autocomplete dropdown containing\n\t * the available options.\n\t */\n\topen() {\n\t\tvar self = this;\n\n\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\tself.isOpen = true;\n\t\tsetAttr(self.control_input,{'aria-expanded': 'true'});\n\t\tself.refreshState();\n\t\tapplyCSS(self.dropdown,{visibility: 'hidden', display: 'block'});\n\t\tself.positionDropdown();\n\t\tapplyCSS(self.dropdown,{visibility: 'visible', display: 'block'});\n\t\tself.focus();\n\t\tself.trigger('dropdown_open', self.dropdown);\n\t}\n\n\t/**\n\t * Closes the autocomplete dropdown menu.\n\t */\n\tclose(setTextboxValue=true) {\n\t\tvar self = this;\n\t\tvar trigger = self.isOpen;\n\n\t\tif( setTextboxValue ){\n\n\t\t\t// before blur() to prevent form onchange event\n\t\t\tself.setTextboxValue();\n\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\tself.hideInput();\n\n\t\t\t\t// Do not trigger blur while inside a blur event,\n\t\t\t\t// this fixes some weird tabbing behavior in FF and IE.\n\t\t\t\t// See #selectize.js#1164\n\t\t\t\tif( !self.tab_key ){\n\t\t\t\t\tself.blur(); // close keyboard on iOS\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tself.isOpen = false;\n\t\tsetAttr(self.control_input,{'aria-expanded': 'false'});\n\t\tapplyCSS(self.dropdown,{display: 'none'});\n\t\tif( self.settings.hideSelected ){\n\t\t\tself.clearActiveOption();\n\t\t}\n\t\tself.refreshState();\n\n\t\tif (trigger) self.trigger('dropdown_close', self.dropdown);\n\t}\n\n\t/**\n\t * Calculates and applies the appropriate\n\t * position of the dropdown if dropdownParent = 'body'.\n\t * Otherwise, position is determined by css\n\t */\n\tpositionDropdown(){\n\n\t\tif( this.settings.dropdownParent !== 'body' ){\n\t\t\treturn;\n\t\t}\n\n\t\tvar context\t\t\t= this.control;\n\t\tvar rect\t\t\t= context.getBoundingClientRect();\n\t\tvar top\t\t\t\t= context.offsetHeight + rect.top  + window.scrollY;\n\t\tvar left\t\t\t= rect.left + window.scrollX;\n\n\n\t\tapplyCSS(this.dropdown,{\n\t\t\twidth : rect.width + 'px',\n\t\t\ttop   : top + 'px',\n\t\t\tleft  : left + 'px'\n\t\t});\n\n\t}\n\n\t/**\n\t * Resets / clears all selected items\n\t * from the control.\n\t *\n\t */\n\tclear(silent?:boolean) {\n\t\tvar self = this;\n\n\t\tif (!self.items.length) return;\n\n\t\tvar items = self.controlChildren();\n\t\tfor( const item of items ){\n\t\t\tself.removeItem(item,true);\n\t\t}\n\n\t\tself.showInput();\n\t\tif( !silent ) self.updateOriginalInput();\n\t\tself.trigger('clear');\n\t}\n\n\t/**\n\t * A helper method for inserting an element\n\t * at the current caret position.\n\t *\n\t */\n\tinsertAtCaret(el:HTMLElement) {\n\t\tvar self = this;\n\t\tvar caret\t= Math.min(self.caretPos, self.items.length);\n\t\tvar target\t= self.control;\n\n\t\tif (caret === 0) {\n\t\t\ttarget.insertBefore(el, target.firstChild);\n\t\t} else {\n\t\t\ttarget.insertBefore(el, target.children[caret]);\n\t\t}\n\n\t\tself.setCaret(caret + 1);\n\t}\n\n\t/**\n\t * Removes the current selected item(s).\n\t *\n\t */\n\tdeleteSelection(e:KeyboardEvent):boolean {\n\t\tvar direction, selection, caret, tail;\n\t\tvar self = this;\n\n\t\tdirection = (e && e.keyCode === constants.KEY_BACKSPACE) ? -1 : 1;\n\t\tselection = getSelection(self.control_input);\n\n\n\t\t// determine items that will be removed\n\t\tconst rm_items:TomItem[]\t= [];\n\n\t\tif (self.activeItems.length) {\n\n\t\t\ttail = getTail(self.activeItems, direction);\n\t\t\tcaret = nodeIndex(tail);\n\n\t\t\tif (direction > 0) { caret++; }\n\n\t\t\tfor( const item of self.activeItems ){\n\t\t\t\trm_items.push( item );\n\t\t\t}\n\n\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\tconst items = self.controlChildren();\n\t\t\tif (direction < 0 && selection.start === 0 && selection.length === 0) {\n\t\t\t\trm_items.push( items[self.caretPos - 1]);\n\n\t\t\t} else if (direction > 0 && selection.start === self.inputValue().length) {\n\t\t\t\trm_items.push(items[self.caretPos]);\n\t\t\t}\n\t\t}\n\n\t\tconst values = rm_items.map(item => item.dataset.value);\n\n\t\t// allow the callback to abort\n\t\tif (!values.length || (typeof self.settings.onDelete === 'function' && self.settings.onDelete.call(self,values,e) === false)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tpreventDefault(e,true);\n\n\t\t// perform removal\n\t\tif (typeof caret !== 'undefined') {\n\t\t\tself.setCaret(caret);\n\t\t}\n\n\t\twhile( rm_items.length ){\n\t\t\tself.removeItem(rm_items.pop());\n\t\t}\n\n\t\tself.showInput();\n\t\tself.positionDropdown();\n\t\tself.refreshOptions(false);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Selects the previous / next item (depending on the `direction` argument).\n\t *\n\t * > 0 - right\n\t * < 0 - left\n\t *\n\t */\n\tadvanceSelection(direction:number, e?:MouseEvent|KeyboardEvent) {\n\t\tvar idx, last_active, adjacent, self = this;\n\n\t\tif (self.rtl) direction *= -1;\n\t\tif( self.inputValue().length ) return;\n\n\n\t\t// add or remove to active items\n\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) || isKeyDown('shiftKey',e) ){\n\n\t\t\tlast_active\t\t\t= self.getLastActive(direction);\n\t\t\tif( last_active ){\n\n\t\t\t\tif( !last_active.classList.contains('active') ){\n\t\t\t\t\tadjacent\t\t\t= last_active;\n\t\t\t\t}else{\n\t\t\t\t\tadjacent\t\t\t= self.getAdjacent(last_active,direction,'item');\n\t\t\t\t}\n\n\t\t\t// if no active item, get items adjacent to the control input\n\t\t\t}else if( direction > 0 ){\n\t\t\t\tadjacent\t\t\t= self.control_input.nextElementSibling;\n\t\t\t}else{\n\t\t\t\tadjacent\t\t\t= self.control_input.previousElementSibling;\n\t\t\t}\n\n\n\t\t\tif( adjacent ){\n\t\t\t\tif( adjacent.classList.contains('active') ){\n\t\t\t\t\tself.removeActiveItem(last_active);\n\t\t\t\t}\n\t\t\t\tself.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n\t\t\t}\n\n\t\t// move caret to the left or right\n\t\t}else if( self.isFocused && !self.activeItems.length ){\n\n\t\t\tself.setCaret(self.caretPos + direction);\n\n\t\t// move caret before or after selected items\n\t\t}else{\n\n\t\t\tlast_active\t\t= self.getLastActive(direction);\n\t\t\tif( last_active ){\n\t\t\t\tidx = nodeIndex(last_active);\n\t\t\t\tself.setCaret(direction > 0 ? idx + 1: idx);\n\t\t\t\tself.setActiveItem();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Get the last active item\n\t *\n\t */\n\tgetLastActive(direction?:number){\n\n\t\tlet last_active = this.control.querySelector('.last-active');\n\t\tif( last_active ){\n\t\t\treturn last_active;\n\t\t}\n\n\n\t\tvar result = this.control.querySelectorAll('.active');\n\t\tif( result ){\n\t\t\treturn getTail(result,direction);\n\t\t}\n\t}\n\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tsetCaret(new_pos:number) {\n\t\tvar self = this;\n\n\t\tif( self.settings.mode === 'single' || self.settings.controlInput ) {\n\t\t\tnew_pos = self.items.length;\n\t\t} else {\n\t\t\tnew_pos = Math.max(0, Math.min(self.items.length, new_pos));\n\n\t\t\tif( new_pos != self.caretPos && !self.isPending ){\n\n\t\t\t\tself.controlChildren().forEach((child,j) => {\n\t\t\t\t\tif( j < new_pos ){\n\t\t\t\t\t\tself.control_input.insertAdjacentElement('beforebegin', child );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.control.appendChild( child );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tself.caretPos = new_pos;\n\t}\n\n\t/**\n\t * Return list of item dom elements\n\t *\n\t */\n\tcontrolChildren():TomItem[]{\n\t\treturn Array.from( this.control.getElementsByClassName(this.settings.itemClass) ) as TomItem[];\n\t}\n\n\t/**\n\t * Disables user input on the control. Used while\n\t * items are being asynchronously created.\n\t */\n\tlock() {\n\t\tthis.close();\n\t\tthis.isLocked = true;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Re-enables user input on the control.\n\t */\n\tunlock() {\n\t\tthis.isLocked = false;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Disables user input on the control completely.\n\t * While disabled, it cannot receive focus.\n\t */\n\tdisable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= true;\n\t\tself.control_input.disabled\t\t= true;\n\t\tself.control_input.tabIndex\t\t= -1;\n\t\tself.isDisabled\t\t\t\t\t= true;\n\t\tself.lock();\n\t}\n\n\t/**\n\t * Enables the control so that it can respond\n\t * to focus and user input.\n\t */\n\tenable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= false;\n\t\tself.control_input.disabled\t\t= false;\n\t\tself.control_input.tabIndex\t\t= self.tabIndex;\n\t\tself.isDisabled\t\t\t\t\t= false;\n\t\tself.unlock();\n\t}\n\n\t/**\n\t * Completely destroys the control and\n\t * unbinds all event listeners so that it can\n\t * be garbage collected.\n\t */\n\tdestroy() {\n\t\tvar self = this;\n\t\tvar revertSettings = self.revertSettings;\n\n\t\tself.trigger('destroy');\n\t\tself.off();\n\t\tself.wrapper.remove();\n\t\tself.dropdown.remove();\n\n\t\tself.input.innerHTML = revertSettings.innerHTML;\n\t\tself.input.tabIndex = revertSettings.tabIndex;\n\n\t\tremoveClasses(self.input,'tomselected');\n\t\tsetAttr(self.input,{hidden:null});\n\t\tself.input.required = this.isRequired;\n\n\t\tself._destroy();\n\n\t\tdelete self.input.tomselect;\n\t}\n\n\t/**\n\t * A helper method for rendering \"item\" and\n\t * \"option\" templates, given the data.\n\t *\n\t */\n\trender( templateName:TomTemplateNames, data?:any ):null|HTMLElement{\n\n\t\tif( typeof this.settings.render[templateName] !== 'function' ){\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this._render(templateName, data);\n\t}\n\n\t/**\n\t * _render() can be called directly when we know we don't want to hit the cache\n\t * return type could be null for some templates, we need https://github.com/microsoft/TypeScript/issues/33014\n\t */\n\t_render( templateName:TomTemplateNames, data?:any ):HTMLElement{\n\t\tvar value = '', id, html;\n\t\tconst self = this;\n\n\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\tvalue\t= get_hash(data[self.settings.valueField]);\n\t\t\thtml\t= self.rendered(templateName,value);\n\n\t\t\tif( html ){\n\t\t\t\treturn html;\n\t\t\t}\n\n\t\t}\n\n\t\t// render markup\n\t\thtml = self.settings.render[templateName].call(this, data, escape_html);\n\n\t\tif( html == null ){\n\t\t\treturn html;\n\t\t}\n\n\t\thtml = getDom( html );\n\n\t\t// add mandatory attributes\n\t\tif (templateName === 'option' || templateName === 'option_create') {\n\n\t\t\tif( data[self.settings.disabledField] ){\n\t\t\t\tsetAttr(html,{'aria-disabled':'true'});\n\t\t\t}else{\n\t\t\t\tsetAttr(html,{'data-selectable': ''});\n\t\t\t}\n\n\t\t}else if (templateName === 'optgroup') {\n\t\t\tid = data.group[self.settings.optgroupValueField];\n\t\t\tsetAttr(html,{'data-group': id});\n\t\t\tif(data.group[self.settings.disabledField]) {\n\t\t\t\tsetAttr(html,{'data-disabled': ''});\n\t\t\t}\n\t\t}\n\n\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\tsetAttr(html,{'data-value': value });\n\n\n\t\t\t// make sure we have some classes if a template is overwritten\n\t\t\tif( templateName === 'item' ){\n\t\t\t\taddClasses(html,self.settings.itemClass);\n\t\t\t}else{\n\t\t\t\taddClasses(html,self.settings.optionClass);\n\t\t\t\tsetAttr(html,{\n\t\t\t\t\trole:'option',\n\t\t\t\t\tid:data.$id\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// update cache\n\t\t\tself.renderCache[templateName][value] = html;\n\n\t\t}\n\n\t\treturn html;\n\t}\n\n\t/**\n\t * Return the previously rendered item or option\n\t *\n\t */\n\trendered( templateName:TomTemplateNames, value:null|string ):null|HTMLElement{\n\t\treturn value !== null && this.renderCache[templateName].hasOwnProperty(value)\n\t\t\t? this.renderCache[templateName][value]\n\t\t\t: null;\n\t}\n\n\t/**\n\t * Clears the render cache for a template. If\n\t * no template is given, clears all render\n\t * caches.\n\t *\n\t */\n\tclearCache( templateName?:'item'|'option' ):void{\n\t\tvar self = this;\n\n\t\t// remove options from DOM\n\t\tif(templateName === void 0 || 'option' ){\n\t\t\tfor( let key in self.options){\n\t\t\t\tconst el = self.getOption(key);\n\t\t\t\tif( el ) el.remove();\n\t\t\t}\n\t\t}\n\n\t\tif( templateName === void 0 ){\n\t\t\tself.renderCache = {'item':{},'option':{}};\n\t\t} else {\n\t\t\tself.renderCache[templateName] = {};\n\t\t}\n\n\t}\n\n\t/**\n\t * Determines whether or not to display the\n\t * create item prompt, given a user input.\n\t *\n\t */\n\tcanCreate( input:string ):boolean {\n\t\treturn this.settings.create && (input.length > 0) && (this.settings.createFilter as TomCreateFilter ).call(this, input);\n\t}\n\n\n\t/**\n\t * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n\t *\n\t * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n\t *\n\t * });\n\t */\n\thook( when:string, method:string, new_fn:any ){\n\t\tvar self = this;\n\t\tvar orig_method = self[method];\n\n\n\t\tself[method] = function(){\n\t\t\tvar result, result_new;\n\n\t\t\tif( when === 'after' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\tresult_new = new_fn.apply(self, arguments );\n\n\t\t\tif( when === 'instead' ){\n\t\t\t\treturn result_new;\n\t\t\t}\n\n\t\t\tif( when === 'before' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t}\n\n};\n", "/**\n * Plugin: \"change_listener\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select.js';\nimport getSettings from '../../getSettings.js';\nimport { TomSettings } from '../../types/index';\nimport { addEvent } from '../../utils';\n\nTomSelect.define('change_listener',function(this:TomSelect){\n\tconst self\t\t= this;\n\tconst joined\t= (arr:string[]):string => arr.join(self.settings.delimiter);\n\n\taddEvent(self.input,'change',()=>{\n\n\t\tvar settings\t= getSettings( self.input, {delimiter:self.settings.delimiter} as TomSettings );\n\n\t\t// prevent infinite loops\n\t\tif( joined(self.items) == joined(settings.items) ){\n\t\t\treturn;\n\t\t}\n\n\t\tself.setupOptions(settings.options,settings.optgroups);\n\t\tself.setValue(settings.items);\n\t});\n\n});\n", "/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\nimport { preventDefault, hash_key } from '../../utils';\nimport { getDom } from '../../vanilla';\n\n\nTomSelect.define('checkbox_options',function(this:TomSelect) {\n\tvar self = this;\n\tvar orig_onOptionSelect = self.onOptionSelect;\n\n\tself.settings.hideSelected = false;\n\n\n\t// update the checkbox for an option\n\tvar UpdateCheckbox = function(option:HTMLElement){\n\t\tsetTimeout(()=>{\n\t\t\tvar checkbox = option.querySelector('input') as HTMLInputElement;\n\t\t\tif( option.classList.contains('selected') ){\n\t\t\t\tcheckbox.checked = true;\n\t\t\t}else{\n\t\t\t\tcheckbox.checked = false;\n\t\t\t}\n\t\t},1);\n\t};\n\n\t// add checkbox to option template\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_option = self.settings.render.option;\n\n\t\tself.settings.render.option = (data, escape_html) => {\n\t\t\tvar rendered = getDom(orig_render_option.call(self, data, escape_html));\n\t\t\tvar checkbox = document.createElement('input');\n\t\t\tcheckbox.addEventListener('click',function(evt){\n\t\t\t\tpreventDefault(evt);\n\t\t\t});\n\n\t\t\tcheckbox.type = 'checkbox';\n\t\t\tconst hashed = hash_key(data[self.settings.valueField]);\n\n\n\t\t\tif( hashed && self.items.indexOf(hashed) > -1 ){\n\t\t\t\tcheckbox.checked = true;\n\t\t\t}\n\n\t\t\trendered.prepend(checkbox);\n\t\t\treturn rendered;\n\t\t};\n\t});\n\n\t// uncheck when item removed\n\tself.on('item_remove',(value:string) => {\n\t\tvar option = self.getOption(value);\n\n\t\tif( option ){ // if dropdown hasn't been opened yet, the option won't exist\n\t\t\toption.classList.remove('selected'); // selected class won't be removed yet\n\t\t\tUpdateCheckbox(option);\n\t\t}\n\t});\n\n\n\t// remove items when selected option is clicked\n\tself.hook('instead','onOptionSelect',( evt:KeyboardEvent, option:HTMLElement )=>{\n\n\t\tif( option.classList.contains('selected') ){\n\t\t\toption.classList.remove('selected')\n\t\t\tself.removeItem(option.dataset.value);\n\t\t\tself.refreshOptions();\n\t\t\tpreventDefault(evt,true);\n\t\t\treturn;\n        }\n\n\t\torig_onOptionSelect.call(self, evt, option);\n\n\t\tUpdateCheckbox(option);\n\t});\n\n\n});\n", "/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select.js';\nimport { getDom } from '../../vanilla';\nimport { CBOptions } from './types';\n\nTomSelect.define('clear_button',function(this:TomSelect, userOptions:CBOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\tclassName: 'clear-button',\n\t\ttitle: 'Clear All',\n\t\thtml: (data:CBOptions) => {\n\t\t\treturn `<div class=\"${data.className}\" title=\"${data.title}\">&times;</div>`;\n\t\t}\n\t}, userOptions);\n\n\tself.on('initialize',()=>{\n\t\tvar button = getDom(options.html(options));\n\t\tbutton.addEventListener('click',(evt)=>{\n\t\t\tself.clear();\n\t\t\tevt.preventDefault();\n\t\t\tevt.stopPropagation();\n\t\t});\n\t\tself.control.appendChild(button);\n\t});\n\n});\n", "/**\n * Plugin: \"drag_drop\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\n\nTomSelect.define('drag_drop',function(this:TomSelect) {\n\tvar self = this;\n\tif (!$.fn.sortable) throw new Error('The \"drag_drop\" plugin requires jQuery UI \"sortable\".');\n\tif (self.settings.mode !== 'multi') return;\n\n\tvar orig_lock\t\t= self.lock;\n\tvar orig_unlock\t\t= self.unlock;\n\n\tself.hook('instead','lock',()=>{\n\t\tvar sortable = $(self.control).data('sortable');\n\t\tif (sortable) sortable.disable();\n\t\treturn orig_lock.call(self);\n\t});\n\n\tself.hook('instead','unlock',()=>{\n\t\tvar sortable = $(self.control).data('sortable');\n\t\tif (sortable) sortable.enable();\n\t\treturn orig_unlock.call(self);\n\t});\n\n\tself.on('initialize',()=>{\n\t\tvar $control = $(self.control).sortable({\n\t\t\titems: '[data-value]',\n\t\t\tforcePlaceholderSize: true,\n\t\t\tdisabled: self.isLocked,\n\t\t\tstart: (e, ui) => {\n\t\t\t\tui.placeholder.css('width', ui.helper.css('width'));\n\t\t\t\t$control.css({overflow: 'visible'});\n\t\t\t},\n\t\t\tstop: ()=>{\n\t\t\t\t$control.css({overflow: 'hidden'});\n\n\t\t\t\tvar values:string[] = [];\n\t\t\t\t$control.children('[data-value]').each(function(this:HTMLElement){\n\t\t\t\t\tif( this.dataset.value ) values.push(this.dataset.value);\n\t\t\t\t});\n\n\t\t\t\tself.setValue(values);\n\t\t\t}\n\t\t});\n\n\t});\n\n});\n", "/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select.js';\nimport { getDom } from '../../vanilla';\nimport { preventDefault } from '../../utils';\nimport { DHOptions } from './types';\n\nTomSelect.define('dropdown_header',function(this:TomSelect, userOptions:DHOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\ttitle         : 'Untitled',\n\t\theaderClass   : 'dropdown-header',\n\t\ttitleRowClass : 'dropdown-header-title',\n\t\tlabelClass    : 'dropdown-header-label',\n\t\tcloseClass    : 'dropdown-header-close',\n\n\t\thtml: (data:DHOptions) => {\n\t\t\treturn (\n\t\t\t\t'<div class=\"' + data.headerClass + '\">' +\n\t\t\t\t\t'<div class=\"' + data.titleRowClass + '\">' +\n\t\t\t\t\t\t'<span class=\"' + data.labelClass + '\">' + data.title + '</span>' +\n\t\t\t\t\t\t'<a class=\"' + data.closeClass + '\">&times;</a>' +\n\t\t\t\t\t'</div>' +\n\t\t\t\t'</div>'\n\t\t\t);\n\t\t}\n\t}, userOptions);\n\n\tself.on('initialize',()=>{\n\t\tvar header = getDom(options.html(options));\n\n\t\tvar close_link = header.querySelector('.'+options.closeClass);\n\t\tif( close_link ){\n\t\t\tclose_link.addEventListener('click',(evt)=>{\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\tself.close();\n\t\t\t});\n\t\t}\n\n\t\tself.dropdown.insertBefore(header, self.dropdown.firstChild);\n\t});\n\n});\n", "/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select.js';\nimport * as constants from '../../constants.js';\nimport { getDom, setAttr } from '../../vanilla';\nimport { addEvent } from '../../utils';\n\n\nTomSelect.define('dropdown_input',function(this:TomSelect) {\n\tvar self = this;\n\n\tvar input = self.settings.controlInput || '<input type=\"text\" autocomplete=\"off\" class=\"dropdown-input\" />';\n\tinput = getDom( input ) as HTMLInputElement;\n\n\tif (self.settings.placeholder) {\n\t\tsetAttr(input,{placeholder:self.settings.placeholder});\n\t}\n\n\tself.settings.controlInput = input;\n\tself.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\n\n\tself.on('initialize',()=>{\n\n\t\t// open/close dropdown when tabbing focus on wrapper\n\t\taddEvent(self.wrapper,'focus', (evt) => {\n\t\t\tself.onFocus(evt as MouseEvent)\n\t\t});\n\t\t\n\t\tconst setTabIndex = () => {\n\t\t\tsetAttr(self.wrapper,{tabindex:self.input.disabled ? '-1' : self.tabIndex});\n\t\t};\n\t\t\n\t\tself.on('dropdown_close',setTabIndex);\n\t\tself.on('dropdown_open',() => setAttr(self.wrapper,{tabindex:'-1'}) );\n\t\tsetTabIndex();\n\n\n\t\t// keyboard navigation\n\t\taddEvent(self.wrapper,'keypress',(evt) => {\n\n\t\t\tif( self.control.contains(evt.target as HTMLElement) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif( self.dropdown.contains(evt.target as HTMLElement) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// open dropdown on enter when wrapper is tab-focused\n\t\t\tswitch( (<KeyboardEvent>evt).keyCode ){\n\t\t\t\tcase constants.KEY_RETURN:\n\t\t\t\t\tself.onClick();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t});\n\n\t\tlet div = getDom('<div class=\"dropdown-input-wrap\">');\n\t\tdiv.appendChild(input);\n\t\tself.dropdown.insertBefore(div, self.dropdown.firstChild);\n\t});\n\n});\n", "/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\nimport { addEvent } from '../../utils';\n\nTomSelect.define('input_autogrow', function(this:TomSelect) {\n\n\tvar self\t\t\t\t\t= this;\n\n\tself.on('initialize',()=>{\n\n\n\t\tvar test_input\t\t\t\t= document.createElement('span');\n\t\tvar control\t\t\t\t\t= self.control_input;\n\t\ttest_input.style.cssText\t= 'position:absolute; top:-99999px; left:-99999px; width:auto; padding:0; white-space:pre; ';\n\n\t\tself.wrapper.appendChild(test_input);\n\n\n\t\tvar transfer_styles\t\t\t= [ 'letterSpacing', 'fontSize', 'fontFamily', 'fontWeight', 'textTransform' ];\n\n\t\tfor( const style_name of transfer_styles ){\n\t\t\t// @ts-ignore TS7015 https://stackoverflow.com/a/50506154/697576\n\t\t\ttest_input.style[style_name] = control.style[style_name];\n\t\t}\n\n\n\t\t/**\n\t\t * Set the control width\n\t\t *\n\t\t */\n\t\tvar resize = ()=>{\n\t\t\tif( self.items.length > 0 ){\n\t\t\t\ttest_input.textContent\t= control.value;\n\t\t\t\tcontrol.style.width\t\t= test_input.clientWidth+'px';\n\t\t\t}else{\n\t\t\t\tcontrol.style.width\t\t= '';\n\t\t\t}\n\n\t\t};\n\n\t\tresize();\n\t\tself.on('update item_add item_remove',resize);\n\t\taddEvent(control,'input', resize );\n\t\taddEvent(control,'keyup', resize );\n\t\taddEvent(control,'blur', resize );\n\t\taddEvent(control,'update', resize );\n\t});\n\n});\n", "/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\n\nTomSelect.define('no_backspace_delete', function(this:TomSelect) {\n\tvar self = this;\n\tvar orig_deleteSelection = self.deleteSelection;\n\n\n\tthis.hook('instead','deleteSelection',(evt:KeyboardEvent) => {\n\n\t\tif( self.activeItems.length ){\n\t\t\treturn orig_deleteSelection.call(self, evt);\n\t\t}\n\n\t\treturn false;\n\t});\n\n});\n", "/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\n\nTomSelect.define('no_active_items', function(this:TomSelect) {\n\tthis.hook('instead','setActiveItem',() => {});\n\tthis.hook('instead','selectAll',() => {});\n});\n", "/**\n * Plugin: \"optgroup_columns\" (Tom Select.js)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select.js';\nimport * as constants from '../../constants.js';\nimport { parentMatch, nodeIndex } from '../../vanilla';\n\nTomSelect.define('optgroup_columns', function(this:TomSelect) {\n\tvar self = this;\n\n\tvar orig_keydown = self.onKeyDown;\n\n\tself.hook('instead','onKeyDown',(evt:KeyboardEvent)=>{\n\t\tvar index, option, options, optgroup;\n\n\t\tif( !self.isOpen || !(evt.keyCode === constants.KEY_LEFT || evt.keyCode === constants.KEY_RIGHT)) {\n\t\t\treturn orig_keydown.call(self,evt);\n\t\t}\n\n\t\toptgroup\t\t\t= parentMatch(self.activeOption,'[data-group]');\n\t\tindex\t\t\t\t= nodeIndex(self.activeOption,'[data-selectable]');\n\n\t\tif( !optgroup ){\n\t\t\treturn;\n\t\t}\n\n\t\tif( evt.keyCode === constants.KEY_LEFT ){\n\t\t\toptgroup = optgroup.previousSibling;\n\t\t} else {\n\t\t\toptgroup = optgroup.nextSibling;\n\t\t}\n\n\t\tif( !optgroup ){\n\t\t\treturn;\n\t\t}\n\n\t\toptions\t\t\t\t= (<HTMLOptGroupElement>optgroup).querySelectorAll('[data-selectable]');\n\t\toption\t\t\t\t= options[ Math.min(options.length - 1, index) ] as HTMLElement;\n\n\t\tif( option ){\n\t\t\tself.setActiveOption(option);\n\t\t}\n\n\t});\n\n});\n", "/**\n * Plugin: \"remove_button\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\nimport { getDom } from '../../vanilla';\nimport { escape_html, preventDefault, addEvent } from '../../utils';\nimport { TomOption } from '../../types/index';\nimport { RBOptions } from './types';\n\n\nTomSelect.define('remove_button',function(this:TomSelect, userOptions:RBOptions ){\n\n\tconst options = Object.assign({\n\t\t\tlabel     : '&times;',\n\t\t\ttitle     : 'Remove',\n\t\t\tclassName : 'remove',\n\t\t\tappend    : true\n\t\t}, userOptions);\n\n\n\t//options.className = 'remove-single';\n\tvar self\t\t\t= this;\n\n\t// override the render method to add remove button to each item\n\tif( !options.append ){\n\t\treturn;\n\t}\n\n\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_item = self.settings.render.item;\n\n\t\tself.settings.render.item = (data:TomOption, escape:typeof escape_html) => {\n\n\t\t\tvar rendered = getDom(orig_render_item.call(self, data, escape));\n\n\t\t\tvar close_button = getDom(html);\n\t\t\trendered.appendChild(close_button);\n\n\t\t\taddEvent(close_button,'mousedown',(evt) => {\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t});\n\n\t\t\taddEvent(close_button,'click',(evt) => {\n\n\t\t\t\t// propagating will trigger the dropdown to show for single mode\n\t\t\t\tpreventDefault(evt,true);\n\n\t\t\t\tif (self.isLocked) return;\n\n\t\t\t\tvar value = rendered.dataset.value;\n\t\t\t\tself.removeItem(value);\n\t\t\t\tself.refreshOptions(false);\n\t\t\t});\n\n\t\t\treturn rendered;\n\t\t};\n\n\t});\n\n\n});\n", "/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\nimport { TomOption } from '../../types/index';\n\ntype TPluginOptions = {\n\ttext?:(option:TomOption)=>string,\n};\n\nTomSelect.define('restore_on_backspace',function(this:TomSelect, userOptions:TPluginOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\ttext: (option:TomOption) => {\n\t\t\treturn option[self.settings.labelField];\n\t\t}\n\t},userOptions);\n\n\tself.on('item_remove',function(value:string){\n\t\tif( self.control_input.value.trim() === '' ){\n\t\t\tvar option = self.options[value];\n\t\t\tif( option ){\n\t\t\t\tself.setTextboxValue(options.text.call(self, option));\n\t\t\t}\n\t\t}\n\t});\n\n});\n", "/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\nimport { TomOption } from '../../types/index';\nimport { addClasses } from '../../vanilla';\n\n\nTomSelect.define('virtual_scroll',function(this:TomSelect) {\n\tconst self\t\t\t\t\t\t\t= this;\n\tconst orig_canLoad\t\t\t\t\t= self.canLoad;\n\tconst orig_clearActiveOption\t\t= self.clearActiveOption;\n\tconst orig_loadCallback\t\t\t\t= self.loadCallback;\n\n\tvar pagination:{[key:string]:any}\t= {};\n\tvar dropdown_content:HTMLElement;\n\tvar loading_more\t\t\t\t\t= false;\n\n\n\tif( !self.settings.firstUrl ){\n\t\tthrow 'virtual_scroll plugin requires a firstUrl() method';\n\t\treturn;\n\t}\n\n\n\t// in order for virtual scrolling to work,\n\t// options need to be ordered the same way they're returned from the remote data source\n\tself.settings.sortField\t\t\t= [{field:'$order'},{field:'$score'}];\n\n\n\t// can we load more results for given query?\n\tfunction canLoadMore(query:string):boolean{\n\n\t\tif( typeof self.settings.maxOptions === 'number' && dropdown_content.children.length >= self.settings.maxOptions ){\n\t\t\treturn false;\n\t\t}\n\n\t\tif( (query in pagination) && pagination[query] ){\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\n\t// set the next url that will be\n\tself.setNextUrl = function(value:string,next_url:any):void{\n\t\tpagination[value] = next_url;\n\t};\n\n\t// getUrl() to be used in settings.load()\n\tself.getUrl = function(query:string):any{\n\n\t\tif( query in pagination ){\n\t\t\tconst next_url = pagination[query];\n\t\t\tpagination[query] = false;\n\t\t\treturn next_url;\n\t\t}\n\n\t\t// if the user goes back to a previous query\n\t\t// we need to load the first page again\n\t\tpagination = {};\n\n\t\treturn self.settings.firstUrl(query);\n\t};\n\n\t// don't clear the active option (and cause unwanted dropdown scroll)\n\t// while loading more results\n\tself.hook('instead','clearActiveOption',()=>{\n\n\t\tif( loading_more ){\n\t\t\treturn;\n\t\t}\n\n\t\treturn orig_clearActiveOption.call(self);\n\t});\n\n\t// override the canLoad method\n\tself.hook('instead','canLoad',(query:string)=>{\n\n\t\t// first time the query has been seen\n\t\tif( !(query in pagination) ){\n\t\t\treturn orig_canLoad.call(self,query);\n\t\t}\n\n\t\treturn canLoadMore(query);\n\t});\n\n\n\t// wrap the load\n\tself.hook('instead','loadCallback',( options:TomOption[], optgroups:TomOption[])=>{\n\n\t\tif( !loading_more ){\n\t\t\tself.clearOptions();\n\t\t}\n\n\t\torig_loadCallback.call( self, options, optgroups);\n\n\t\tloading_more = false;\n\t});\n\n\n\t// add templates to dropdown\n\t//\tloading_more if we have another url in the queue\n\t//\tno_more_results if we don't have another url in the queue\n\tself.hook('after','refreshOptions',()=>{\n\n\t\tconst query\t\t= self.lastValue;\n\t\tvar option;\n\n\t\tif( canLoadMore(query) ){\n\t\t\toption = self.render('loading_more',{query:query});\n\t\t\tif( option ) option.setAttribute('data-selectable',''); // so that navigating dropdown with [down] keypresses can navigate to this node\n\n\t\t}else if( (query in pagination) && !dropdown_content.querySelector('.no-results') ){\n\t\t\toption = self.render('no_more_results',{query:query});\n\t\t}\n\n\t\tif( option ){\n\t\t\taddClasses(option,self.settings.optionClass);\n\t\t\tdropdown_content.append( option );\n\t\t}\n\n\t});\n\n\n\t// add scroll listener and default templates\n\tself.on('initialize',()=>{\n\t\tdropdown_content = self.dropdown_content;\n\n\t\t// default templates\n\t\tself.settings.render = Object.assign({}, {\n\t\t\tloading_more:function(){\n\t\t\t\treturn `<div class=\"loading-more-results\">Loading more results ... </div>`;\n\t\t\t},\n\t\t\tno_more_results:function(){\n\t\t\t\treturn `<div class=\"no-more-results\">No more results</div>`;\n\t\t\t}\n\t\t},self.settings.render);\n\n\n\t\t// watch dropdown content scroll position\n\t\tdropdown_content.addEventListener('scroll',function(){\n\n\t\t\tconst scroll_percent = dropdown_content.clientHeight / (dropdown_content.scrollHeight - dropdown_content.scrollTop);\n\t\t\tif( scroll_percent < 0.95 ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// !important: this will get checked again in load() but we still need to check here otherwise loading_more will be set to true\n\t\t\tif( !canLoadMore(self.lastValue) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// don't call load() too much\n\t\t\tif( loading_more ) return;\n\n\n\t\t\tloading_more = true;\n\t\t\tself.load.call(self,self.lastValue);\n\t\t});\n\t});\n\n});\n", "import d from \"./node_modules/tom-select/dist/esm/tom-select.complete.js\";export default d;"],
  "mappings": "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",
  "names": ["forEvents", "events", "callback", "split", "forEach", "event", "MicroEvent", "constructor", "_events", "on", "fct", "push", "off", "n", "arguments", "length", "splice", "indexOf", "trigger", "args", "self", "apply", "MicroPlugin", "Interface", "plugins", "names", "settings", "requested", "loaded", "define", "name", "fn", "initializePlugins", "key", "queue", "Array", "isArray", "plugin", "options", "hasOwnProperty", "shift", "require", "loadPlugin", "Error", "latin_pat", "accent_pat", "accent_reg", "RegExp", "diacritic_patterns", "latin_convert", "convert_pat", "Object", "keys", "join", "code_points", "asciifold", "str", "normalize", "replace", "toLowerCase", "foreignletter", "arrayToPattern", "chars", "glue", "allSubstrings", "input", "result", "substring", "subresult", "tmp", "slice", "charAt", "unshift", "generateDiacritics", "diacritics", "code_range", "i", "diacritic", "String", "fromCharCode", "latin", "latin_chars", "sort", "a", "b", "substrings", "pattern", "map", "sub_pat", "l", "diacriticRegexPoints", "regex", "undefined", "decomposed", "part", "no_accent", "composed_part", "getAttr", "obj", "getAttrNesting", "scoreValue", "value", "token", "weight", "score", "pos", "search", "string", "escape_regex", "propToArray", "iterate", "object", "cmp", "Sifter", "items", "tokenize", "query", "respect_word_boundaries", "weights", "tokens", "words", "field_regex", "word", "field_match", "field", "match", "getScoreFunction", "prepareSearch", "_getScoreFunction", "token_count", "fields", "field_count", "getAttrFn", "scoreObject", "data", "sum", "conjunction", "getSortFunction", "_getSortFunction", "implicit_score", "sort_empty", "sort_flds", "multipliers", "get_field", "id", "direction", "sort_flds_count", "sort_fld", "multiplier", "optsUser", "assign", "trim", "total", "nesting", "fn_score", "item", "filter", "fn_sort", "limit", "getDom", "jquery", "HTMLElement", "div", "document", "createElement", "innerHTML", "firstChild", "querySelector", "escapeQuery", "triggerEvent", "dom_el", "event_name", "createEvent", "initEvent", "dispatchEvent", "applyCSS", "css", "style", "addClasses", "elmts", "classes", "norm_classes", "classesArray", "castAsArray", "el", "cls", "classList", "add", "removeClasses", "remove", "_classes", "concat", "Boolean", "arg", "parentMatch", "target", "selector", "wrapper", "contains", "matches", "parentNode", "getTail", "list", "isEmptyObject", "nodeIndex", "amongst", "nodeName", "previousElementSibling", "setAttr", "attrs", "attr", "val", "removeAttribute", "setAttribute", "replaceNode", "existing", "replacement", "replaceChild", "highlight", "element", "highlightText", "node", "spannode", "className", "middlebit", "splitText", "index", "middleclone", "cloneNode", "appendChild", "highlightChildren", "nodeType", "childNodes", "test", "tagName", "highlightRecursive", "removeHighlight", "elements", "querySelectorAll", "prototype", "call", "parent", "KEY_A", "KEY_RETURN", "KEY_ESC", "KEY_LEFT", "KEY_UP", "KEY_RIGHT", "KEY_DOWN", "KEY_BACKSPACE", "KEY_DELETE", "KEY_TAB", "IS_MAC", "navigator", "userAgent", "KEY_SHORTCUT", "optgroups", "delimiter", "splitOn", "persist", "create", "createOnBlur", "createFilter", "openOnFocus", "shouldOpen", "maxOptions", "maxItems", "hideSelected", "duplicates", "addPrecedence", "selectOnTab", "preload", "allowEmptyOption", "closeAfterSelect", "loadThrottle", "loadingClass", "dataAttr", "optgroupField", "valueField", "labelField", "disabledField", "optgroupLabelField", "optgroupValueField", "lockOptgroupOrder", "sortField", "searchField", "searchConjunction", "mode", "wrapperClass", "inputClass", "dropdownClass", "dropdownContentClass", "itemClass", "optionClass", "dropdownParent", "controlInput", "copyClassesToDropdown", "placeholder", "hidePlaceholder", "shouldLoad", "render", "hash_key", "get_hash", "escape_html", "loadDebounce", "delay", "timeout", "loading", "Math", "max", "clearTimeout", "setTimeout", "loadedSearches", "debounce_events", "types", "type", "event_args", "getSelection", "start", "selectionStart", "selectionEnd", "preventDefault", "evt", "stop", "stopPropagation", "addEvent", "addEventListener", "isKeyDown", "key_name", "count", "altKey", "ctrlKey", "shiftKey", "metaKey", "getId", "existing_id", "getAttribute", "addSlashes", "append", "getSettings", "settings_user", "defaults", "attr_data", "field_label", "field_value", "field_disabled", "field_optgroup", "field_optgroup_label", "field_optgroup_value", "tag_name", "option", "textContent", "settings_element", "init_select", "optionsMap", "group_count", "readData", "dataset", "json", "JSON", "parse", "addOption", "group", "arr", "option_data", "disabled", "$option", "selected", "addGroup", "optgroup", "optgroup_data", "children", "hasAttribute", "child", "init_textbox", "data_raw", "values", "opt", "instance_i", "TomSelect", "input_arg", "order", "tab_key", "isOpen", "isDisabled", "isInvalid", "isLocked", "isFocused", "isInputHidden", "isSetup", "ignoreFocus", "hasOptions", "lastValue", "caretPos", "activeOption", "activeItems", "userOptions", "renderCache", "dir", "tomselect", "computedStyle", "window", "getComputedStyle", "getPropertyValue", "tabIndex", "is_select_tag", "rtl", "inputId", "isRequired", "required", "sifter", "setupOptions", "setupCallbacks", "setupTemplates", "control", "control_input", "dropdown", "dropdown_content", "inputMode", "classes_plugins", "control_id", "passive_event", "passive", "listboxId", "_render", "role", "haspopup", "label", "for", "label_id", "width", "multiple", "load", "onOptionSelect", "target_match", "onItemSelect", "onClick", "e", "onKeyDown", "onKeyUp", "onKeyPress", "positionDropdown", "onBlur", "onFocus", "onPaste", "doc_mousedown", "composedPath", "blur", "inputState", "win_scroll", "_destroy", "removeEventListener", "revertSettings", "hidden", "insertAdjacentElement", "setValue", "refreshState", "updateOriginalInput", "refreshItems", "close", "disable", "onChange", "setup", "registerOption", "registerOptionGroup", "templates", "escape", "callbacks", "clearActiveItems", "focus", "onMouseDown", "isFull", "pastedText", "inputValue", "splitInput", "piece", "createItem", "character", "keyCode", "which", "constants", "selectAll", "open", "next", "getAdjacent", "setActiveOption", "prev", "advanceSelection", "deleteSelection", "refreshOptions", "wasFocused", "showInput", "deactivate", "setActiveItem", "setCaret", "parentElement", "lastQuery", "addItem", "canLoad", "loadCallback", "bind", "clearActiveOption", "setTextboxValue", "changed", "getValue", "silent", "clear", "addItems", "setMaxItems", "eventName", "begin", "end", "swap", "last", "getLastActive", "setActiveItemClass", "removeActiveItem", "hideInput", "last_active", "idx", "scrollToOption", "behavior", "content", "height_menu", "clientHeight", "scrollTop", "height_item", "offsetHeight", "y", "getBoundingClientRect", "top", "scroll", "scrollBehavior", "controlChildren", "getSearchOptions", "calculateScore", "currentResults", "hashed", "triggerDropdown", "j", "k", "html", "has_create_option", "active_value", "active_group", "groups", "groups_order", "results", "active_option", "show_dropdown", "closest", "min", "opt_value", "option_el", "getOption", "toggle", "includes", "createDocumentFragment", "$id", "a_order", "$order", "b_order", "group_options", "header", "group_html", "tok", "add_template", "template", "insertBefore", "canCreate", "active_index", "selectable", "dat", "addOptionGroup", "hashed_id", "removeOptionGroup", "clearCache", "clearOptionGroups", "updateOption", "item_new", "index_item", "value_new", "getItem", "uncacheValue", "option_new", "removeOption", "removeItem", "clearOptions", "remove_node", "cache_items", "cache_options", "rendered", "all", "x", "isPending", "wasFull", "insertAtCaret", "caret", "output", "lock", "created", "unlock", "refreshValidityState", "checkValidity", "invalid", "opts", "AddSelected", "prepend", "reuse_opt", "visibility", "display", "context", "rect", "scrollY", "left", "scrollX", "selection", "tail", "rm_items", "onDelete", "pop", "adjacent", "nextElementSibling", "new_pos", "from", "getElementsByClassName", "enable", "destroy", "templateName", "hook", "when", "method", "new_fn", "orig_method", "result_new", "joined", "orig_onOptionSelect", "UpdateCheckbox", "checkbox", "checked", "orig_render_option", "title", "button", "$", "sortable", "orig_lock", "orig_unlock", "$control", "forcePlaceholderSize", "ui", "helper", "overflow", "each", "headerClass", "titleRowClass", "labelClass", "closeClass", "close_link", "setTabIndex", "tabindex", "test_input", "cssText", "transfer_styles", "style_name", "resize", "clientWidth", "orig_deleteSelection", "orig_keydown", "previousSibling", "nextSibling", "orig_render_item", "close_button", "text", "orig_canLoad", "orig_clearActiveOption", "orig_loadCallback", "pagination", "loading_more", "firstUrl", "canLoadMore", "setNextUrl", "next_url", "getUrl", "no_more_results", "scroll_percent", "scrollHeight"]
}
